"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tanstack";
exports.ids = ["vendor-chunks/@tanstack"];
exports.modules = {

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/focusManager.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusManager: () => (/* binding */ FocusManager),\n/* harmony export */   focusManager: () => (/* binding */ focusManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/focusManager.ts\n\n\nvar FocusManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    #focused;\n    #cleanup;\n    #setup;\n    constructor(){\n        super();\n        this.#setup = (onFocus)=>{\n            if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n                const listener = ()=>onFocus();\n                window.addEventListener(\"visibilitychange\", listener, false);\n                return ()=>{\n                    window.removeEventListener(\"visibilitychange\", listener);\n                };\n            }\n            return;\n        };\n    }\n    onSubscribe() {\n        if (!this.#cleanup) {\n            this.setEventListener(this.#setup);\n        }\n    }\n    onUnsubscribe() {\n        if (!this.hasListeners()) {\n            this.#cleanup?.();\n            this.#cleanup = void 0;\n        }\n    }\n    setEventListener(setup) {\n        this.#setup = setup;\n        this.#cleanup?.();\n        this.#cleanup = setup((focused)=>{\n            if (typeof focused === \"boolean\") {\n                this.setFocused(focused);\n            } else {\n                this.onFocus();\n            }\n        });\n    }\n    setFocused(focused) {\n        const changed = this.#focused !== focused;\n        if (changed) {\n            this.#focused = focused;\n            this.onFocus();\n        }\n    }\n    onFocus() {\n        const isFocused = this.isFocused();\n        this.listeners.forEach((listener)=>{\n            listener(isFocused);\n        });\n    }\n    isFocused() {\n        if (typeof this.#focused === \"boolean\") {\n            return this.#focused;\n        }\n        return globalThis.document?.visibilityState !== \"hidden\";\n    }\n};\nvar focusManager = new FocusManager();\n //# sourceMappingURL=focusManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL2ZvY3VzTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0JBQXNCO0FBQzJCO0FBQ1g7QUFDdEMsSUFBSUUsZUFBZSxjQUFjRiwwREFBWUE7SUFDM0MsQ0FBQ0csT0FBTyxDQUFDO0lBQ1QsQ0FBQ0MsT0FBTyxDQUFDO0lBQ1QsQ0FBQ0MsS0FBSyxDQUFDO0lBQ1BDLGFBQWM7UUFDWixLQUFLO1FBQ0wsSUFBSSxDQUFDLENBQUNELEtBQUssR0FBRyxDQUFDRTtZQUNiLElBQUksQ0FBQ04sK0NBQVFBLElBQUlPLE9BQU9DLGdCQUFnQixFQUFFO2dCQUN4QyxNQUFNQyxXQUFXLElBQU1IO2dCQUN2QkMsT0FBT0MsZ0JBQWdCLENBQUMsb0JBQW9CQyxVQUFVO2dCQUN0RCxPQUFPO29CQUNMRixPQUFPRyxtQkFBbUIsQ0FBQyxvQkFBb0JEO2dCQUNqRDtZQUNGO1lBQ0E7UUFDRjtJQUNGO0lBQ0FFLGNBQWM7UUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUNSLE9BQU8sRUFBRTtZQUNsQixJQUFJLENBQUNTLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDUixLQUFLO1FBQ25DO0lBQ0Y7SUFDQVMsZ0JBQWdCO1FBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQ0MsWUFBWSxJQUFJO1lBQ3hCLElBQUksQ0FBQyxDQUFDWCxPQUFPO1lBQ2IsSUFBSSxDQUFDLENBQUNBLE9BQU8sR0FBRyxLQUFLO1FBQ3ZCO0lBQ0Y7SUFDQVMsaUJBQWlCUixLQUFLLEVBQUU7UUFDdEIsSUFBSSxDQUFDLENBQUNBLEtBQUssR0FBR0E7UUFDZCxJQUFJLENBQUMsQ0FBQ0QsT0FBTztRQUNiLElBQUksQ0FBQyxDQUFDQSxPQUFPLEdBQUdDLE1BQU0sQ0FBQ0Y7WUFDckIsSUFBSSxPQUFPQSxZQUFZLFdBQVc7Z0JBQ2hDLElBQUksQ0FBQ2EsVUFBVSxDQUFDYjtZQUNsQixPQUFPO2dCQUNMLElBQUksQ0FBQ0ksT0FBTztZQUNkO1FBQ0Y7SUFDRjtJQUNBUyxXQUFXYixPQUFPLEVBQUU7UUFDbEIsTUFBTWMsVUFBVSxJQUFJLENBQUMsQ0FBQ2QsT0FBTyxLQUFLQTtRQUNsQyxJQUFJYyxTQUFTO1lBQ1gsSUFBSSxDQUFDLENBQUNkLE9BQU8sR0FBR0E7WUFDaEIsSUFBSSxDQUFDSSxPQUFPO1FBQ2Q7SUFDRjtJQUNBQSxVQUFVO1FBQ1IsTUFBTVcsWUFBWSxJQUFJLENBQUNBLFNBQVM7UUFDaEMsSUFBSSxDQUFDQyxTQUFTLENBQUNDLE9BQU8sQ0FBQyxDQUFDVjtZQUN0QkEsU0FBU1E7UUFDWDtJQUNGO0lBQ0FBLFlBQVk7UUFDVixJQUFJLE9BQU8sSUFBSSxDQUFDLENBQUNmLE9BQU8sS0FBSyxXQUFXO1lBQ3RDLE9BQU8sSUFBSSxDQUFDLENBQUNBLE9BQU87UUFDdEI7UUFDQSxPQUFPa0IsV0FBV0MsUUFBUSxFQUFFQyxvQkFBb0I7SUFDbEQ7QUFDRjtBQUNBLElBQUlDLGVBQWUsSUFBSXRCO0FBSXJCLENBQ0Ysd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudF9yZWxhdGlvbnNoaXBfbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9mb2N1c01hbmFnZXIuanM/YWJmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZm9jdXNNYW5hZ2VyLnRzXG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUuanNcIjtcbmltcG9ydCB7IGlzU2VydmVyIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbnZhciBGb2N1c01hbmFnZXIgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gICNmb2N1c2VkO1xuICAjY2xlYW51cDtcbiAgI3NldHVwO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI3NldHVwID0gKG9uRm9jdXMpID0+IHtcbiAgICAgIGlmICghaXNTZXJ2ZXIgJiYgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgY29uc3QgbGlzdGVuZXIgPSAoKSA9PiBvbkZvY3VzKCk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLCBsaXN0ZW5lciwgZmFsc2UpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLCBsaXN0ZW5lcik7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfTtcbiAgfVxuICBvblN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuI2NsZWFudXApIHtcbiAgICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcih0aGlzLiNzZXR1cCk7XG4gICAgfVxuICB9XG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB0aGlzLiNjbGVhbnVwPy4oKTtcbiAgICAgIHRoaXMuI2NsZWFudXAgPSB2b2lkIDA7XG4gICAgfVxuICB9XG4gIHNldEV2ZW50TGlzdGVuZXIoc2V0dXApIHtcbiAgICB0aGlzLiNzZXR1cCA9IHNldHVwO1xuICAgIHRoaXMuI2NsZWFudXA/LigpO1xuICAgIHRoaXMuI2NsZWFudXAgPSBzZXR1cCgoZm9jdXNlZCkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBmb2N1c2VkID09PSBcImJvb2xlYW5cIikge1xuICAgICAgICB0aGlzLnNldEZvY3VzZWQoZm9jdXNlZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm9uRm9jdXMoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBzZXRGb2N1c2VkKGZvY3VzZWQpIHtcbiAgICBjb25zdCBjaGFuZ2VkID0gdGhpcy4jZm9jdXNlZCAhPT0gZm9jdXNlZDtcbiAgICBpZiAoY2hhbmdlZCkge1xuICAgICAgdGhpcy4jZm9jdXNlZCA9IGZvY3VzZWQ7XG4gICAgICB0aGlzLm9uRm9jdXMoKTtcbiAgICB9XG4gIH1cbiAgb25Gb2N1cygpIHtcbiAgICBjb25zdCBpc0ZvY3VzZWQgPSB0aGlzLmlzRm9jdXNlZCgpO1xuICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICBsaXN0ZW5lcihpc0ZvY3VzZWQpO1xuICAgIH0pO1xuICB9XG4gIGlzRm9jdXNlZCgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuI2ZvY3VzZWQgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgICByZXR1cm4gdGhpcy4jZm9jdXNlZDtcbiAgICB9XG4gICAgcmV0dXJuIGdsb2JhbFRoaXMuZG9jdW1lbnQ/LnZpc2liaWxpdHlTdGF0ZSAhPT0gXCJoaWRkZW5cIjtcbiAgfVxufTtcbnZhciBmb2N1c01hbmFnZXIgPSBuZXcgRm9jdXNNYW5hZ2VyKCk7XG5leHBvcnQge1xuICBGb2N1c01hbmFnZXIsXG4gIGZvY3VzTWFuYWdlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvY3VzTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOlsiU3Vic2NyaWJhYmxlIiwiaXNTZXJ2ZXIiLCJGb2N1c01hbmFnZXIiLCJmb2N1c2VkIiwiY2xlYW51cCIsInNldHVwIiwiY29uc3RydWN0b3IiLCJvbkZvY3VzIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImxpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm9uU3Vic2NyaWJlIiwic2V0RXZlbnRMaXN0ZW5lciIsIm9uVW5zdWJzY3JpYmUiLCJoYXNMaXN0ZW5lcnMiLCJzZXRGb2N1c2VkIiwiY2hhbmdlZCIsImlzRm9jdXNlZCIsImxpc3RlbmVycyIsImZvckVhY2giLCJnbG9iYWxUaGlzIiwiZG9jdW1lbnQiLCJ2aXNpYmlsaXR5U3RhdGUiLCJmb2N1c01hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasNextPage: () => (/* binding */ hasNextPage),\n/* harmony export */   hasPreviousPage: () => (/* binding */ hasPreviousPage),\n/* harmony export */   infiniteQueryBehavior: () => (/* binding */ infiniteQueryBehavior)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/infiniteQueryBehavior.ts\n\nfunction infiniteQueryBehavior(pages) {\n    return {\n        onFetch: (context, query)=>{\n            const options = context.options;\n            const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n            const oldPages = context.state.data?.pages || [];\n            const oldPageParams = context.state.data?.pageParams || [];\n            let result = {\n                pages: [],\n                pageParams: []\n            };\n            let currentPage = 0;\n            const fetchFn = async ()=>{\n                let cancelled = false;\n                const addSignalProperty = (object)=>{\n                    Object.defineProperty(object, \"signal\", {\n                        enumerable: true,\n                        get: ()=>{\n                            if (context.signal.aborted) {\n                                cancelled = true;\n                            } else {\n                                context.signal.addEventListener(\"abort\", ()=>{\n                                    cancelled = true;\n                                });\n                            }\n                            return context.signal;\n                        }\n                    });\n                };\n                const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureQueryFn)(context.options, context.fetchOptions);\n                const fetchPage = async (data, param, previous)=>{\n                    if (cancelled) {\n                        return Promise.reject();\n                    }\n                    if (param == null && data.pages.length) {\n                        return Promise.resolve(data);\n                    }\n                    const queryFnContext = {\n                        client: context.client,\n                        queryKey: context.queryKey,\n                        pageParam: param,\n                        direction: previous ? \"backward\" : \"forward\",\n                        meta: context.options.meta\n                    };\n                    addSignalProperty(queryFnContext);\n                    const page = await queryFn(queryFnContext);\n                    const { maxPages } = context.options;\n                    const addTo = previous ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToStart : _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToEnd;\n                    return {\n                        pages: addTo(data.pages, page, maxPages),\n                        pageParams: addTo(data.pageParams, param, maxPages)\n                    };\n                };\n                if (direction && oldPages.length) {\n                    const previous = direction === \"backward\";\n                    const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n                    const oldData = {\n                        pages: oldPages,\n                        pageParams: oldPageParams\n                    };\n                    const param = pageParamFn(options, oldData);\n                    result = await fetchPage(oldData, param, previous);\n                } else {\n                    const remainingPages = pages ?? oldPages.length;\n                    do {\n                        const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n                        if (currentPage > 0 && param == null) {\n                            break;\n                        }\n                        result = await fetchPage(result, param);\n                        currentPage++;\n                    }while (currentPage < remainingPages);\n                }\n                return result;\n            };\n            if (context.options.persister) {\n                context.fetchFn = ()=>{\n                    return context.options.persister?.(fetchFn, {\n                        client: context.client,\n                        queryKey: context.queryKey,\n                        meta: context.options.meta,\n                        signal: context.signal\n                    }, query);\n                };\n            } else {\n                context.fetchFn = fetchFn;\n            }\n        }\n    };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n    const lastIndex = pages.length - 1;\n    return pages.length > 0 ? options.getNextPageParam(pages[lastIndex], pages, pageParams[lastIndex], pageParams) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n    return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n    if (!data) return false;\n    return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n    if (!data || !options.getPreviousPageParam) return false;\n    return getPreviousPageParam(options, data) != null;\n}\n //# sourceMappingURL=infiniteQueryBehavior.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/mutation.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mutation: () => (/* binding */ Mutation),\n/* harmony export */   getDefaultState: () => (/* binding */ getDefaultState)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryer.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js\");\n// src/mutation.ts\n\n\n\nvar Mutation = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n    #observers;\n    #mutationCache;\n    #retryer;\n    constructor(config){\n        super();\n        this.mutationId = config.mutationId;\n        this.#mutationCache = config.mutationCache;\n        this.#observers = [];\n        this.state = config.state || getDefaultState();\n        this.setOptions(config.options);\n        this.scheduleGc();\n    }\n    setOptions(options) {\n        this.options = options;\n        this.updateGcTime(this.options.gcTime);\n    }\n    get meta() {\n        return this.options.meta;\n    }\n    addObserver(observer) {\n        if (!this.#observers.includes(observer)) {\n            this.#observers.push(observer);\n            this.clearGcTimeout();\n            this.#mutationCache.notify({\n                type: \"observerAdded\",\n                mutation: this,\n                observer\n            });\n        }\n    }\n    removeObserver(observer) {\n        this.#observers = this.#observers.filter((x)=>x !== observer);\n        this.scheduleGc();\n        this.#mutationCache.notify({\n            type: \"observerRemoved\",\n            mutation: this,\n            observer\n        });\n    }\n    optionalRemove() {\n        if (!this.#observers.length) {\n            if (this.state.status === \"pending\") {\n                this.scheduleGc();\n            } else {\n                this.#mutationCache.remove(this);\n            }\n        }\n    }\n    continue() {\n        return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n        this.execute(this.state.variables);\n    }\n    async execute(variables) {\n        const onContinue = ()=>{\n            this.#dispatch({\n                type: \"continue\"\n            });\n        };\n        this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.createRetryer)({\n            fn: ()=>{\n                if (!this.options.mutationFn) {\n                    return Promise.reject(new Error(\"No mutationFn found\"));\n                }\n                return this.options.mutationFn(variables);\n            },\n            onFail: (failureCount, error)=>{\n                this.#dispatch({\n                    type: \"failed\",\n                    failureCount,\n                    error\n                });\n            },\n            onPause: ()=>{\n                this.#dispatch({\n                    type: \"pause\"\n                });\n            },\n            onContinue,\n            retry: this.options.retry ?? 0,\n            retryDelay: this.options.retryDelay,\n            networkMode: this.options.networkMode,\n            canRun: ()=>this.#mutationCache.canRun(this)\n        });\n        const restored = this.state.status === \"pending\";\n        const isPaused = !this.#retryer.canStart();\n        try {\n            if (restored) {\n                onContinue();\n            } else {\n                this.#dispatch({\n                    type: \"pending\",\n                    variables,\n                    isPaused\n                });\n                await this.#mutationCache.config.onMutate?.(variables, this);\n                const context = await this.options.onMutate?.(variables);\n                if (context !== this.state.context) {\n                    this.#dispatch({\n                        type: \"pending\",\n                        context,\n                        variables,\n                        isPaused\n                    });\n                }\n            }\n            const data = await this.#retryer.start();\n            await this.#mutationCache.config.onSuccess?.(data, variables, this.state.context, this);\n            await this.options.onSuccess?.(data, variables, this.state.context);\n            await this.#mutationCache.config.onSettled?.(data, null, this.state.variables, this.state.context, this);\n            await this.options.onSettled?.(data, null, variables, this.state.context);\n            this.#dispatch({\n                type: \"success\",\n                data\n            });\n            return data;\n        } catch (error) {\n            try {\n                await this.#mutationCache.config.onError?.(error, variables, this.state.context, this);\n                await this.options.onError?.(error, variables, this.state.context);\n                await this.#mutationCache.config.onSettled?.(void 0, error, this.state.variables, this.state.context, this);\n                await this.options.onSettled?.(void 0, error, variables, this.state.context);\n                throw error;\n            } finally{\n                this.#dispatch({\n                    type: \"error\",\n                    error\n                });\n            }\n        } finally{\n            this.#mutationCache.runNext(this);\n        }\n    }\n    #dispatch(action) {\n        const reducer = (state)=>{\n            switch(action.type){\n                case \"failed\":\n                    return {\n                        ...state,\n                        failureCount: action.failureCount,\n                        failureReason: action.error\n                    };\n                case \"pause\":\n                    return {\n                        ...state,\n                        isPaused: true\n                    };\n                case \"continue\":\n                    return {\n                        ...state,\n                        isPaused: false\n                    };\n                case \"pending\":\n                    return {\n                        ...state,\n                        context: action.context,\n                        data: void 0,\n                        failureCount: 0,\n                        failureReason: null,\n                        error: null,\n                        isPaused: action.isPaused,\n                        status: \"pending\",\n                        variables: action.variables,\n                        submittedAt: Date.now()\n                    };\n                case \"success\":\n                    return {\n                        ...state,\n                        data: action.data,\n                        failureCount: 0,\n                        failureReason: null,\n                        error: null,\n                        status: \"success\",\n                        isPaused: false\n                    };\n                case \"error\":\n                    return {\n                        ...state,\n                        data: void 0,\n                        error: action.error,\n                        failureCount: state.failureCount + 1,\n                        failureReason: action.error,\n                        isPaused: false,\n                        status: \"error\"\n                    };\n            }\n        };\n        this.state = reducer(this.state);\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>{\n            this.#observers.forEach((observer)=>{\n                observer.onMutationUpdate(action);\n            });\n            this.#mutationCache.notify({\n                mutation: this,\n                type: \"updated\",\n                action\n            });\n        });\n    }\n};\nfunction getDefaultState() {\n    return {\n        context: void 0,\n        data: void 0,\n        error: null,\n        failureCount: 0,\n        failureReason: null,\n        isPaused: false,\n        status: \"idle\",\n        variables: void 0,\n        submittedAt: 0\n    };\n}\n //# sourceMappingURL=mutation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL211dGF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsa0JBQWtCO0FBQ2lDO0FBQ1I7QUFDRTtBQUM3QyxJQUFJRyxXQUFXLGNBQWNGLG9EQUFTQTtJQUNwQyxDQUFDRyxTQUFTLENBQUM7SUFDWCxDQUFDQyxhQUFhLENBQUM7SUFDZixDQUFDQyxPQUFPLENBQUM7SUFDVEMsWUFBWUMsTUFBTSxDQUFFO1FBQ2xCLEtBQUs7UUFDTCxJQUFJLENBQUNDLFVBQVUsR0FBR0QsT0FBT0MsVUFBVTtRQUNuQyxJQUFJLENBQUMsQ0FBQ0osYUFBYSxHQUFHRyxPQUFPSCxhQUFhO1FBQzFDLElBQUksQ0FBQyxDQUFDRCxTQUFTLEdBQUcsRUFBRTtRQUNwQixJQUFJLENBQUNNLEtBQUssR0FBR0YsT0FBT0UsS0FBSyxJQUFJQztRQUM3QixJQUFJLENBQUNDLFVBQVUsQ0FBQ0osT0FBT0ssT0FBTztRQUM5QixJQUFJLENBQUNDLFVBQVU7SUFDakI7SUFDQUYsV0FBV0MsT0FBTyxFQUFFO1FBQ2xCLElBQUksQ0FBQ0EsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0UsWUFBWSxDQUFDLElBQUksQ0FBQ0YsT0FBTyxDQUFDRyxNQUFNO0lBQ3ZDO0lBQ0EsSUFBSUMsT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNJLElBQUk7SUFDMUI7SUFDQUMsWUFBWUMsUUFBUSxFQUFFO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQ2YsU0FBUyxDQUFDZ0IsUUFBUSxDQUFDRCxXQUFXO1lBQ3ZDLElBQUksQ0FBQyxDQUFDZixTQUFTLENBQUNpQixJQUFJLENBQUNGO1lBQ3JCLElBQUksQ0FBQ0csY0FBYztZQUNuQixJQUFJLENBQUMsQ0FBQ2pCLGFBQWEsQ0FBQ2tCLE1BQU0sQ0FBQztnQkFDekJDLE1BQU07Z0JBQ05DLFVBQVUsSUFBSTtnQkFDZE47WUFDRjtR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Tzt3QkFDTCxHQUFHMUMsS0FBSzt3QkFDUjhDLE1BQU0sS0FBSzt3QkFDWFgsT0FBT2lCLE9BQU9qQixLQUFLO3dCQUNuQkQsY0FBY2xDLE1BQU1rQyxZQUFZLEdBQUc7d0JBQ25Db0IsZUFBZUYsT0FBT2pCLEtBQUs7d0JBQzNCTyxVQUFVO3dCQUNWckIsUUFBUTtvQkFDVjtZQUNKO1FBQ0Y7UUFDQSxJQUFJLENBQUNyQixLQUFLLEdBQUdxRCxRQUFRLElBQUksQ0FBQ3JELEtBQUs7UUFDL0JWLDREQUFhQSxDQUFDb0UsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQyxDQUFDaEUsU0FBUyxDQUFDaUUsT0FBTyxDQUFDLENBQUNsRDtnQkFDdkJBLFNBQVNtRCxnQkFBZ0IsQ0FBQ1I7WUFDNUI7WUFDQSxJQUFJLENBQUMsQ0FBQ3pELGFBQWEsQ0FBQ2tCLE1BQU0sQ0FBQztnQkFDekJFLFVBQVUsSUFBSTtnQkFDZEQsTUFBTTtnQkFDTnNDO1lBQ0Y7UUFDRjtJQUNGO0FBQ0Y7QUFDQSxTQUFTbkQ7SUFDUCxPQUFPO1FBQ0w0QyxTQUFTLEtBQUs7UUFDZEMsTUFBTSxLQUFLO1FBQ1hYLE9BQU87UUFDUEQsY0FBYztRQUNkb0IsZUFBZTtRQUNmWixVQUFVO1FBQ1ZyQixRQUFRO1FBQ1JJLFdBQVcsS0FBSztRQUNoQjhCLGFBQWE7SUFDZjtBQUNGO0FBSUUsQ0FDRixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkZW50X3JlbGF0aW9uc2hpcF9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL211dGF0aW9uLmpzPzM4NDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL211dGF0aW9uLnRzXG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSBcIi4vbm90aWZ5TWFuYWdlci5qc1wiO1xuaW1wb3J0IHsgUmVtb3ZhYmxlIH0gZnJvbSBcIi4vcmVtb3ZhYmxlLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVSZXRyeWVyIH0gZnJvbSBcIi4vcmV0cnllci5qc1wiO1xudmFyIE11dGF0aW9uID0gY2xhc3MgZXh0ZW5kcyBSZW1vdmFibGUge1xuICAjb2JzZXJ2ZXJzO1xuICAjbXV0YXRpb25DYWNoZTtcbiAgI3JldHJ5ZXI7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5tdXRhdGlvbklkID0gY29uZmlnLm11dGF0aW9uSWQ7XG4gICAgdGhpcy4jbXV0YXRpb25DYWNoZSA9IGNvbmZpZy5tdXRhdGlvbkNhY2hlO1xuICAgIHRoaXMuI29ic2VydmVycyA9IFtdO1xuICAgIHRoaXMuc3RhdGUgPSBjb25maWcuc3RhdGUgfHwgZ2V0RGVmYXVsdFN0YXRlKCk7XG4gICAgdGhpcy5zZXRPcHRpb25zKGNvbmZpZy5vcHRpb25zKTtcbiAgICB0aGlzLnNjaGVkdWxlR2MoKTtcbiAgfVxuICBzZXRPcHRpb25zKG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMudXBkYXRlR2NUaW1lKHRoaXMub3B0aW9ucy5nY1RpbWUpO1xuICB9XG4gIGdldCBtZXRhKCkge1xuICAgIHJldHVybiB0aGlzLm9wdGlvbnMubWV0YTtcbiAgfVxuICBhZGRPYnNlcnZlcihvYnNlcnZlcikge1xuICAgIGlmICghdGhpcy4jb2JzZXJ2ZXJzLmluY2x1ZGVzKG9ic2VydmVyKSkge1xuICAgICAgdGhpcy4jb2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpO1xuICAgICAgdGhpcy5jbGVhckdjVGltZW91dCgpO1xuICAgICAgdGhpcy4jbXV0YXRpb25DYWNoZS5ub3RpZnkoe1xuICAgICAgICB0eXBlOiBcIm9ic2VydmVyQWRkZWRcIixcbiAgICAgICAgbXV0YXRpb246IHRoaXMsXG4gICAgICAgIG9ic2VydmVyXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgcmVtb3ZlT2JzZXJ2ZXIob2JzZXJ2ZXIpIHtcbiAgICB0aGlzLiNvYnNlcnZlcnMgPSB0aGlzLiNvYnNlcnZlcnMuZmlsdGVyKCh4KSA9PiB4ICE9PSBvYnNlcnZlcik7XG4gICAgdGhpcy5zY2hlZHVsZUdjKCk7XG4gICAgdGhpcy4jbXV0YXRpb25DYWNoZS5ub3RpZnkoe1xuICAgICAgdHlwZTogXCJvYnNlcnZlclJlbW92ZWRcIixcbiAgICAgIG11dGF0aW9uOiB0aGlzLFxuICAgICAgb2JzZXJ2ZXJcbiAgICB9KTtcbiAgfVxuICBvcHRpb25hbFJlbW92ZSgpIHtcbiAgICBpZiAoIXRoaXMuI29ic2VydmVycy5sZW5ndGgpIHtcbiAgICAgIGlmICh0aGlzLnN0YXRlLnN0YXR1cyA9PT0gXCJwZW5kaW5nXCIpIHtcbiAgICAgICAgdGhpcy5zY2hlZHVsZUdjKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLiNtdXRhdGlvbkNhY2hlLnJlbW92ZSh0aGlzKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY29udGludWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3JldHJ5ZXI/LmNvbnRpbnVlKCkgPz8gLy8gY29udGludWluZyBhIG11dGF0aW9uIGFzc3VtZXMgdGhhdCB2YXJpYWJsZXMgYXJlIHNldCwgbXV0YXRpb24gbXVzdCBoYXZlIGJlZW4gZGVoeWRyYXRlZCBiZWZvcmVcbiAgICB0aGlzLmV4ZWN1dGUodGhpcy5zdGF0ZS52YXJpYWJsZXMpO1xuICB9XG4gIGFzeW5jIGV4ZWN1dGUodmFyaWFibGVzKSB7XG4gICAgY29uc3Qgb25Db250aW51ZSA9ICgpID0+IHtcbiAgICAgIHRoaXMuI2Rpc3BhdGNoKHsgdHlwZTogXCJjb250aW51ZVwiIH0pO1xuICAgIH07XG4gICAgdGhpcy4jcmV0cnllciA9IGNyZWF0ZVJldHJ5ZXIoe1xuICAgICAgZm46ICgpID0+IHtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMubXV0YXRpb25Gbikge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoXCJObyBtdXRhdGlvbkZuIGZvdW5kXCIpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zLm11dGF0aW9uRm4odmFyaWFibGVzKTtcbiAgICAgIH0sXG4gICAgICBvbkZhaWw6IChmYWlsdXJlQ291bnQsIGVycm9yKSA9PiB7XG4gICAgICAgIHRoaXMuI2Rpc3BhdGNoKHsgdHlwZTogXCJmYWlsZWRcIiwgZmFpbHVyZUNvdW50LCBlcnJvciB9KTtcbiAgICAgIH0sXG4gICAgICBvblBhdXNlOiAoKSA9PiB7XG4gICAgICAgIHRoaXMuI2Rpc3BhdGNoKHsgdHlwZTogXCJwYXVzZVwiIH0pO1xuICAgICAgfSxcbiAgICAgIG9uQ29udGludWUsXG4gICAgICByZXRyeTogdGhpcy5vcHRpb25zLnJldHJ5ID8/IDAsXG4gICAgICByZXRyeURlbGF5OiB0aGlzLm9wdGlvbnMucmV0cnlEZWxheSxcbiAgICAgIG5ldHdvcmtNb2RlOiB0aGlzLm9wdGlvbnMubmV0d29ya01vZGUsXG4gICAgICBjYW5SdW46ICgpID0+IHRoaXMuI211dGF0aW9uQ2FjaGUuY2FuUnVuKHRoaXMpXG4gICAgfSk7XG4gICAgY29uc3QgcmVzdG9yZWQgPSB0aGlzLnN0YXRlLnN0YXR1cyA9PT0gXCJwZW5kaW5nXCI7XG4gICAgY29uc3QgaXNQYXVzZWQgPSAhdGhpcy4jcmV0cnllci5jYW5TdGFydCgpO1xuICAgIHRyeSB7XG4gICAgICBpZiAocmVzdG9yZWQpIHtcbiAgICAgICAgb25Db250aW51ZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy4jZGlzcGF0Y2goeyB0eXBlOiBcInBlbmRpbmdcIiwgdmFyaWFibGVzLCBpc1BhdXNlZCB9KTtcbiAgICAgICAgYXdhaXQgdGhpcy4jbXV0YXRpb25DYWNoZS5jb25maWcub25NdXRhdGU/LihcbiAgICAgICAgICB2YXJpYWJsZXMsXG4gICAgICAgICAgdGhpc1xuICAgICAgICApO1xuICAgICAgICBjb25zdCBjb250ZXh0ID0gYXdhaXQgdGhpcy5vcHRpb25zLm9uTXV0YXRlPy4odmFyaWFibGVzKTtcbiAgICAgICAgaWYgKGNvbnRleHQgIT09IHRoaXMuc3RhdGUuY29udGV4dCkge1xuICAgICAgICAgIHRoaXMuI2Rpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6IFwicGVuZGluZ1wiLFxuICAgICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICAgIHZhcmlhYmxlcyxcbiAgICAgICAgICAgIGlzUGF1c2VkXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLiNyZXRyeWVyLnN0YXJ0KCk7XG4gICAgICBhd2FpdCB0aGlzLiNtdXRhdGlvbkNhY2hlLmNvbmZpZy5vblN1Y2Nlc3M/LihcbiAgICAgICAgZGF0YSxcbiAgICAgICAgdmFyaWFibGVzLFxuICAgICAgICB0aGlzLnN0YXRlLmNvbnRleHQsXG4gICAgICAgIHRoaXNcbiAgICAgICk7XG4gICAgICBhd2FpdCB0aGlzLm9wdGlvbnMub25TdWNjZXNzPy4oZGF0YSwgdmFyaWFibGVzLCB0aGlzLnN0YXRlLmNvbnRleHQpO1xuICAgICAgYXdhaXQgdGhpcy4jbXV0YXRpb25DYWNoZS5jb25maWcub25TZXR0bGVkPy4oXG4gICAgICAgIGRhdGEsXG4gICAgICAgIG51bGwsXG4gICAgICAgIHRoaXMuc3RhdGUudmFyaWFibGVzLFxuICAgICAgICB0aGlzLnN0YXRlLmNvbnRleHQsXG4gICAgICAgIHRoaXNcbiAgICAgICk7XG4gICAgICBhd2FpdCB0aGlzLm9wdGlvbnMub25TZXR0bGVkPy4oZGF0YSwgbnVsbCwgdmFyaWFibGVzLCB0aGlzLnN0YXRlLmNvbnRleHQpO1xuICAgICAgdGhpcy4jZGlzcGF0Y2goeyB0eXBlOiBcInN1Y2Nlc3NcIiwgZGF0YSB9KTtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCB0aGlzLiNtdXRhdGlvbkNhY2hlLmNvbmZpZy5vbkVycm9yPy4oXG4gICAgICAgICAgZXJyb3IsXG4gICAgICAgICAgdmFyaWFibGVzLFxuICAgICAgICAgIHRoaXMuc3RhdGUuY29udGV4dCxcbiAgICAgICAgICB0aGlzXG4gICAgICAgICk7XG4gICAgICAgIGF3YWl0IHRoaXMub3B0aW9ucy5vbkVycm9yPy4oXG4gICAgICAgICAgZXJyb3IsXG4gICAgICAgICAgdmFyaWFibGVzLFxuICAgICAgICAgIHRoaXMuc3RhdGUuY29udGV4dFxuICAgICAgICApO1xuICAgICAgICBhd2FpdCB0aGlzLiNtdXRhdGlvbkNhY2hlLmNvbmZpZy5vblNldHRsZWQ/LihcbiAgICAgICAgICB2b2lkIDAsXG4gICAgICAgICAgZXJyb3IsXG4gICAgICAgICAgdGhpcy5zdGF0ZS52YXJpYWJsZXMsXG4gICAgICAgICAgdGhpcy5zdGF0ZS5jb250ZXh0LFxuICAgICAgICAgIHRoaXNcbiAgICAgICAgKTtcbiAgICAgICAgYXdhaXQgdGhpcy5vcHRpb25zLm9uU2V0dGxlZD8uKFxuICAgICAgICAgIHZvaWQgMCxcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgICB2YXJpYWJsZXMsXG4gICAgICAgICAgdGhpcy5zdGF0ZS5jb250ZXh0XG4gICAgICAgICk7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdGhpcy4jZGlzcGF0Y2goeyB0eXBlOiBcImVycm9yXCIsIGVycm9yIH0pO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLiNtdXRhdGlvbkNhY2hlLnJ1bk5leHQodGhpcyk7XG4gICAgfVxuICB9XG4gICNkaXNwYXRjaChhY3Rpb24pIHtcbiAgICBjb25zdCByZWR1Y2VyID0gKHN0YXRlKSA9PiB7XG4gICAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgXCJmYWlsZWRcIjpcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgICBmYWlsdXJlQ291bnQ6IGFjdGlvbi5mYWlsdXJlQ291bnQsXG4gICAgICAgICAgICBmYWlsdXJlUmVhc29uOiBhY3Rpb24uZXJyb3JcbiAgICAgICAgICB9O1xuICAgICAgICBjYXNlIFwicGF1c2VcIjpcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgICBpc1BhdXNlZDogdHJ1ZVxuICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJjb250aW51ZVwiOlxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGlzUGF1c2VkOiBmYWxzZVxuICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgXCJwZW5kaW5nXCI6XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgY29udGV4dDogYWN0aW9uLmNvbnRleHQsXG4gICAgICAgICAgICBkYXRhOiB2b2lkIDAsXG4gICAgICAgICAgICBmYWlsdXJlQ291bnQ6IDAsXG4gICAgICAgICAgICBmYWlsdXJlUmVhc29uOiBudWxsLFxuICAgICAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgICAgICBpc1BhdXNlZDogYWN0aW9uLmlzUGF1c2VkLFxuICAgICAgICAgICAgc3RhdHVzOiBcInBlbmRpbmdcIixcbiAgICAgICAgICAgIHZhcmlhYmxlczogYWN0aW9uLnZhcmlhYmxlcyxcbiAgICAgICAgICAgIHN1Ym1pdHRlZEF0OiBEYXRlLm5vdygpXG4gICAgICAgICAgfTtcbiAgICAgICAgY2FzZSBcInN1Y2Nlc3NcIjpcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgICBkYXRhOiBhY3Rpb24uZGF0YSxcbiAgICAgICAgICAgIGZhaWx1cmVDb3VudDogMCxcbiAgICAgICAgICAgIGZhaWx1cmVSZWFzb246IG51bGwsXG4gICAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICAgIHN0YXR1czogXCJzdWNjZXNzXCIsXG4gICAgICAgICAgICBpc1BhdXNlZDogZmFsc2VcbiAgICAgICAgICB9O1xuICAgICAgICBjYXNlIFwiZXJyb3JcIjpcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgICBkYXRhOiB2b2lkIDAsXG4gICAgICAgICAgICBlcnJvcjogYWN0aW9uLmVycm9yLFxuICAgICAgICAgICAgZmFpbHVyZUNvdW50OiBzdGF0ZS5mYWlsdXJlQ291bnQgKyAxLFxuICAgICAgICAgICAgZmFpbHVyZVJlYXNvbjogYWN0aW9uLmVycm9yLFxuICAgICAgICAgICAgaXNQYXVzZWQ6IGZhbHNlLFxuICAgICAgICAgICAgc3RhdHVzOiBcImVycm9yXCJcbiAgICAgICAgICB9O1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5zdGF0ZSA9IHJlZHVjZXIodGhpcy5zdGF0ZSk7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLiNvYnNlcnZlcnMuZm9yRWFjaCgob2JzZXJ2ZXIpID0+IHtcbiAgICAgICAgb2JzZXJ2ZXIub25NdXRhdGlvblVwZGF0ZShhY3Rpb24pO1xuICAgICAgfSk7XG4gICAgICB0aGlzLiNtdXRhdGlvbkNhY2hlLm5vdGlmeSh7XG4gICAgICAgIG11dGF0aW9uOiB0aGlzLFxuICAgICAgICB0eXBlOiBcInVwZGF0ZWRcIixcbiAgICAgICAgYWN0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufTtcbmZ1bmN0aW9uIGdldERlZmF1bHRTdGF0ZSgpIHtcbiAgcmV0dXJuIHtcbiAgICBjb250ZXh0OiB2b2lkIDAsXG4gICAgZGF0YTogdm9pZCAwLFxuICAgIGVycm9yOiBudWxsLFxuICAgIGZhaWx1cmVDb3VudDogMCxcbiAgICBmYWlsdXJlUmVhc29uOiBudWxsLFxuICAgIGlzUGF1c2VkOiBmYWxzZSxcbiAgICBzdGF0dXM6IFwiaWRsZVwiLFxuICAgIHZhcmlhYmxlczogdm9pZCAwLFxuICAgIHN1Ym1pdHRlZEF0OiAwXG4gIH07XG59XG5leHBvcnQge1xuICBNdXRhdGlvbixcbiAgZ2V0RGVmYXVsdFN0YXRlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXV0YXRpb24uanMubWFwIl0sIm5hbWVzIjpbIm5vdGlmeU1hbmFnZXIiLCJSZW1vdmFibGUiLCJjcmVhdGVSZXRyeWVyIiwiTXV0YXRpb24iLCJvYnNlcnZlcnMiLCJtdXRhdGlvbkNhY2hlIiwicmV0cnllciIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwibXV0YXRpb25JZCIsInN0YXRlIiwiZ2V0RGVmYXVsdFN0YXRlIiwic2V0T3B0aW9ucyIsIm9wdGlvbnMiLCJzY2hlZHVsZUdjIiwidXBkYXRlR2NUaW1lIiwiZ2NUaW1lIiwibWV0YSIsImFkZE9ic2VydmVyIiwib2JzZXJ2ZXIiLCJpbmNsdWRlcyIsInB1c2giLCJjbGVhckdjVGltZW91dCIsIm5vdGlmeSIsInR5cGUiLCJtdXRhdGlvbiIsInJlbW92ZU9ic2VydmVyIiwiZmlsdGVyIiwieCIsIm9wdGlvbmFsUmVtb3ZlIiwibGVuZ3RoIiwic3RhdHVzIiwicmVtb3ZlIiwiY29udGludWUiLCJleGVjdXRlIiwidmFyaWFibGVzIiwib25Db250aW51ZSIsImRpc3BhdGNoIiwiZm4iLCJtdXRhdGlvbkZuIiwiUHJvbWlzZSIsInJlamVjdCIsIkVycm9yIiwib25GYWlsIiwiZmFpbHVyZUNvdW50IiwiZXJyb3IiLCJvblBhdXNlIiwicmV0cnkiLCJyZXRyeURlbGF5IiwibmV0d29ya01vZGUiLCJjYW5SdW4iLCJyZXN0b3JlZCIsImlzUGF1c2VkIiwiY2FuU3RhcnQiLCJvbk11dGF0ZSIsImNvbnRleHQiLCJkYXRhIiwic3RhcnQiLCJvblN1Y2Nlc3MiLCJvblNldHRsZWQiLCJvbkVycm9yIiwicnVuTmV4dCIsImFjdGlvbiIsInJlZHVjZXIiLCJmYWlsdXJlUmVhc29uIiwic3VibWl0dGVkQXQiLCJEYXRlIiwibm93IiwiYmF0Y2giLCJmb3JFYWNoIiwib25NdXRhdGlvblVwZGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/mutationCache.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationCache: () => (/* binding */ MutationCache)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _mutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n// src/mutationCache.ts\n\n\n\n\nvar MutationCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    constructor(config = {}){\n        super();\n        this.config = config;\n        this.#mutations = /* @__PURE__ */ new Set();\n        this.#scopes = /* @__PURE__ */ new Map();\n        this.#mutationId = 0;\n    }\n    #mutations;\n    #scopes;\n    #mutationId;\n    build(client, options, state) {\n        const mutation = new _mutation_js__WEBPACK_IMPORTED_MODULE_1__.Mutation({\n            mutationCache: this,\n            mutationId: ++this.#mutationId,\n            options: client.defaultMutationOptions(options),\n            state\n        });\n        this.add(mutation);\n        return mutation;\n    }\n    add(mutation) {\n        this.#mutations.add(mutation);\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n            const scopedMutations = this.#scopes.get(scope);\n            if (scopedMutations) {\n                scopedMutations.push(mutation);\n            } else {\n                this.#scopes.set(scope, [\n                    mutation\n                ]);\n            }\n        }\n        this.notify({\n            type: \"added\",\n            mutation\n        });\n    }\n    remove(mutation) {\n        if (this.#mutations.delete(mutation)) {\n            const scope = scopeFor(mutation);\n            if (typeof scope === \"string\") {\n                const scopedMutations = this.#scopes.get(scope);\n                if (scopedMutations) {\n                    if (scopedMutations.length > 1) {\n                        const index = scopedMutations.indexOf(mutation);\n                        if (index !== -1) {\n                            scopedMutations.splice(index, 1);\n                        }\n                    } else if (scopedMutations[0] === mutation) {\n                        this.#scopes.delete(scope);\n                    }\n                }\n            }\n        }\n        this.notify({\n            type: \"removed\",\n            mutation\n        });\n    }\n    canRun(mutation) {\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n            const mutationsWithSameScope = this.#scopes.get(scope);\n            const firstPendingMutation = mutationsWithSameScope?.find((m)=>m.state.status === \"pending\");\n            return !firstPendingMutation || firstPendingMutation === mutation;\n        } else {\n            return true;\n        }\n    }\n    runNext(mutation) {\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n            const foundMutation = this.#scopes.get(scope)?.find((m)=>m !== mutation && m.state.isPaused);\n            return foundMutation?.continue() ?? Promise.resolve();\n        } else {\n            return Promise.resolve();\n        }\n    }\n    clear() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>{\n            this.#mutations.forEach((mutation)=>{\n                this.notify({\n                    type: \"removed\",\n                    mutation\n                });\n            });\n            this.#mutations.clear();\n            this.#scopes.clear();\n        });\n    }\n    getAll() {\n        return Array.from(this.#mutations);\n    }\n    find(filters) {\n        const defaultedFilters = {\n            exact: true,\n            ...filters\n        };\n        return this.getAll().find((mutation)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(defaultedFilters, mutation));\n    }\n    findAll(filters = {}) {\n        return this.getAll().filter((mutation)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\n    }\n    notify(event) {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>{\n            this.listeners.forEach((listener)=>{\n                listener(event);\n            });\n        });\n    }\n    resumePausedMutations() {\n        const pausedMutations = this.getAll().filter((x)=>x.state.isPaused);\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>Promise.all(pausedMutations.map((mutation)=>mutation.continue().catch(_utils_js__WEBPACK_IMPORTED_MODULE_3__.noop))));\n    }\n};\nfunction scopeFor(mutation) {\n    return mutation.options.scope?.id;\n}\n //# sourceMappingURL=mutationCache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL211dGF0aW9uQ2FjaGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSx1QkFBdUI7QUFDNEI7QUFDVjtBQUNRO0FBQ0E7QUFDakQsSUFBSUssZ0JBQWdCLGNBQWNELDBEQUFZQTtJQUM1Q0UsWUFBWUMsU0FBUyxDQUFDLENBQUMsQ0FBRTtRQUN2QixLQUFLO1FBQ0wsSUFBSSxDQUFDQSxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDLENBQUNDLFNBQVMsR0FBRyxhQUFhLEdBQUcsSUFBSUM7UUFDdEMsSUFBSSxDQUFDLENBQUNDLE1BQU0sR0FBRyxhQUFhLEdBQUcsSUFBSUM7UUFDbkMsSUFBSSxDQUFDLENBQUNDLFVBQVUsR0FBRztJQUNyQjtJQUNBLENBQUNKLFNBQVMsQ0FBQztJQUNYLENBQUNFLE1BQU0sQ0FBQztJQUNSLENBQUNFLFVBQVUsQ0FBQztJQUNaQyxNQUFNQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsS0FBSyxFQUFFO1FBQzVCLE1BQU1DLFdBQVcsSUFBSWhCLGtEQUFRQSxDQUFDO1lBQzVCaUIsZUFBZSxJQUFJO1lBQ25CTixZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUNBLFVBQVU7WUFDOUJHLFNBQVNELE9BQU9LLHNCQUFzQixDQUFDSjtZQUN2Q0M7UUFDRjtRQUNBLElBQUksQ0FBQ0ksR0FBRyxDQUFDSDtRQUNULE9BQU9BO0lBQ1Q7SUFDQUcsSUFBSUgsUUFBUSxFQUFFO1FBQ1osSUFBSSxDQUFDLENBQUNULFNBQVMsQ0FBQ1ksR0FBRyxDQUFDSDtRQUNwQixNQUFNSSxRQUFRQyxTQUFTTDtRQUN2QixJQUFJLE9BQU9JLFVBQVUsVUFBVTtZQUM3QixNQUFNRSxrQkFBa0IsSUFBSSxDQUFDLENBQUNiLE1BQU0sQ0FBQ2MsR0FBRyxDQUFDSDtZQUN6QyxJQUFJRSxpQkFBaUI7Z0JBQ25CQSxnQkFBZ0JFLElBQUksQ0FBQ1I7WUFDdkIsT0FBTztn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LDREQUFhQSxDQUFDZ0QsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQ1csU0FBUyxDQUFDVixPQUFPLENBQUMsQ0FBQ1c7Z0JBQ3RCQSxTQUFTRjtZQUNYO1FBQ0Y7SUFDRjtJQUNBRyx3QkFBd0I7UUFDdEIsTUFBTUMsa0JBQWtCLElBQUksQ0FBQ1osTUFBTSxHQUFHTyxNQUFNLENBQUMsQ0FBQ00sSUFBTUEsRUFBRS9DLEtBQUssQ0FBQzJCLFFBQVE7UUFDcEUsT0FBTzNDLDREQUFhQSxDQUFDZ0QsS0FBSyxDQUN4QixJQUFNSCxRQUFRbUIsR0FBRyxDQUNmRixnQkFBZ0JHLEdBQUcsQ0FBQyxDQUFDaEQsV0FBYUEsU0FBUzJCLFFBQVEsR0FBR3NCLEtBQUssQ0FBQy9ELDJDQUFJQTtJQUd0RTtBQUNGO0FBQ0EsU0FBU21CLFNBQVNMLFFBQVE7SUFDeEIsT0FBT0EsU0FBU0YsT0FBTyxDQUFDTSxLQUFLLEVBQUU4QztBQUNqQztBQUdFLENBQ0YseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudF9yZWxhdGlvbnNoaXBfbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9tdXRhdGlvbkNhY2hlLmpzP2Y1NWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL211dGF0aW9uQ2FjaGUudHNcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tIFwiLi9ub3RpZnlNYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBNdXRhdGlvbiB9IGZyb20gXCIuL211dGF0aW9uLmpzXCI7XG5pbXBvcnQgeyBtYXRjaE11dGF0aW9uLCBub29wIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xudmFyIE11dGF0aW9uQ2FjaGUgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLiNtdXRhdGlvbnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICAgIHRoaXMuI3Njb3BlcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgdGhpcy4jbXV0YXRpb25JZCA9IDA7XG4gIH1cbiAgI211dGF0aW9ucztcbiAgI3Njb3BlcztcbiAgI211dGF0aW9uSWQ7XG4gIGJ1aWxkKGNsaWVudCwgb3B0aW9ucywgc3RhdGUpIHtcbiAgICBjb25zdCBtdXRhdGlvbiA9IG5ldyBNdXRhdGlvbih7XG4gICAgICBtdXRhdGlvbkNhY2hlOiB0aGlzLFxuICAgICAgbXV0YXRpb25JZDogKyt0aGlzLiNtdXRhdGlvbklkLFxuICAgICAgb3B0aW9uczogY2xpZW50LmRlZmF1bHRNdXRhdGlvbk9wdGlvbnMob3B0aW9ucyksXG4gICAgICBzdGF0ZVxuICAgIH0pO1xuICAgIHRoaXMuYWRkKG11dGF0aW9uKTtcbiAgICByZXR1cm4gbXV0YXRpb247XG4gIH1cbiAgYWRkKG11dGF0aW9uKSB7XG4gICAgdGhpcy4jbXV0YXRpb25zLmFkZChtdXRhdGlvbik7XG4gICAgY29uc3Qgc2NvcGUgPSBzY29wZUZvcihtdXRhdGlvbik7XG4gICAgaWYgKHR5cGVvZiBzY29wZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgY29uc3Qgc2NvcGVkTXV0YXRpb25zID0gdGhpcy4jc2NvcGVzLmdldChzY29wZSk7XG4gICAgICBpZiAoc2NvcGVkTXV0YXRpb25zKSB7XG4gICAgICAgIHNjb3BlZE11dGF0aW9ucy5wdXNoKG11dGF0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuI3Njb3Blcy5zZXQoc2NvcGUsIFttdXRhdGlvbl0pO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLm5vdGlmeSh7IHR5cGU6IFwiYWRkZWRcIiwgbXV0YXRpb24gfSk7XG4gIH1cbiAgcmVtb3ZlKG11dGF0aW9uKSB7XG4gICAgaWYgKHRoaXMuI211dGF0aW9ucy5kZWxldGUobXV0YXRpb24pKSB7XG4gICAgICBjb25zdCBzY29wZSA9IHNjb3BlRm9yKG11dGF0aW9uKTtcbiAgICAgIGlmICh0eXBlb2Ygc2NvcGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY29uc3Qgc2NvcGVkTXV0YXRpb25zID0gdGhpcy4jc2NvcGVzLmdldChzY29wZSk7XG4gICAgICAgIGlmIChzY29wZWRNdXRhdGlvbnMpIHtcbiAgICAgICAgICBpZiAoc2NvcGVkTXV0YXRpb25zLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gc2NvcGVkTXV0YXRpb25zLmluZGV4T2YobXV0YXRpb24pO1xuICAgICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgICBzY29wZWRNdXRhdGlvbnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2UgaWYgKHNjb3BlZE11dGF0aW9uc1swXSA9PT0gbXV0YXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuI3Njb3Blcy5kZWxldGUoc2NvcGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLm5vdGlmeSh7IHR5cGU6IFwicmVtb3ZlZFwiLCBtdXRhdGlvbiB9KTtcbiAgfVxuICBjYW5SdW4obXV0YXRpb24pIHtcbiAgICBjb25zdCBzY29wZSA9IHNjb3BlRm9yKG11dGF0aW9uKTtcbiAgICBpZiAodHlwZW9mIHNjb3BlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBjb25zdCBtdXRhdGlvbnNXaXRoU2FtZVNjb3BlID0gdGhpcy4jc2NvcGVzLmdldChzY29wZSk7XG4gICAgICBjb25zdCBmaXJzdFBlbmRpbmdNdXRhdGlvbiA9IG11dGF0aW9uc1dpdGhTYW1lU2NvcGU/LmZpbmQoXG4gICAgICAgIChtKSA9PiBtLnN0YXRlLnN0YXR1cyA9PT0gXCJwZW5kaW5nXCJcbiAgICAgICk7XG4gICAgICByZXR1cm4gIWZpcnN0UGVuZGluZ011dGF0aW9uIHx8IGZpcnN0UGVuZGluZ011dGF0aW9uID09PSBtdXRhdGlvbjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJ1bk5leHQobXV0YXRpb24pIHtcbiAgICBjb25zdCBzY29wZSA9IHNjb3BlRm9yKG11dGF0aW9uKTtcbiAgICBpZiAodHlwZW9mIHNjb3BlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBjb25zdCBmb3VuZE11dGF0aW9uID0gdGhpcy4jc2NvcGVzLmdldChzY29wZSk/LmZpbmQoKG0pID0+IG0gIT09IG11dGF0aW9uICYmIG0uc3RhdGUuaXNQYXVzZWQpO1xuICAgICAgcmV0dXJuIGZvdW5kTXV0YXRpb24/LmNvbnRpbnVlKCkgPz8gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG4gIH1cbiAgY2xlYXIoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLiNtdXRhdGlvbnMuZm9yRWFjaCgobXV0YXRpb24pID0+IHtcbiAgICAgICAgdGhpcy5ub3RpZnkoeyB0eXBlOiBcInJlbW92ZWRcIiwgbXV0YXRpb24gfSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuI211dGF0aW9ucy5jbGVhcigpO1xuICAgICAgdGhpcy4jc2NvcGVzLmNsZWFyKCk7XG4gICAgfSk7XG4gIH1cbiAgZ2V0QWxsKCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuI211dGF0aW9ucyk7XG4gIH1cbiAgZmluZChmaWx0ZXJzKSB7XG4gICAgY29uc3QgZGVmYXVsdGVkRmlsdGVycyA9IHsgZXhhY3Q6IHRydWUsIC4uLmZpbHRlcnMgfTtcbiAgICByZXR1cm4gdGhpcy5nZXRBbGwoKS5maW5kKFxuICAgICAgKG11dGF0aW9uKSA9PiBtYXRjaE11dGF0aW9uKGRlZmF1bHRlZEZpbHRlcnMsIG11dGF0aW9uKVxuICAgICk7XG4gIH1cbiAgZmluZEFsbChmaWx0ZXJzID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5nZXRBbGwoKS5maWx0ZXIoKG11dGF0aW9uKSA9PiBtYXRjaE11dGF0aW9uKGZpbHRlcnMsIG11dGF0aW9uKSk7XG4gIH1cbiAgbm90aWZ5KGV2ZW50KSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgICBsaXN0ZW5lcihldmVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICByZXN1bWVQYXVzZWRNdXRhdGlvbnMoKSB7XG4gICAgY29uc3QgcGF1c2VkTXV0YXRpb25zID0gdGhpcy5nZXRBbGwoKS5maWx0ZXIoKHgpID0+IHguc3RhdGUuaXNQYXVzZWQpO1xuICAgIHJldHVybiBub3RpZnlNYW5hZ2VyLmJhdGNoKFxuICAgICAgKCkgPT4gUHJvbWlzZS5hbGwoXG4gICAgICAgIHBhdXNlZE11dGF0aW9ucy5tYXAoKG11dGF0aW9uKSA9PiBtdXRhdGlvbi5jb250aW51ZSgpLmNhdGNoKG5vb3ApKVxuICAgICAgKVxuICAgICk7XG4gIH1cbn07XG5mdW5jdGlvbiBzY29wZUZvcihtdXRhdGlvbikge1xuICByZXR1cm4gbXV0YXRpb24ub3B0aW9ucy5zY29wZT8uaWQ7XG59XG5leHBvcnQge1xuICBNdXRhdGlvbkNhY2hlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXV0YXRpb25DYWNoZS5qcy5tYXAiXSwibmFtZXMiOlsibm90aWZ5TWFuYWdlciIsIk11dGF0aW9uIiwibWF0Y2hNdXRhdGlvbiIsIm5vb3AiLCJTdWJzY3JpYmFibGUiLCJNdXRhdGlvbkNhY2hlIiwiY29uc3RydWN0b3IiLCJjb25maWciLCJtdXRhdGlvbnMiLCJTZXQiLCJzY29wZXMiLCJNYXAiLCJtdXRhdGlvbklkIiwiYnVpbGQiLCJjbGllbnQiLCJvcHRpb25zIiwic3RhdGUiLCJtdXRhdGlvbiIsIm11dGF0aW9uQ2FjaGUiLCJkZWZhdWx0TXV0YXRpb25PcHRpb25zIiwiYWRkIiwic2NvcGUiLCJzY29wZUZvciIsInNjb3BlZE11dGF0aW9ucyIsImdldCIsInB1c2giLCJzZXQiLCJub3RpZnkiLCJ0eXBlIiwicmVtb3ZlIiwiZGVsZXRlIiwibGVuZ3RoIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiY2FuUnVuIiwibXV0YXRpb25zV2l0aFNhbWVTY29wZSIsImZpcnN0UGVuZGluZ011dGF0aW9uIiwiZmluZCIsIm0iLCJzdGF0dXMiLCJydW5OZXh0IiwiZm91bmRNdXRhdGlvbiIsImlzUGF1c2VkIiwiY29udGludWUiLCJQcm9taXNlIiwicmVzb2x2ZSIsImNsZWFyIiwiYmF0Y2giLCJmb3JFYWNoIiwiZ2V0QWxsIiwiQXJyYXkiLCJmcm9tIiwiZmlsdGVycyIsImRlZmF1bHRlZEZpbHRlcnMiLCJleGFjdCIsImZpbmRBbGwiLCJmaWx0ZXIiLCJldmVudCIsImxpc3RlbmVycyIsImxpc3RlbmVyIiwicmVzdW1lUGF1c2VkTXV0YXRpb25zIiwicGF1c2VkTXV0YXRpb25zIiwieCIsImFsbCIsIm1hcCIsImNhdGNoIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationObserver.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/mutationObserver.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationObserver: () => (/* binding */ MutationObserver)\n/* harmony export */ });\n/* harmony import */ var _mutation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mutation.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/mutationObserver.ts\n\n\n\n\nvar MutationObserver = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    #client;\n    #currentResult;\n    #currentMutation;\n    #mutateOptions;\n    constructor(client, options){\n        super();\n        this.#currentResult = void 0;\n        this.#client = client;\n        this.setOptions(options);\n        this.bindMethods();\n        this.#updateResult();\n    }\n    bindMethods() {\n        this.mutate = this.mutate.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n    setOptions(options) {\n        const prevOptions = this.options;\n        this.options = this.#client.defaultMutationOptions(options);\n        if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shallowEqualObjects)(this.options, prevOptions)) {\n            this.#client.getMutationCache().notify({\n                type: \"observerOptionsUpdated\",\n                mutation: this.#currentMutation,\n                observer: this\n            });\n        }\n        if (prevOptions?.mutationKey && this.options.mutationKey && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hashKey)(prevOptions.mutationKey) !== (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hashKey)(this.options.mutationKey)) {\n            this.reset();\n        } else if (this.#currentMutation?.state.status === \"pending\") {\n            this.#currentMutation.setOptions(this.options);\n        }\n    }\n    onUnsubscribe() {\n        if (!this.hasListeners()) {\n            this.#currentMutation?.removeObserver(this);\n        }\n    }\n    onMutationUpdate(action) {\n        this.#updateResult();\n        this.#notify(action);\n    }\n    getCurrentResult() {\n        return this.#currentResult;\n    }\n    reset() {\n        this.#currentMutation?.removeObserver(this);\n        this.#currentMutation = void 0;\n        this.#updateResult();\n        this.#notify();\n    }\n    mutate(variables, options) {\n        this.#mutateOptions = options;\n        this.#currentMutation?.removeObserver(this);\n        this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n        this.#currentMutation.addObserver(this);\n        return this.#currentMutation.execute(variables);\n    }\n    #updateResult() {\n        const state = this.#currentMutation?.state ?? (0,_mutation_js__WEBPACK_IMPORTED_MODULE_2__.getDefaultState)();\n        this.#currentResult = {\n            ...state,\n            isPending: state.status === \"pending\",\n            isSuccess: state.status === \"success\",\n            isError: state.status === \"error\",\n            isIdle: state.status === \"idle\",\n            mutate: this.mutate,\n            reset: this.reset\n        };\n    }\n    #notify(action) {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            if (this.#mutateOptions && this.hasListeners()) {\n                const variables = this.#currentResult.variables;\n                const context = this.#currentResult.context;\n                if (action?.type === \"success\") {\n                    this.#mutateOptions.onSuccess?.(action.data, variables, context);\n                    this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n                } else if (action?.type === \"error\") {\n                    this.#mutateOptions.onError?.(action.error, variables, context);\n                    this.#mutateOptions.onSettled?.(void 0, action.error, variables, context);\n                }\n            }\n            this.listeners.forEach((listener)=>{\n                listener(this.#currentResult);\n            });\n        });\n    }\n};\n //# sourceMappingURL=mutationObserver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationObserver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/notifyManager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotifyManager: () => (/* binding */ createNotifyManager),\n/* harmony export */   defaultScheduler: () => (/* binding */ defaultScheduler),\n/* harmony export */   notifyManager: () => (/* binding */ notifyManager)\n/* harmony export */ });\n// src/notifyManager.ts\nvar defaultScheduler = (cb)=>setTimeout(cb, 0);\nfunction createNotifyManager() {\n    let queue = [];\n    let transactions = 0;\n    let notifyFn = (callback)=>{\n        callback();\n    };\n    let batchNotifyFn = (callback)=>{\n        callback();\n    };\n    let scheduleFn = defaultScheduler;\n    const schedule = (callback)=>{\n        if (transactions) {\n            queue.push(callback);\n        } else {\n            scheduleFn(()=>{\n                notifyFn(callback);\n            });\n        }\n    };\n    const flush = ()=>{\n        const originalQueue = queue;\n        queue = [];\n        if (originalQueue.length) {\n            scheduleFn(()=>{\n                batchNotifyFn(()=>{\n                    originalQueue.forEach((callback)=>{\n                        notifyFn(callback);\n                    });\n                });\n            });\n        }\n    };\n    return {\n        batch: (callback)=>{\n            let result;\n            transactions++;\n            try {\n                result = callback();\n            } finally{\n                transactions--;\n                if (!transactions) {\n                    flush();\n                }\n            }\n            return result;\n        },\n        /**\n     * All calls to the wrapped function will be batched.\n     */ batchCalls: (callback)=>{\n            return (...args)=>{\n                schedule(()=>{\n                    callback(...args);\n                });\n            };\n        },\n        schedule,\n        /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */ setNotifyFunction: (fn)=>{\n            notifyFn = fn;\n        },\n        /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */ setBatchNotifyFunction: (fn)=>{\n            batchNotifyFn = fn;\n        },\n        setScheduler: (fn)=>{\n            scheduleFn = fn;\n        }\n    };\n}\nvar notifyManager = createNotifyManager();\n //# sourceMappingURL=notifyManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL25vdGlmeU1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsdUJBQXVCO0FBQ3ZCLElBQUlBLG1CQUFtQixDQUFDQyxLQUFPQyxXQUFXRCxJQUFJO0FBQzlDLFNBQVNFO0lBQ1AsSUFBSUMsUUFBUSxFQUFFO0lBQ2QsSUFBSUMsZUFBZTtJQUNuQixJQUFJQyxXQUFXLENBQUNDO1FBQ2RBO0lBQ0Y7SUFDQSxJQUFJQyxnQkFBZ0IsQ0FBQ0Q7UUFDbkJBO0lBQ0Y7SUFDQSxJQUFJRSxhQUFhVDtJQUNqQixNQUFNVSxXQUFXLENBQUNIO1FBQ2hCLElBQUlGLGNBQWM7WUFDaEJELE1BQU1PLElBQUksQ0FBQ0o7UUFDYixPQUFPO1lBQ0xFLFdBQVc7Z0JBQ1RILFNBQVNDO1lBQ1g7UUFDRjtJQUNGO0lBQ0EsTUFBTUssUUFBUTtRQUNaLE1BQU1DLGdCQUFnQlQ7UUFDdEJBLFFBQVEsRUFBRTtRQUNWLElBQUlTLGNBQWNDLE1BQU0sRUFBRTtZQUN4QkwsV0FBVztnQkFDVEQsY0FBYztvQkFDWkssY0FBY0UsT0FBTyxDQUFDLENBQUNSO3dCQUNyQkQsU0FBU0M7b0JBQ1g7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7SUFDQSxPQUFPO1FBQ0xTLE9BQU8sQ0FBQ1Q7WUFDTixJQUFJVTtZQUNKWjtZQUNBLElBQUk7Z0JBQ0ZZLFNBQVNWO1lBQ1gsU0FBVTtnQkFDUkY7Z0JBQ0EsSUFBSSxDQUFDQSxjQUFjO29CQUNqQk87Z0JBQ0Y7WUFDRjtZQUNBLE9BQU9LO1FBQ1Q7UUFDQTs7S0FFQyxHQUNEQyxZQUFZLENBQUNYO1lBQ1gsT0FBTyxDQUFDLEdBQUdZO2dCQUNUVCxTQUFTO29CQUNQSCxZQUFZWTtnQkFDZDtZQUNGO1FBQ0Y7UUFDQVQ7UUFDQTs7O0tBR0MsR0FDRFUsbUJBQW1CLENBQUNDO1lBQ2xCZixXQUFXZTtRQUNiO1FBQ0E7OztLQUdDLEdBQ0RDLHdCQUF3QixDQUFDRDtZQUN2QmIsZ0JBQWdCYTtRQUNsQjtRQUNBRSxjQUFjLENBQUNGO1lBQ2JaLGFBQWFZO1FBQ2Y7SUFDRjtBQUNGO0FBQ0EsSUFBSUcsZ0JBQWdCckI7QUFLbEIsQ0FDRix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkZW50X3JlbGF0aW9uc2hpcF9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL25vdGlmeU1hbmFnZXIuanM/ZjY1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbm90aWZ5TWFuYWdlci50c1xudmFyIGRlZmF1bHRTY2hlZHVsZXIgPSAoY2IpID0+IHNldFRpbWVvdXQoY2IsIDApO1xuZnVuY3Rpb24gY3JlYXRlTm90aWZ5TWFuYWdlcigpIHtcbiAgbGV0IHF1ZXVlID0gW107XG4gIGxldCB0cmFuc2FjdGlvbnMgPSAwO1xuICBsZXQgbm90aWZ5Rm4gPSAoY2FsbGJhY2spID0+IHtcbiAgICBjYWxsYmFjaygpO1xuICB9O1xuICBsZXQgYmF0Y2hOb3RpZnlGbiA9IChjYWxsYmFjaykgPT4ge1xuICAgIGNhbGxiYWNrKCk7XG4gIH07XG4gIGxldCBzY2hlZHVsZUZuID0gZGVmYXVsdFNjaGVkdWxlcjtcbiAgY29uc3Qgc2NoZWR1bGUgPSAoY2FsbGJhY2spID0+IHtcbiAgICBpZiAodHJhbnNhY3Rpb25zKSB7XG4gICAgICBxdWV1ZS5wdXNoKGNhbGxiYWNrKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2NoZWR1bGVGbigoKSA9PiB7XG4gICAgICAgIG5vdGlmeUZuKGNhbGxiYWNrKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgZmx1c2ggPSAoKSA9PiB7XG4gICAgY29uc3Qgb3JpZ2luYWxRdWV1ZSA9IHF1ZXVlO1xuICAgIHF1ZXVlID0gW107XG4gICAgaWYgKG9yaWdpbmFsUXVldWUubGVuZ3RoKSB7XG4gICAgICBzY2hlZHVsZUZuKCgpID0+IHtcbiAgICAgICAgYmF0Y2hOb3RpZnlGbigoKSA9PiB7XG4gICAgICAgICAgb3JpZ2luYWxRdWV1ZS5mb3JFYWNoKChjYWxsYmFjaykgPT4ge1xuICAgICAgICAgICAgbm90aWZ5Rm4oY2FsbGJhY2spO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBiYXRjaDogKGNhbGxiYWNrKSA9PiB7XG4gICAgICBsZXQgcmVzdWx0O1xuICAgICAgdHJhbnNhY3Rpb25zKys7XG4gICAgICB0cnkge1xuICAgICAgICByZXN1bHQgPSBjYWxsYmFjaygpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdHJhbnNhY3Rpb25zLS07XG4gICAgICAgIGlmICghdHJhbnNhY3Rpb25zKSB7XG4gICAgICAgICAgZmx1c2goKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEFsbCBjYWxscyB0byB0aGUgd3JhcHBlZCBmdW5jdGlvbiB3aWxsIGJlIGJhdGNoZWQuXG4gICAgICovXG4gICAgYmF0Y2hDYWxsczogKGNhbGxiYWNrKSA9PiB7XG4gICAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgc2NoZWR1bGUoKCkgPT4ge1xuICAgICAgICAgIGNhbGxiYWNrKC4uLmFyZ3MpO1xuICAgICAgICB9KTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBzY2hlZHVsZSxcbiAgICAvKipcbiAgICAgKiBVc2UgdGhpcyBtZXRob2QgdG8gc2V0IGEgY3VzdG9tIG5vdGlmeSBmdW5jdGlvbi5cbiAgICAgKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGZvciBleGFtcGxlIHdyYXAgbm90aWZpY2F0aW9ucyB3aXRoIGBSZWFjdC5hY3RgIHdoaWxlIHJ1bm5pbmcgdGVzdHMuXG4gICAgICovXG4gICAgc2V0Tm90aWZ5RnVuY3Rpb246IChmbikgPT4ge1xuICAgICAgbm90aWZ5Rm4gPSBmbjtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIFVzZSB0aGlzIG1ldGhvZCB0byBzZXQgYSBjdXN0b20gZnVuY3Rpb24gdG8gYmF0Y2ggbm90aWZpY2F0aW9ucyB0b2dldGhlciBpbnRvIGEgc2luZ2xlIHRpY2suXG4gICAgICogQnkgZGVmYXVsdCBSZWFjdCBRdWVyeSB3aWxsIHVzZSB0aGUgYmF0Y2ggZnVuY3Rpb24gcHJvdmlkZWQgYnkgUmVhY3RET00gb3IgUmVhY3QgTmF0aXZlLlxuICAgICAqL1xuICAgIHNldEJhdGNoTm90aWZ5RnVuY3Rpb246IChmbikgPT4ge1xuICAgICAgYmF0Y2hOb3RpZnlGbiA9IGZuO1xuICAgIH0sXG4gICAgc2V0U2NoZWR1bGVyOiAoZm4pID0+IHtcbiAgICAgIHNjaGVkdWxlRm4gPSBmbjtcbiAgICB9XG4gIH07XG59XG52YXIgbm90aWZ5TWFuYWdlciA9IGNyZWF0ZU5vdGlmeU1hbmFnZXIoKTtcbmV4cG9ydCB7XG4gIGNyZWF0ZU5vdGlmeU1hbmFnZXIsXG4gIGRlZmF1bHRTY2hlZHVsZXIsXG4gIG5vdGlmeU1hbmFnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3RpZnlNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWZhdWx0U2NoZWR1bGVyIiwiY2IiLCJzZXRUaW1lb3V0IiwiY3JlYXRlTm90aWZ5TWFuYWdlciIsInF1ZXVlIiwidHJhbnNhY3Rpb25zIiwibm90aWZ5Rm4iLCJjYWxsYmFjayIsImJhdGNoTm90aWZ5Rm4iLCJzY2hlZHVsZUZuIiwic2NoZWR1bGUiLCJwdXNoIiwiZmx1c2giLCJvcmlnaW5hbFF1ZXVlIiwibGVuZ3RoIiwiZm9yRWFjaCIsImJhdGNoIiwicmVzdWx0IiwiYmF0Y2hDYWxscyIsImFyZ3MiLCJzZXROb3RpZnlGdW5jdGlvbiIsImZuIiwic2V0QmF0Y2hOb3RpZnlGdW5jdGlvbiIsInNldFNjaGVkdWxlciIsIm5vdGlmeU1hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/onlineManager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnlineManager: () => (/* binding */ OnlineManager),\n/* harmony export */   onlineManager: () => (/* binding */ onlineManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/onlineManager.ts\n\n\nvar OnlineManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    #online;\n    #cleanup;\n    #setup;\n    constructor(){\n        super();\n        this.#online = true;\n        this.#setup = (onOnline)=>{\n            if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n                const onlineListener = ()=>onOnline(true);\n                const offlineListener = ()=>onOnline(false);\n                window.addEventListener(\"online\", onlineListener, false);\n                window.addEventListener(\"offline\", offlineListener, false);\n                return ()=>{\n                    window.removeEventListener(\"online\", onlineListener);\n                    window.removeEventListener(\"offline\", offlineListener);\n                };\n            }\n            return;\n        };\n    }\n    onSubscribe() {\n        if (!this.#cleanup) {\n            this.setEventListener(this.#setup);\n        }\n    }\n    onUnsubscribe() {\n        if (!this.hasListeners()) {\n            this.#cleanup?.();\n            this.#cleanup = void 0;\n        }\n    }\n    setEventListener(setup) {\n        this.#setup = setup;\n        this.#cleanup?.();\n        this.#cleanup = setup(this.setOnline.bind(this));\n    }\n    setOnline(online) {\n        const changed = this.#online !== online;\n        if (changed) {\n            this.#online = online;\n            this.listeners.forEach((listener)=>{\n                listener(online);\n            });\n        }\n    }\n    isOnline() {\n        return this.#online;\n    }\n};\nvar onlineManager = new OnlineManager();\n //# sourceMappingURL=onlineManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL29ubGluZU1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHVCQUF1QjtBQUMwQjtBQUNYO0FBQ3RDLElBQUlFLGdCQUFnQixjQUFjRiwwREFBWUE7SUFDNUMsQ0FBQ0csTUFBTSxDQUFRO0lBQ2YsQ0FBQ0MsT0FBTyxDQUFDO0lBQ1QsQ0FBQ0MsS0FBSyxDQUFDO0lBQ1BDLGFBQWM7UUFDWixLQUFLO2FBSlAsQ0FBQ0gsTUFBTSxHQUFHO1FBS1IsSUFBSSxDQUFDLENBQUNFLEtBQUssR0FBRyxDQUFDRTtZQUNiLElBQUksQ0FBQ04sK0NBQVFBLElBQUlPLE9BQU9DLGdCQUFnQixFQUFFO2dCQUN4QyxNQUFNQyxpQkFBaUIsSUFBTUgsU0FBUztnQkFDdEMsTUFBTUksa0JBQWtCLElBQU1KLFNBQVM7Z0JBQ3ZDQyxPQUFPQyxnQkFBZ0IsQ0FBQyxVQUFVQyxnQkFBZ0I7Z0JBQ2xERixPQUFPQyxnQkFBZ0IsQ0FBQyxXQUFXRSxpQkFBaUI7Z0JBQ3BELE9BQU87b0JBQ0xILE9BQU9JLG1CQUFtQixDQUFDLFVBQVVGO29CQUNyQ0YsT0FBT0ksbUJBQW1CLENBQUMsV0FBV0Q7Z0JBQ3hDO1lBQ0Y7WUFDQTtRQUNGO0lBQ0Y7SUFDQUUsY0FBYztRQUNaLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQ1QsT0FBTyxFQUFFO1lBQ2xCLElBQUksQ0FBQ1UsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUNULEtBQUs7UUFDbkM7SUFDRjtJQUNBVSxnQkFBZ0I7UUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDQyxZQUFZLElBQUk7WUFDeEIsSUFBSSxDQUFDLENBQUNaLE9BQU87WUFDYixJQUFJLENBQUMsQ0FBQ0EsT0FBTyxHQUFHLEtBQUs7UUFDdkI7SUFDRjtJQUNBVSxpQkFBaUJULEtBQUssRUFBRTtRQUN0QixJQUFJLENBQUMsQ0FBQ0EsS0FBSyxHQUFHQTtRQUNkLElBQUksQ0FBQyxDQUFDRCxPQUFPO1FBQ2IsSUFBSSxDQUFDLENBQUNBLE9BQU8sR0FBR0MsTUFBTSxJQUFJLENBQUNZLFNBQVMsQ0FBQ0MsSUFBSSxDQUFDLElBQUk7SUFDaEQ7SUFDQUQsVUFBVWQsTUFBTSxFQUFFO1FBQ2hCLE1BQU1nQixVQUFVLElBQUksQ0FBQyxDQUFDaEIsTUFBTSxLQUFLQTtRQUNqQyxJQUFJZ0IsU0FBUztZQUNYLElBQUksQ0FBQyxDQUFDaEIsTUFBTSxHQUFHQTtZQUNmLElBQUksQ0FBQ2lCLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDLENBQUNDO2dCQUN0QkEsU0FBU25CO1lBQ1g7UUFDRjtJQUNGO0lBQ0FvQixXQUFXO1FBQ1QsT0FBTyxJQUFJLENBQUMsQ0FBQ3BCLE1BQU07SUFDckI7QUFDRjtBQUNBLElBQUlxQixnQkFBZ0IsSUFBSXRCO0FBSXRCLENBQ0YseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudF9yZWxhdGlvbnNoaXBfbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9vbmxpbmVNYW5hZ2VyLmpzP2UyYTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL29ubGluZU1hbmFnZXIudHNcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xudmFyIE9ubGluZU1hbmFnZXIgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gICNvbmxpbmUgPSB0cnVlO1xuICAjY2xlYW51cDtcbiAgI3NldHVwO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI3NldHVwID0gKG9uT25saW5lKSA9PiB7XG4gICAgICBpZiAoIWlzU2VydmVyICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IG9ubGluZUxpc3RlbmVyID0gKCkgPT4gb25PbmxpbmUodHJ1ZSk7XG4gICAgICAgIGNvbnN0IG9mZmxpbmVMaXN0ZW5lciA9ICgpID0+IG9uT25saW5lKGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvbmxpbmVcIiwgb25saW5lTGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsIG9mZmxpbmVMaXN0ZW5lciwgZmFsc2UpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwib25saW5lXCIsIG9ubGluZUxpc3RlbmVyKTtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgb2ZmbGluZUxpc3RlbmVyKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9O1xuICB9XG4gIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy4jY2xlYW51cCkge1xuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVyKHRoaXMuI3NldHVwKTtcbiAgICB9XG4gIH1cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHRoaXMuI2NsZWFudXA/LigpO1xuICAgICAgdGhpcy4jY2xlYW51cCA9IHZvaWQgMDtcbiAgICB9XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcihzZXR1cCkge1xuICAgIHRoaXMuI3NldHVwID0gc2V0dXA7XG4gICAgdGhpcy4jY2xlYW51cD8uKCk7XG4gICAgdGhpcy4jY2xlYW51cCA9IHNldHVwKHRoaXMuc2V0T25saW5lLmJpbmQodGhpcykpO1xuICB9XG4gIHNldE9ubGluZShvbmxpbmUpIHtcbiAgICBjb25zdCBjaGFuZ2VkID0gdGhpcy4jb25saW5lICE9PSBvbmxpbmU7XG4gICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgIHRoaXMuI29ubGluZSA9IG9ubGluZTtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgIGxpc3RlbmVyKG9ubGluZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgaXNPbmxpbmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuI29ubGluZTtcbiAgfVxufTtcbnZhciBvbmxpbmVNYW5hZ2VyID0gbmV3IE9ubGluZU1hbmFnZXIoKTtcbmV4cG9ydCB7XG4gIE9ubGluZU1hbmFnZXIsXG4gIG9ubGluZU1hbmFnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbmxpbmVNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJTdWJzY3JpYmFibGUiLCJpc1NlcnZlciIsIk9ubGluZU1hbmFnZXIiLCJvbmxpbmUiLCJjbGVhbnVwIiwic2V0dXAiLCJjb25zdHJ1Y3RvciIsIm9uT25saW5lIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9ubGluZUxpc3RlbmVyIiwib2ZmbGluZUxpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm9uU3Vic2NyaWJlIiwic2V0RXZlbnRMaXN0ZW5lciIsIm9uVW5zdWJzY3JpYmUiLCJoYXNMaXN0ZW5lcnMiLCJzZXRPbmxpbmUiLCJiaW5kIiwiY2hhbmdlZCIsImxpc3RlbmVycyIsImZvckVhY2giLCJsaXN0ZW5lciIsImlzT25saW5lIiwib25saW5lTWFuYWdlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/query.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query),\n/* harmony export */   fetchState: () => (/* binding */ fetchState)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js\");\n// src/query.ts\n\n\n\n\nvar Query = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n    #initialState;\n    #revertState;\n    #cache;\n    #client;\n    #retryer;\n    #defaultOptions;\n    #abortSignalConsumed;\n    constructor(config){\n        super();\n        this.#abortSignalConsumed = false;\n        this.#defaultOptions = config.defaultOptions;\n        this.setOptions(config.options);\n        this.observers = [];\n        this.#client = config.client;\n        this.#cache = this.#client.getQueryCache();\n        this.queryKey = config.queryKey;\n        this.queryHash = config.queryHash;\n        this.#initialState = getDefaultState(this.options);\n        this.state = config.state ?? this.#initialState;\n        this.scheduleGc();\n    }\n    get meta() {\n        return this.options.meta;\n    }\n    get promise() {\n        return this.#retryer?.promise;\n    }\n    setOptions(options) {\n        this.options = {\n            ...this.#defaultOptions,\n            ...options\n        };\n        this.updateGcTime(this.options.gcTime);\n    }\n    optionalRemove() {\n        if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n            this.#cache.remove(this);\n        }\n    }\n    setData(newData, options) {\n        const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceData)(this.state.data, newData, this.options);\n        this.#dispatch({\n            data,\n            type: \"success\",\n            dataUpdatedAt: options?.updatedAt,\n            manual: options?.manual\n        });\n        return data;\n    }\n    setState(state, setStateOptions) {\n        this.#dispatch({\n            type: \"setState\",\n            state,\n            setStateOptions\n        });\n    }\n    cancel(options) {\n        const promise = this.#retryer?.promise;\n        this.#retryer?.cancel(options);\n        return promise ? promise.then(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop) : Promise.resolve();\n    }\n    destroy() {\n        super.destroy();\n        this.cancel({\n            silent: true\n        });\n    }\n    reset() {\n        this.destroy();\n        this.setState(this.#initialState);\n    }\n    isActive() {\n        return this.observers.some((observer)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.resolveEnabled)(observer.options.enabled, this) !== false);\n    }\n    isDisabled() {\n        if (this.getObserversCount() > 0) {\n            return !this.isActive();\n        }\n        return this.options.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_1__.skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n    }\n    isStale() {\n        if (this.state.isInvalidated) {\n            return true;\n        }\n        if (this.getObserversCount() > 0) {\n            return this.observers.some((observer)=>observer.getCurrentResult().isStale);\n        }\n        return this.state.data === void 0;\n    }\n    isStaleByTime(staleTime = 0) {\n        return this.state.isInvalidated || this.state.data === void 0 || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\n    }\n    onFocus() {\n        const observer = this.observers.find((x)=>x.shouldFetchOnWindowFocus());\n        observer?.refetch({\n            cancelRefetch: false\n        });\n        this.#retryer?.continue();\n    }\n    onOnline() {\n        const observer = this.observers.find((x)=>x.shouldFetchOnReconnect());\n        observer?.refetch({\n            cancelRefetch: false\n        });\n        this.#retryer?.continue();\n    }\n    addObserver(observer) {\n        if (!this.observers.includes(observer)) {\n            this.observers.push(observer);\n            this.clearGcTimeout();\n            this.#cache.notify({\n                type: \"observerAdded\",\n                query: this,\n                observer\n            });\n        }\n    }\n    removeObserver(observer) {\n        if (this.observers.includes(observer)) {\n            this.observers = this.observers.filter((x)=>x !== observer);\n            if (!this.observers.length) {\n                if (this.#retryer) {\n                    if (this.#abortSignalConsumed) {\n                        this.#retryer.cancel({\n                            revert: true\n                        });\n                    } else {\n                        this.#retryer.cancelRetry();\n                    }\n                }\n                this.scheduleGc();\n            }\n            this.#cache.notify({\n                type: \"observerRemoved\",\n                query: this,\n                observer\n            });\n        }\n    }\n    getObserversCount() {\n        return this.observers.length;\n    }\n    invalidate() {\n        if (!this.state.isInvalidated) {\n            this.#dispatch({\n                type: \"invalidate\"\n            });\n        }\n    }\n    fetch(options, fetchOptions) {\n        if (this.state.fetchStatus !== \"idle\") {\n            if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n                this.cancel({\n                    silent: true\n                });\n            } else if (this.#retryer) {\n                this.#retryer.continueRetry();\n                return this.#retryer.promise;\n            }\n        }\n        if (options) {\n            this.setOptions(options);\n        }\n        if (!this.options.queryFn) {\n            const observer = this.observers.find((x)=>x.options.queryFn);\n            if (observer) {\n                this.setOptions(observer.options);\n            }\n        }\n        if (true) {\n            if (!Array.isArray(this.options.queryKey)) {\n                console.error(`As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`);\n            }\n        }\n        const abortController = new AbortController();\n        const addSignalProperty = (object)=>{\n            Object.defineProperty(object, \"signal\", {\n                enumerable: true,\n                get: ()=>{\n                    this.#abortSignalConsumed = true;\n                    return abortController.signal;\n                }\n            });\n        };\n        const fetchFn = ()=>{\n            const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureQueryFn)(this.options, fetchOptions);\n            const queryFnContext = {\n                client: this.#client,\n                queryKey: this.queryKey,\n                meta: this.meta\n            };\n            addSignalProperty(queryFnContext);\n            this.#abortSignalConsumed = false;\n            if (this.options.persister) {\n                return this.options.persister(queryFn, queryFnContext, this);\n            }\n            return queryFn(queryFnContext);\n        };\n        const context = {\n            fetchOptions,\n            options: this.options,\n            queryKey: this.queryKey,\n            client: this.#client,\n            state: this.state,\n            fetchFn\n        };\n        addSignalProperty(context);\n        this.options.behavior?.onFetch(context, this);\n        this.#revertState = this.state;\n        if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n            this.#dispatch({\n                type: \"fetch\",\n                meta: context.fetchOptions?.meta\n            });\n        }\n        const onError = (error)=>{\n            if (!((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.silent)) {\n                this.#dispatch({\n                    type: \"error\",\n                    error\n                });\n            }\n            if (!(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error)) {\n                this.#cache.config.onError?.(error, this);\n                this.#cache.config.onSettled?.(this.state.data, error, this);\n            }\n            this.scheduleGc();\n        };\n        this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.createRetryer)({\n            initialPromise: fetchOptions?.initialPromise,\n            fn: context.fetchFn,\n            abort: abortController.abort.bind(abortController),\n            onSuccess: (data)=>{\n                if (data === void 0) {\n                    if (true) {\n                        console.error(`Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`);\n                    }\n                    onError(new Error(`${this.queryHash} data is undefined`));\n                    return;\n                }\n                try {\n                    this.setData(data);\n                } catch (error) {\n                    onError(error);\n                    return;\n                }\n                this.#cache.config.onSuccess?.(data, this);\n                this.#cache.config.onSettled?.(data, this.state.error, this);\n                this.scheduleGc();\n            },\n            onError,\n            onFail: (failureCount, error)=>{\n                this.#dispatch({\n                    type: \"failed\",\n                    failureCount,\n                    error\n                });\n            },\n            onPause: ()=>{\n                this.#dispatch({\n                    type: \"pause\"\n                });\n            },\n            onContinue: ()=>{\n                this.#dispatch({\n                    type: \"continue\"\n                });\n            },\n            retry: context.options.retry,\n            retryDelay: context.options.retryDelay,\n            networkMode: context.options.networkMode,\n            canRun: ()=>true\n        });\n        return this.#retryer.start();\n    }\n    #dispatch(action) {\n        const reducer = (state)=>{\n            switch(action.type){\n                case \"failed\":\n                    return {\n                        ...state,\n                        fetchFailureCount: action.failureCount,\n                        fetchFailureReason: action.error\n                    };\n                case \"pause\":\n                    return {\n                        ...state,\n                        fetchStatus: \"paused\"\n                    };\n                case \"continue\":\n                    return {\n                        ...state,\n                        fetchStatus: \"fetching\"\n                    };\n                case \"fetch\":\n                    return {\n                        ...state,\n                        ...fetchState(state.data, this.options),\n                        fetchMeta: action.meta ?? null\n                    };\n                case \"success\":\n                    return {\n                        ...state,\n                        data: action.data,\n                        dataUpdateCount: state.dataUpdateCount + 1,\n                        dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n                        error: null,\n                        isInvalidated: false,\n                        status: \"success\",\n                        ...!action.manual && {\n                            fetchStatus: \"idle\",\n                            fetchFailureCount: 0,\n                            fetchFailureReason: null\n                        }\n                    };\n                case \"error\":\n                    const error = action.error;\n                    if ((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.revert && this.#revertState) {\n                        return {\n                            ...this.#revertState,\n                            fetchStatus: \"idle\"\n                        };\n                    }\n                    return {\n                        ...state,\n                        error,\n                        errorUpdateCount: state.errorUpdateCount + 1,\n                        errorUpdatedAt: Date.now(),\n                        fetchFailureCount: state.fetchFailureCount + 1,\n                        fetchFailureReason: error,\n                        fetchStatus: \"idle\",\n                        status: \"error\"\n                    };\n                case \"invalidate\":\n                    return {\n                        ...state,\n                        isInvalidated: true\n                    };\n                case \"setState\":\n                    return {\n                        ...state,\n                        ...action.state\n                    };\n            }\n        };\n        this.state = reducer(this.state);\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.observers.forEach((observer)=>{\n                observer.onQueryUpdate();\n            });\n            this.#cache.notify({\n                query: this,\n                type: \"updated\",\n                action\n            });\n        });\n    }\n};\nfunction fetchState(data, options) {\n    return {\n        fetchFailureCount: 0,\n        fetchFailureReason: null,\n        fetchStatus: (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.canFetch)(options.networkMode) ? \"fetching\" : \"paused\",\n        ...data === void 0 && {\n            error: null,\n            status: \"pending\"\n        }\n    };\n}\nfunction getDefaultState(options) {\n    const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n    const hasData = data !== void 0;\n    const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    return {\n        data,\n        dataUpdateCount: 0,\n        dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n        error: null,\n        errorUpdateCount: 0,\n        errorUpdatedAt: 0,\n        fetchFailureCount: 0,\n        fetchFailureReason: null,\n        fetchMeta: null,\n        isInvalidated: false,\n        status: hasData ? \"success\" : \"pending\",\n        fetchStatus: \"idle\"\n    };\n}\n //# sourceMappingURL=query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryCache.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCache: () => (/* binding */ QueryCache)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n// src/queryCache.ts\n\n\n\n\nvar QueryCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    constructor(config = {}){\n        super();\n        this.config = config;\n        this.#queries = /* @__PURE__ */ new Map();\n    }\n    #queries;\n    build(client, options, state) {\n        const queryKey = options.queryKey;\n        const queryHash = options.queryHash ?? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\n        let query = this.get(queryHash);\n        if (!query) {\n            query = new _query_js__WEBPACK_IMPORTED_MODULE_2__.Query({\n                client,\n                queryKey,\n                queryHash,\n                options: client.defaultQueryOptions(options),\n                state,\n                defaultOptions: client.getQueryDefaults(queryKey)\n            });\n            this.add(query);\n        }\n        return query;\n    }\n    add(query) {\n        if (!this.#queries.has(query.queryHash)) {\n            this.#queries.set(query.queryHash, query);\n            this.notify({\n                type: \"added\",\n                query\n            });\n        }\n    }\n    remove(query) {\n        const queryInMap = this.#queries.get(query.queryHash);\n        if (queryInMap) {\n            query.destroy();\n            if (queryInMap === query) {\n                this.#queries.delete(query.queryHash);\n            }\n            this.notify({\n                type: \"removed\",\n                query\n            });\n        }\n    }\n    clear() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.getAll().forEach((query)=>{\n                this.remove(query);\n            });\n        });\n    }\n    get(queryHash) {\n        return this.#queries.get(queryHash);\n    }\n    getAll() {\n        return [\n            ...this.#queries.values()\n        ];\n    }\n    find(filters) {\n        const defaultedFilters = {\n            exact: true,\n            ...filters\n        };\n        return this.getAll().find((query)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(defaultedFilters, query));\n    }\n    findAll(filters = {}) {\n        const queries = this.getAll();\n        return Object.keys(filters).length > 0 ? queries.filter((query)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query)) : queries;\n    }\n    notify(event) {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.listeners.forEach((listener)=>{\n                listener(event);\n            });\n        });\n    }\n    onFocus() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.getAll().forEach((query)=>{\n                query.onFocus();\n            });\n        });\n    }\n    onOnline() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.getAll().forEach((query)=>{\n                query.onOnline();\n            });\n        });\n    }\n};\n //# sourceMappingURL=queryCache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3F1ZXJ5Q2FjaGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDMkM7QUFDNUI7QUFDZ0I7QUFDRjtBQUNqRCxJQUFJSyxhQUFhLGNBQWNELDBEQUFZQTtJQUN6Q0UsWUFBWUMsU0FBUyxDQUFDLENBQUMsQ0FBRTtRQUN2QixLQUFLO1FBQ0wsSUFBSSxDQUFDQSxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDLENBQUNDLE9BQU8sR0FBRyxhQUFhLEdBQUcsSUFBSUM7SUFDdEM7SUFDQSxDQUFDRCxPQUFPLENBQUM7SUFDVEUsTUFBTUMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLEtBQUssRUFBRTtRQUM1QixNQUFNQyxXQUFXRixRQUFRRSxRQUFRO1FBQ2pDLE1BQU1DLFlBQVlILFFBQVFHLFNBQVMsSUFBSWYsZ0VBQXFCQSxDQUFDYyxVQUFVRjtRQUN2RSxJQUFJSSxRQUFRLElBQUksQ0FBQ0MsR0FBRyxDQUFDRjtRQUNyQixJQUFJLENBQUNDLE9BQU87WUFDVkEsUUFBUSxJQUFJZCw0Q0FBS0EsQ0FBQztnQkFDaEJTO2dCQUNBRztnQkFDQUM7Z0JBQ0FILFNBQVNELE9BQU9PLG1CQUFtQixDQUFDTjtnQkFDcENDO2dCQUNBTSxnQkFBZ0JSLE9BQU9TLGdCQUFnQixDQUFDTjtZQUMxQztZQUNBLElBQUksQ0FBQ08sR0FBRyxDQUFDTDtRQUNYO1FBQ0EsT0FBT0E7SUFDVDtJQUNBSyxJQUFJTCxLQUFLLEVBQUU7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUNSLE9BQU8sQ0FBQ2MsR0FBRyxDQUFDTixNQUFNRCxTQUFTLEdBQUc7WUFDdkMsSUFBSSxDQUFDLENBQUNQLE9BQU8sQ0FBQ2UsR0FBRyxDQUFDUCxNQUFNRCxTQUFTLEVBQUVDO1lBQ25DLElBQUksQ0FBQ1EsTUFBTSxDQUFDO2dCQUNWQyxNQUFNO2dCQUNOVDtZQUNGO1FBQ0Y7SUFDRjtJQUNBVSxPQUFPVixLQUFLLEVBQUU7UUFDWixNQUFNVyxhQUFhLElBQUksQ0FBQyxDQUFDbkIsT0FBTyxDQUFDUyxHQUFHLENBQUNELE1BQU1ELFNBQVM7UUFDcEQsSUFBSVksWUFBWTtZQUNkWCxNQUFNWSxPQUFPO1lBQ2IsSUFBSUQsZUFBZVgsT0FBTztnQkFDeEIsSUFBSSxDQUFDLENBQUNSLE9BQU8sQ0FBQ3FCLE1BQU0sQ0FBQ2IsTUFBTUQsU0FBUztZQUN0QztZQUNBLElBQUksQ0FBQ1MsTUFBTSxDQUFDO2dCQUFFQyxNQUFNO2dCQUFXVDtZQUFNO1FBQ3ZDO0lBQ0Y7SUFDQWMsUUFBUTtRQUNOM0IsNERBQWFBLENBQUM0QixLQUFLLENBQUM7WUFDbEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxDQUFDakI7Z0JBQ3JCLElBQUksQ0FBQ1UsTUFBTSxDQUFDVjtZQUNkO1FBQ0Y7SUFDRjtJQUNBQyxJQUFJRixTQUFTLEVBQUU7UUFDYixPQUFPLElBQUksQ0FBQyxDQUFDUCxPQUFPLENBQUNTLEdBQUcsQ0FBQ0Y7SUFDM0I7SUFDQWlCLFNBQVM7UUFDUCxPQUFPO2VBQUksSUFBSSxDQUFDLENBQUN4QixPQUFPLENBQUMwQixNQUFNO1NBQUc7SUFDcEM7SUFDQUMsS0FBS0MsT0FBTyxFQUFFO1FBQ1osTUFBTUMsbUJBQW1CO1lBQUVDLE9BQU87WUFBTSxHQUFHRixPQUFPO1FBQUM7UUFDbkQsT0FBTyxJQUFJLENBQUNKLE1BQU0sR0FBR0csSUFBSSxDQUN2QixDQUFDbkIsUUFBVWYscURBQVVBLENBQUNvQyxrQkFBa0JyQjtJQUU1QztJQUNBdUIsUUFBUUgsVUFBVSxDQUFDLENBQUMsRUFBRTtRQUNwQixNQUFNNUIsVUFBVSxJQUFJLENBQUN3QixNQUFNO1FBQzNCLE9BQU9RLE9BQU9DLElBQUksQ0FBQ0wsU0FBU00sTUFBTSxHQUFHLElBQUlsQyxRQUFRbUMsTUFBTSxDQUFDLENBQUMzQixRQUFVZixxREFBVUEsQ0FBQ21DLFNBQVNwQixVQUFVUjtJQUNuRztJQUNBZ0IsT0FBT29CLEtBQUssRUFBRTtRQUNaekMsNERBQWFBLENBQUM0QixLQUFLLENBQUM7WUFDbEIsSUFBSSxDQUFDYyxTQUFTLENBQUNaLE9BQU8sQ0FBQyxDQUFDYTtnQkFDdEJBLFNBQVNGO1lBQ1g7UUFDRjtJQUNGO0lBQ0FHLFVBQVU7UUFDUjVDLDREQUFhQSxDQUFDNEIsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQyxPQUFPLENBQUMsQ0FBQ2pCO2dCQUNyQkEsTUFBTStCLE9BQU87WUFDZjtRQUNGO0lBQ0Y7SUFDQUMsV0FBVztRQUNUN0MsNERBQWFBLENBQUM0QixLQUFLLENBQUM7WUFDbEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxDQUFDakI7Z0JBQ3JCQSxNQUFNZ0MsUUFBUTtZQUNoQjtRQUNGO0lBQ0Y7QUFDRjtBQUdFLENBQ0Ysc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudF9yZWxhdGlvbnNoaXBfbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9xdWVyeUNhY2hlLmpzP2I5ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3F1ZXJ5Q2FjaGUudHNcbmltcG9ydCB7IGhhc2hRdWVyeUtleUJ5T3B0aW9ucywgbWF0Y2hRdWVyeSB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyBRdWVyeSB9IGZyb20gXCIuL3F1ZXJ5LmpzXCI7XG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSBcIi4vbm90aWZ5TWFuYWdlci5qc1wiO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlLmpzXCI7XG52YXIgUXVlcnlDYWNoZSA9IGNsYXNzIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICAgIHRoaXMuI3F1ZXJpZXMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICB9XG4gICNxdWVyaWVzO1xuICBidWlsZChjbGllbnQsIG9wdGlvbnMsIHN0YXRlKSB7XG4gICAgY29uc3QgcXVlcnlLZXkgPSBvcHRpb25zLnF1ZXJ5S2V5O1xuICAgIGNvbnN0IHF1ZXJ5SGFzaCA9IG9wdGlvbnMucXVlcnlIYXNoID8/IGhhc2hRdWVyeUtleUJ5T3B0aW9ucyhxdWVyeUtleSwgb3B0aW9ucyk7XG4gICAgbGV0IHF1ZXJ5ID0gdGhpcy5nZXQocXVlcnlIYXNoKTtcbiAgICBpZiAoIXF1ZXJ5KSB7XG4gICAgICBxdWVyeSA9IG5ldyBRdWVyeSh7XG4gICAgICAgIGNsaWVudCxcbiAgICAgICAgcXVlcnlLZXksXG4gICAgICAgIHF1ZXJ5SGFzaCxcbiAgICAgICAgb3B0aW9uczogY2xpZW50LmRlZmF1bHRRdWVyeU9wdGlvbnMob3B0aW9ucyksXG4gICAgICAgIHN0YXRlLFxuICAgICAgICBkZWZhdWx0T3B0aW9uczogY2xpZW50LmdldFF1ZXJ5RGVmYXVsdHMocXVlcnlLZXkpXG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRkKHF1ZXJ5KTtcbiAgICB9XG4gICAgcmV0dXJuIHF1ZXJ5O1xuICB9XG4gIGFkZChxdWVyeSkge1xuICAgIGlmICghdGhpcy4jcXVlcmllcy5oYXMocXVlcnkucXVlcnlIYXNoKSkge1xuICAgICAgdGhpcy4jcXVlcmllcy5zZXQocXVlcnkucXVlcnlIYXNoLCBxdWVyeSk7XG4gICAgICB0aGlzLm5vdGlmeSh7XG4gICAgICAgIHR5cGU6IFwiYWRkZWRcIixcbiAgICAgICAgcXVlcnlcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZW1vdmUocXVlcnkpIHtcbiAgICBjb25zdCBxdWVyeUluTWFwID0gdGhpcy4jcXVlcmllcy5nZXQocXVlcnkucXVlcnlIYXNoKTtcbiAgICBpZiAocXVlcnlJbk1hcCkge1xuICAgICAgcXVlcnkuZGVzdHJveSgpO1xuICAgICAgaWYgKHF1ZXJ5SW5NYXAgPT09IHF1ZXJ5KSB7XG4gICAgICAgIHRoaXMuI3F1ZXJpZXMuZGVsZXRlKHF1ZXJ5LnF1ZXJ5SGFzaCk7XG4gICAgICB9XG4gICAgICB0aGlzLm5vdGlmeSh7IHR5cGU6IFwicmVtb3ZlZFwiLCBxdWVyeSB9KTtcbiAgICB9XG4gIH1cbiAgY2xlYXIoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmdldEFsbCgpLmZvckVhY2goKHF1ZXJ5KSA9PiB7XG4gICAgICAgIHRoaXMucmVtb3ZlKHF1ZXJ5KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGdldChxdWVyeUhhc2gpIHtcbiAgICByZXR1cm4gdGhpcy4jcXVlcmllcy5nZXQocXVlcnlIYXNoKTtcbiAgfVxuICBnZXRBbGwoKSB7XG4gICAgcmV0dXJuIFsuLi50aGlzLiNxdWVyaWVzLnZhbHVlcygpXTtcbiAgfVxuICBmaW5kKGZpbHRlcnMpIHtcbiAgICBjb25zdCBkZWZhdWx0ZWRGaWx0ZXJzID0geyBleGFjdDogdHJ1ZSwgLi4uZmlsdGVycyB9O1xuICAgIHJldHVybiB0aGlzLmdldEFsbCgpLmZpbmQoXG4gICAgICAocXVlcnkpID0+IG1hdGNoUXVlcnkoZGVmYXVsdGVkRmlsdGVycywgcXVlcnkpXG4gICAgKTtcbiAgfVxuICBmaW5kQWxsKGZpbHRlcnMgPSB7fSkge1xuICAgIGNvbnN0IHF1ZXJpZXMgPSB0aGlzLmdldEFsbCgpO1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhmaWx0ZXJzKS5sZW5ndGggPiAwID8gcXVlcmllcy5maWx0ZXIoKHF1ZXJ5KSA9PiBtYXRjaFF1ZXJ5KGZpbHRlcnMsIHF1ZXJ5KSkgOiBxdWVyaWVzO1xuICB9XG4gIG5vdGlmeShldmVudCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcbiAgICAgICAgbGlzdGVuZXIoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgb25Gb2N1cygpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMuZ2V0QWxsKCkuZm9yRWFjaCgocXVlcnkpID0+IHtcbiAgICAgICAgcXVlcnkub25Gb2N1cygpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgb25PbmxpbmUoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmdldEFsbCgpLmZvckVhY2goKHF1ZXJ5KSA9PiB7XG4gICAgICAgIHF1ZXJ5Lm9uT25saW5lKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIFF1ZXJ5Q2FjaGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeUNhY2hlLmpzLm1hcCJdLCJuYW1lcyI6WyJoYXNoUXVlcnlLZXlCeU9wdGlvbnMiLCJtYXRjaFF1ZXJ5IiwiUXVlcnkiLCJub3RpZnlNYW5hZ2VyIiwiU3Vic2NyaWJhYmxlIiwiUXVlcnlDYWNoZSIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwicXVlcmllcyIsIk1hcCIsImJ1aWxkIiwiY2xpZW50Iiwib3B0aW9ucyIsInN0YXRlIiwicXVlcnlLZXkiLCJxdWVyeUhhc2giLCJxdWVyeSIsImdldCIsImRlZmF1bHRRdWVyeU9wdGlvbnMiLCJkZWZhdWx0T3B0aW9ucyIsImdldFF1ZXJ5RGVmYXVsdHMiLCJhZGQiLCJoYXMiLCJzZXQiLCJub3RpZnkiLCJ0eXBlIiwicmVtb3ZlIiwicXVlcnlJbk1hcCIsImRlc3Ryb3kiLCJkZWxldGUiLCJjbGVhciIsImJhdGNoIiwiZ2V0QWxsIiwiZm9yRWFjaCIsInZhbHVlcyIsImZpbmQiLCJmaWx0ZXJzIiwiZGVmYXVsdGVkRmlsdGVycyIsImV4YWN0IiwiZmluZEFsbCIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJmaWx0ZXIiLCJldmVudCIsImxpc3RlbmVycyIsImxpc3RlbmVyIiwib25Gb2N1cyIsIm9uT25saW5lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/queryClient.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryClient.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClient: () => (/* binding */ QueryClient)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _queryCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\");\n/* harmony import */ var _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\");\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onlineManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./infiniteQueryBehavior.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\");\n// src/queryClient.ts\n\n\n\n\n\n\n\nvar QueryClient = class {\n    #queryCache;\n    #mutationCache;\n    #defaultOptions;\n    #queryDefaults;\n    #mutationDefaults;\n    #mountCount;\n    #unsubscribeFocus;\n    #unsubscribeOnline;\n    constructor(config = {}){\n        this.#queryCache = config.queryCache || new _queryCache_js__WEBPACK_IMPORTED_MODULE_0__.QueryCache();\n        this.#mutationCache = config.mutationCache || new _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__.MutationCache();\n        this.#defaultOptions = config.defaultOptions || {};\n        this.#queryDefaults = /* @__PURE__ */ new Map();\n        this.#mutationDefaults = /* @__PURE__ */ new Map();\n        this.#mountCount = 0;\n    }\n    mount() {\n        this.#mountCount++;\n        if (this.#mountCount !== 1) return;\n        this.#unsubscribeFocus = _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.subscribe(async (focused)=>{\n            if (focused) {\n                await this.resumePausedMutations();\n                this.#queryCache.onFocus();\n            }\n        });\n        this.#unsubscribeOnline = _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.subscribe(async (online)=>{\n            if (online) {\n                await this.resumePausedMutations();\n                this.#queryCache.onOnline();\n            }\n        });\n    }\n    unmount() {\n        this.#mountCount--;\n        if (this.#mountCount !== 0) return;\n        this.#unsubscribeFocus?.();\n        this.#unsubscribeFocus = void 0;\n        this.#unsubscribeOnline?.();\n        this.#unsubscribeOnline = void 0;\n    }\n    isFetching(filters) {\n        return this.#queryCache.findAll({\n            ...filters,\n            fetchStatus: \"fetching\"\n        }).length;\n    }\n    isMutating(filters) {\n        return this.#mutationCache.findAll({\n            ...filters,\n            status: \"pending\"\n        }).length;\n    }\n    /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */ getQueryData(queryKey) {\n        const options = this.defaultQueryOptions({\n            queryKey\n        });\n        return this.#queryCache.get(options.queryHash)?.state.data;\n    }\n    ensureQueryData(options) {\n        const defaultedOptions = this.defaultQueryOptions(options);\n        const query = this.#queryCache.build(this, defaultedOptions);\n        const cachedData = query.state.data;\n        if (cachedData === void 0) {\n            return this.fetchQuery(options);\n        }\n        if (options.revalidateIfStale && query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query))) {\n            void this.prefetchQuery(defaultedOptions);\n        }\n        return Promise.resolve(cachedData);\n    }\n    getQueriesData(filters) {\n        return this.#queryCache.findAll(filters).map(({ queryKey, state })=>{\n            const data = state.data;\n            return [\n                queryKey,\n                data\n            ];\n        });\n    }\n    setQueryData(queryKey, updater, options) {\n        const defaultedOptions = this.defaultQueryOptions({\n            queryKey\n        });\n        const query = this.#queryCache.get(defaultedOptions.queryHash);\n        const prevData = query?.state.data;\n        const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.functionalUpdate)(updater, prevData);\n        if (data === void 0) {\n            return void 0;\n        }\n        return this.#queryCache.build(this, defaultedOptions).setData(data, {\n            ...options,\n            manual: true\n        });\n    }\n    setQueriesData(filters, updater, options) {\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>this.#queryCache.findAll(filters).map(({ queryKey })=>[\n                    queryKey,\n                    this.setQueryData(queryKey, updater, options)\n                ]));\n    }\n    getQueryState(queryKey) {\n        const options = this.defaultQueryOptions({\n            queryKey\n        });\n        return this.#queryCache.get(options.queryHash)?.state;\n    }\n    removeQueries(filters) {\n        const queryCache = this.#queryCache;\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            queryCache.findAll(filters).forEach((query)=>{\n                queryCache.remove(query);\n            });\n        });\n    }\n    resetQueries(filters, options) {\n        const queryCache = this.#queryCache;\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            queryCache.findAll(filters).forEach((query)=>{\n                query.reset();\n            });\n            return this.refetchQueries({\n                type: \"active\",\n                ...filters\n            }, options);\n        });\n    }\n    cancelQueries(filters, cancelOptions = {}) {\n        const defaultedCancelOptions = {\n            revert: true,\n            ...cancelOptions\n        };\n        const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>this.#queryCache.findAll(filters).map((query)=>query.cancel(defaultedCancelOptions)));\n        return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    invalidateQueries(filters, options = {}) {\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            this.#queryCache.findAll(filters).forEach((query)=>{\n                query.invalidate();\n            });\n            if (filters?.refetchType === \"none\") {\n                return Promise.resolve();\n            }\n            return this.refetchQueries({\n                ...filters,\n                type: filters?.refetchType ?? filters?.type ?? \"active\"\n            }, options);\n        });\n    }\n    refetchQueries(filters, options = {}) {\n        const fetchOptions = {\n            ...options,\n            cancelRefetch: options.cancelRefetch ?? true\n        };\n        const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>this.#queryCache.findAll(filters).filter((query)=>!query.isDisabled()).map((query)=>{\n                let promise = query.fetch(void 0, fetchOptions);\n                if (!fetchOptions.throwOnError) {\n                    promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n                }\n                return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n            }));\n        return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    fetchQuery(options) {\n        const defaultedOptions = this.defaultQueryOptions(options);\n        if (defaultedOptions.retry === void 0) {\n            defaultedOptions.retry = false;\n        }\n        const query = this.#queryCache.build(this, defaultedOptions);\n        return query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query)) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n    }\n    prefetchQuery(options) {\n        return this.fetchQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    fetchInfiniteQuery(options) {\n        options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n        return this.fetchQuery(options);\n    }\n    prefetchInfiniteQuery(options) {\n        return this.fetchInfiniteQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    ensureInfiniteQueryData(options) {\n        options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n        return this.ensureQueryData(options);\n    }\n    resumePausedMutations() {\n        if (_onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.isOnline()) {\n            return this.#mutationCache.resumePausedMutations();\n        }\n        return Promise.resolve();\n    }\n    getQueryCache() {\n        return this.#queryCache;\n    }\n    getMutationCache() {\n        return this.#mutationCache;\n    }\n    getDefaultOptions() {\n        return this.#defaultOptions;\n    }\n    setDefaultOptions(options) {\n        this.#defaultOptions = options;\n    }\n    setQueryDefaults(queryKey, options) {\n        this.#queryDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(queryKey), {\n            queryKey,\n            defaultOptions: options\n        });\n    }\n    getQueryDefaults(queryKey) {\n        const defaults = [\n            ...this.#queryDefaults.values()\n        ];\n        const result = {};\n        defaults.forEach((queryDefault)=>{\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(queryKey, queryDefault.queryKey)) {\n                Object.assign(result, queryDefault.defaultOptions);\n            }\n        });\n        return result;\n    }\n    setMutationDefaults(mutationKey, options) {\n        this.#mutationDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(mutationKey), {\n            mutationKey,\n            defaultOptions: options\n        });\n    }\n    getMutationDefaults(mutationKey) {\n        const defaults = [\n            ...this.#mutationDefaults.values()\n        ];\n        const result = {};\n        defaults.forEach((queryDefault)=>{\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(mutationKey, queryDefault.mutationKey)) {\n                Object.assign(result, queryDefault.defaultOptions);\n            }\n        });\n        return result;\n    }\n    defaultQueryOptions(options) {\n        if (options._defaulted) {\n            return options;\n        }\n        const defaultedOptions = {\n            ...this.#defaultOptions.queries,\n            ...this.getQueryDefaults(options.queryKey),\n            ...options,\n            _defaulted: true\n        };\n        if (!defaultedOptions.queryHash) {\n            defaultedOptions.queryHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashQueryKeyByOptions)(defaultedOptions.queryKey, defaultedOptions);\n        }\n        if (defaultedOptions.refetchOnReconnect === void 0) {\n            defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n        }\n        if (defaultedOptions.throwOnError === void 0) {\n            defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n        }\n        if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n            defaultedOptions.networkMode = \"offlineFirst\";\n        }\n        if (defaultedOptions.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_4__.skipToken) {\n            defaultedOptions.enabled = false;\n        }\n        return defaultedOptions;\n    }\n    defaultMutationOptions(options) {\n        if (options?._defaulted) {\n            return options;\n        }\n        return {\n            ...this.#defaultOptions.mutations,\n            ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n            ...options,\n            _defaulted: true\n        };\n    }\n    clear() {\n        this.#queryCache.clear();\n        this.#mutationCache.clear();\n    }\n};\n //# sourceMappingURL=queryClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3F1ZXJ5Q2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEscUJBQXFCO0FBU0Q7QUFDeUI7QUFDTTtBQUNGO0FBQ0U7QUFDQTtBQUNnQjtBQUNuRSxJQUFJYSxjQUFjO0lBQ2hCLENBQUNDLFVBQVUsQ0FBQztJQUNaLENBQUNDLGFBQWEsQ0FBQztJQUNmLENBQUNDLGNBQWMsQ0FBQztJQUNoQixDQUFDQyxhQUFhLENBQUM7SUFDZixDQUFDQyxnQkFBZ0IsQ0FBQztJQUNsQixDQUFDQyxVQUFVLENBQUM7SUFDWixDQUFDQyxnQkFBZ0IsQ0FBQztJQUNsQixDQUFDQyxpQkFBaUIsQ0FBQztJQUNuQkMsWUFBWUMsU0FBUyxDQUFDLENBQUMsQ0FBRTtRQUN2QixJQUFJLENBQUMsQ0FBQ1QsVUFBVSxHQUFHUyxPQUFPVCxVQUFVLElBQUksSUFBSVAsc0RBQVVBO1FBQ3RELElBQUksQ0FBQyxDQUFDUSxhQUFhLEdBQUdRLE9BQU9SLGFBQWEsSUFBSSxJQUFJUCw0REFBYUE7UUFDL0QsSUFBSSxDQUFDLENBQUNRLGNBQWMsR0FBR08sT0FBT1AsY0FBYyxJQUFJLENBQUM7UUFDakQsSUFBSSxDQUFDLENBQUNDLGFBQWEsR0FBRyxhQUFhLEdBQUcsSUFBSU87UUFDMUMsSUFBSSxDQUFDLENBQUNOLGdCQUFnQixHQUFHLGFBQWEsR0FBRyxJQUFJTTtRQUM3QyxJQUFJLENBQUMsQ0FBQ0wsVUFBVSxHQUFHO0lBQ3JCO0lBQ0FNLFFBQVE7UUFDTixJQUFJLENBQUMsQ0FBQ04sVUFBVTtRQUNoQixJQUFJLElBQUksQ0FBQyxDQUFDQSxVQUFVLEtBQUssR0FBRztRQUM1QixJQUFJLENBQUMsQ0FBQ0MsZ0JBQWdCLEdBQUdYLDBEQUFZQSxDQUFDaUIsU0FBUyxDQUFDLE9BQU9DO1lBQ3JELElBQUlBLFNBQVM7Z0JBQ1gsTUFBTSxJQUFJLENBQUNDLHFCQUFxQjtnQkFD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QUFXLEtBQUs7UUFDekU7UUFDQSxJQUFJekUsaUJBQWlCOEMsWUFBWSxLQUFLLEtBQUssR0FBRztZQUM1QzlDLGlCQUFpQjhDLFlBQVksR0FBRyxDQUFDLENBQUM5QyxpQkFBaUIwRSxRQUFRO1FBQzdEO1FBQ0EsSUFBSSxDQUFDMUUsaUJBQWlCeUUsV0FBVyxJQUFJekUsaUJBQWlCMkUsU0FBUyxFQUFFO1lBQy9EM0UsaUJBQWlCeUUsV0FBVyxHQUFHO1FBQ2pDO1FBQ0EsSUFBSXpFLGlCQUFpQjRFLE9BQU8sS0FBS3ZILGdEQUFTQSxFQUFFO1lBQzFDMkMsaUJBQWlCNkUsT0FBTyxHQUFHO1FBQzdCO1FBQ0EsT0FBTzdFO0lBQ1Q7SUFDQThFLHVCQUF1QnJGLE9BQU8sRUFBRTtRQUM5QixJQUFJQSxTQUFTNkUsWUFBWTtZQUN2QixPQUFPN0U7UUFDVDtRQUNBLE9BQU87WUFDTCxHQUFHLElBQUksQ0FBQyxDQUFDMUIsY0FBYyxDQUFDZ0gsU0FBUztZQUNqQyxHQUFHdEYsU0FBUzJFLGVBQWUsSUFBSSxDQUFDQyxtQkFBbUIsQ0FBQzVFLFFBQVEyRSxXQUFXLENBQUM7WUFDeEUsR0FBRzNFLE9BQU87WUFDVjZFLFlBQVk7UUFDZDtJQUNGO0lBQ0FVLFFBQVE7UUFDTixJQUFJLENBQUMsQ0FBQ25ILFVBQVUsQ0FBQ21ILEtBQUs7UUFDdEIsSUFBSSxDQUFDLENBQUNsSCxhQUFhLENBQUNrSCxLQUFLO0lBQzNCO0FBQ0Y7QUFHRSxDQUNGLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnRfcmVsYXRpb25zaGlwX25leHRqcy8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnlDbGllbnQuanM/MGJhNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvcXVlcnlDbGllbnQudHNcbmltcG9ydCB7XG4gIGZ1bmN0aW9uYWxVcGRhdGUsXG4gIGhhc2hLZXksXG4gIGhhc2hRdWVyeUtleUJ5T3B0aW9ucyxcbiAgbm9vcCxcbiAgcGFydGlhbE1hdGNoS2V5LFxuICByZXNvbHZlU3RhbGVUaW1lLFxuICBza2lwVG9rZW5cbn0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmltcG9ydCB7IFF1ZXJ5Q2FjaGUgfSBmcm9tIFwiLi9xdWVyeUNhY2hlLmpzXCI7XG5pbXBvcnQgeyBNdXRhdGlvbkNhY2hlIH0gZnJvbSBcIi4vbXV0YXRpb25DYWNoZS5qc1wiO1xuaW1wb3J0IHsgZm9jdXNNYW5hZ2VyIH0gZnJvbSBcIi4vZm9jdXNNYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBvbmxpbmVNYW5hZ2VyIH0gZnJvbSBcIi4vb25saW5lTWFuYWdlci5qc1wiO1xuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gXCIuL25vdGlmeU1hbmFnZXIuanNcIjtcbmltcG9ydCB7IGluZmluaXRlUXVlcnlCZWhhdmlvciB9IGZyb20gXCIuL2luZmluaXRlUXVlcnlCZWhhdmlvci5qc1wiO1xudmFyIFF1ZXJ5Q2xpZW50ID0gY2xhc3Mge1xuICAjcXVlcnlDYWNoZTtcbiAgI211dGF0aW9uQ2FjaGU7XG4gICNkZWZhdWx0T3B0aW9ucztcbiAgI3F1ZXJ5RGVmYXVsdHM7XG4gICNtdXRhdGlvbkRlZmF1bHRzO1xuICAjbW91bnRDb3VudDtcbiAgI3Vuc3Vic2NyaWJlRm9jdXM7XG4gICN1bnN1YnNjcmliZU9ubGluZTtcbiAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICB0aGlzLiNxdWVyeUNhY2hlID0gY29uZmlnLnF1ZXJ5Q2FjaGUgfHwgbmV3IFF1ZXJ5Q2FjaGUoKTtcbiAgICB0aGlzLiNtdXRhdGlvbkNhY2hlID0gY29uZmlnLm11dGF0aW9uQ2FjaGUgfHwgbmV3IE11dGF0aW9uQ2FjaGUoKTtcbiAgICB0aGlzLiNkZWZhdWx0T3B0aW9ucyA9IGNvbmZpZy5kZWZhdWx0T3B0aW9ucyB8fCB7fTtcbiAgICB0aGlzLiNxdWVyeURlZmF1bHRzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICB0aGlzLiNtdXRhdGlvbkRlZmF1bHRzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICB0aGlzLiNtb3VudENvdW50ID0gMDtcbiAgfVxuICBtb3VudCgpIHtcbiAgICB0aGlzLiNtb3VudENvdW50Kys7XG4gICAgaWYgKHRoaXMuI21vdW50Q291bnQgIT09IDEpIHJldHVybjtcbiAgICB0aGlzLiN1bnN1YnNjcmliZUZvY3VzID0gZm9jdXNNYW5hZ2VyLnN1YnNjcmliZShhc3luYyAoZm9jdXNlZCkgPT4ge1xuICAgICAgaWYgKGZvY3VzZWQpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5yZXN1bWVQYXVzZWRNdXRhdGlvbnMoKTtcbiAgICAgICAgdGhpcy4jcXVlcnlDYWNoZS5vbkZvY3VzKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy4jdW5zdWJzY3JpYmVPbmxpbmUgPSBvbmxpbmVNYW5hZ2VyLnN1YnNjcmliZShhc3luYyAob25saW5lKSA9PiB7XG4gICAgICBpZiAob25saW5lKSB7XG4gICAgICAgIGF3YWl0IHRoaXMucmVzdW1lUGF1c2VkTXV0YXRpb25zKCk7XG4gICAgICAgIHRoaXMuI3F1ZXJ5Q2FjaGUub25PbmxpbmUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICB1bm1vdW50KCkge1xuICAgIHRoaXMuI21vdW50Q291bnQtLTtcbiAgICBpZiAodGhpcy4jbW91bnRDb3VudCAhPT0gMCkgcmV0dXJuO1xuICAgIHRoaXMuI3Vuc3Vic2NyaWJlRm9jdXM/LigpO1xuICAgIHRoaXMuI3Vuc3Vic2NyaWJlRm9jdXMgPSB2b2lkIDA7XG4gICAgdGhpcy4jdW5zdWJzY3JpYmVPbmxpbmU/LigpO1xuICAgIHRoaXMuI3Vuc3Vic2NyaWJlT25saW5lID0gdm9pZCAwO1xuICB9XG4gIGlzRmV0Y2hpbmcoZmlsdGVycykge1xuICAgIHJldHVybiB0aGlzLiNxdWVyeUNhY2hlLmZpbmRBbGwoeyAuLi5maWx0ZXJzLCBmZXRjaFN0YXR1czogXCJmZXRjaGluZ1wiIH0pLmxlbmd0aDtcbiAgfVxuICBpc011dGF0aW5nKGZpbHRlcnMpIHtcbiAgICByZXR1cm4gdGhpcy4jbXV0YXRpb25DYWNoZS5maW5kQWxsKHsgLi4uZmlsdGVycywgc3RhdHVzOiBcInBlbmRpbmdcIiB9KS5sZW5ndGg7XG4gIH1cbiAgLyoqXG4gICAqIEltcGVyYXRpdmUgKG5vbi1yZWFjdGl2ZSkgd2F5IHRvIHJldHJpZXZlIGRhdGEgZm9yIGEgUXVlcnlLZXkuXG4gICAqIFNob3VsZCBvbmx5IGJlIHVzZWQgaW4gY2FsbGJhY2tzIG9yIGZ1bmN0aW9ucyB3aGVyZSByZWFkaW5nIHRoZSBsYXRlc3QgZGF0YSBpcyBuZWNlc3NhcnksIGUuZy4gZm9yIG9wdGltaXN0aWMgdXBkYXRlcy5cbiAgICpcbiAgICogSGludDogRG8gbm90IHVzZSB0aGlzIGZ1bmN0aW9uIGluc2lkZSBhIGNvbXBvbmVudCwgYmVjYXVzZSBpdCB3b24ndCByZWNlaXZlIHVwZGF0ZXMuXG4gICAqIFVzZSBgdXNlUXVlcnlgIHRvIGNyZWF0ZSBhIGBRdWVyeU9ic2VydmVyYCB0aGF0IHN1YnNjcmliZXMgdG8gY2hhbmdlcy5cbiAgICovXG4gIGdldFF1ZXJ5RGF0YShxdWVyeUtleSkge1xuICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLmRlZmF1bHRRdWVyeU9wdGlvbnMoeyBxdWVyeUtleSB9KTtcbiAgICByZXR1cm4gdGhpcy4jcXVlcnlDYWNoZS5nZXQob3B0aW9ucy5xdWVyeUhhc2gpPy5zdGF0ZS5kYXRhO1xuICB9XG4gIGVuc3VyZVF1ZXJ5RGF0YShvcHRpb25zKSB7XG4gICAgY29uc3QgZGVmYXVsdGVkT3B0aW9ucyA9IHRoaXMuZGVmYXVsdFF1ZXJ5T3B0aW9ucyhvcHRpb25zKTtcbiAgICBjb25zdCBxdWVyeSA9IHRoaXMuI3F1ZXJ5Q2FjaGUuYnVpbGQodGhpcywgZGVmYXVsdGVkT3B0aW9ucyk7XG4gICAgY29uc3QgY2FjaGVkRGF0YSA9IHF1ZXJ5LnN0YXRlLmRhdGE7XG4gICAgaWYgKGNhY2hlZERhdGEgPT09IHZvaWQgMCkge1xuICAgICAgcmV0dXJuIHRoaXMuZmV0Y2hRdWVyeShvcHRpb25zKTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMucmV2YWxpZGF0ZUlmU3RhbGUgJiYgcXVlcnkuaXNTdGFsZUJ5VGltZShyZXNvbHZlU3RhbGVUaW1lKGRlZmF1bHRlZE9wdGlvbnMuc3RhbGVUaW1lLCBxdWVyeSkpKSB7XG4gICAgICB2b2lkIHRoaXMucHJlZmV0Y2hRdWVyeShkZWZhdWx0ZWRPcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShjYWNoZWREYXRhKTtcbiAgfVxuICBnZXRRdWVyaWVzRGF0YShmaWx0ZXJzKSB7XG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5tYXAoKHsgcXVlcnlLZXksIHN0YXRlIH0pID0+IHtcbiAgICAgIGNvbnN0IGRhdGEgPSBzdGF0ZS5kYXRhO1xuICAgICAgcmV0dXJuIFtxdWVyeUtleSwgZGF0YV07XG4gICAgfSk7XG4gIH1cbiAgc2V0UXVlcnlEYXRhKHF1ZXJ5S2V5LCB1cGRhdGVyLCBvcHRpb25zKSB7XG4gICAgY29uc3QgZGVmYXVsdGVkT3B0aW9ucyA9IHRoaXMuZGVmYXVsdFF1ZXJ5T3B0aW9ucyh7IHF1ZXJ5S2V5IH0pO1xuICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy4jcXVlcnlDYWNoZS5nZXQoXG4gICAgICBkZWZhdWx0ZWRPcHRpb25zLnF1ZXJ5SGFzaFxuICAgICk7XG4gICAgY29uc3QgcHJldkRhdGEgPSBxdWVyeT8uc3RhdGUuZGF0YTtcbiAgICBjb25zdCBkYXRhID0gZnVuY3Rpb25hbFVwZGF0ZSh1cGRhdGVyLCBwcmV2RGF0YSk7XG4gICAgaWYgKGRhdGEgPT09IHZvaWQgMCkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJ5Q2FjaGUuYnVpbGQodGhpcywgZGVmYXVsdGVkT3B0aW9ucykuc2V0RGF0YShkYXRhLCB7IC4uLm9wdGlvbnMsIG1hbnVhbDogdHJ1ZSB9KTtcbiAgfVxuICBzZXRRdWVyaWVzRGF0YShmaWx0ZXJzLCB1cGRhdGVyLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5vdGlmeU1hbmFnZXIuYmF0Y2goXG4gICAgICAoKSA9PiB0aGlzLiNxdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykubWFwKCh7IHF1ZXJ5S2V5IH0pID0+IFtcbiAgICAgICAgcXVlcnlLZXksXG4gICAgICAgIHRoaXMuc2V0UXVlcnlEYXRhKHF1ZXJ5S2V5LCB1cGRhdGVyLCBvcHRpb25zKVxuICAgICAgXSlcbiAgICApO1xuICB9XG4gIGdldFF1ZXJ5U3RhdGUocXVlcnlLZXkpIHtcbiAgICBjb25zdCBvcHRpb25zID0gdGhpcy5kZWZhdWx0UXVlcnlPcHRpb25zKHsgcXVlcnlLZXkgfSk7XG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJ5Q2FjaGUuZ2V0KFxuICAgICAgb3B0aW9ucy5xdWVyeUhhc2hcbiAgICApPy5zdGF0ZTtcbiAgfVxuICByZW1vdmVRdWVyaWVzKGZpbHRlcnMpIHtcbiAgICBjb25zdCBxdWVyeUNhY2hlID0gdGhpcy4jcXVlcnlDYWNoZTtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHF1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xuICAgICAgICBxdWVyeUNhY2hlLnJlbW92ZShxdWVyeSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICByZXNldFF1ZXJpZXMoZmlsdGVycywgb3B0aW9ucykge1xuICAgIGNvbnN0IHF1ZXJ5Q2FjaGUgPSB0aGlzLiNxdWVyeUNhY2hlO1xuICAgIHJldHVybiBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHF1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xuICAgICAgICBxdWVyeS5yZXNldCgpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gdGhpcy5yZWZldGNoUXVlcmllcyhcbiAgICAgICAge1xuICAgICAgICAgIHR5cGU6IFwiYWN0aXZlXCIsXG4gICAgICAgICAgLi4uZmlsdGVyc1xuICAgICAgICB9LFxuICAgICAgICBvcHRpb25zXG4gICAgICApO1xuICAgIH0pO1xuICB9XG4gIGNhbmNlbFF1ZXJpZXMoZmlsdGVycywgY2FuY2VsT3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgZGVmYXVsdGVkQ2FuY2VsT3B0aW9ucyA9IHsgcmV2ZXJ0OiB0cnVlLCAuLi5jYW5jZWxPcHRpb25zIH07XG4gICAgY29uc3QgcHJvbWlzZXMgPSBub3RpZnlNYW5hZ2VyLmJhdGNoKFxuICAgICAgKCkgPT4gdGhpcy4jcXVlcnlDYWNoZS5maW5kQWxsKGZpbHRlcnMpLm1hcCgocXVlcnkpID0+IHF1ZXJ5LmNhbmNlbChkZWZhdWx0ZWRDYW5jZWxPcHRpb25zKSlcbiAgICApO1xuICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbihub29wKS5jYXRjaChub29wKTtcbiAgfVxuICBpbnZhbGlkYXRlUXVlcmllcyhmaWx0ZXJzLCBvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLiNxdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykuZm9yRWFjaCgocXVlcnkpID0+IHtcbiAgICAgICAgcXVlcnkuaW52YWxpZGF0ZSgpO1xuICAgICAgfSk7XG4gICAgICBpZiAoZmlsdGVycz8ucmVmZXRjaFR5cGUgPT09IFwibm9uZVwiKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLnJlZmV0Y2hRdWVyaWVzKFxuICAgICAgICB7XG4gICAgICAgICAgLi4uZmlsdGVycyxcbiAgICAgICAgICB0eXBlOiBmaWx0ZXJzPy5yZWZldGNoVHlwZSA/PyBmaWx0ZXJzPy50eXBlID8/IFwiYWN0aXZlXCJcbiAgICAgICAgfSxcbiAgICAgICAgb3B0aW9uc1xuICAgICAgKTtcbiAgICB9KTtcbiAgfVxuICByZWZldGNoUXVlcmllcyhmaWx0ZXJzLCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCBmZXRjaE9wdGlvbnMgPSB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgY2FuY2VsUmVmZXRjaDogb3B0aW9ucy5jYW5jZWxSZWZldGNoID8/IHRydWVcbiAgICB9O1xuICAgIGNvbnN0IHByb21pc2VzID0gbm90aWZ5TWFuYWdlci5iYXRjaChcbiAgICAgICgpID0+IHRoaXMuI3F1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5maWx0ZXIoKHF1ZXJ5KSA9PiAhcXVlcnkuaXNEaXNhYmxlZCgpKS5tYXAoKHF1ZXJ5KSA9PiB7XG4gICAgICAgIGxldCBwcm9taXNlID0gcXVlcnkuZmV0Y2godm9pZCAwLCBmZXRjaE9wdGlvbnMpO1xuICAgICAgICBpZiAoIWZldGNoT3B0aW9ucy50aHJvd09uRXJyb3IpIHtcbiAgICAgICAgICBwcm9taXNlID0gcHJvbWlzZS5jYXRjaChub29wKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcXVlcnkuc3RhdGUuZmV0Y2hTdGF0dXMgPT09IFwicGF1c2VkXCIgPyBQcm9taXNlLnJlc29sdmUoKSA6IHByb21pc2U7XG4gICAgICB9KVxuICAgICk7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKG5vb3ApO1xuICB9XG4gIGZldGNoUXVlcnkob3B0aW9ucykge1xuICAgIGNvbnN0IGRlZmF1bHRlZE9wdGlvbnMgPSB0aGlzLmRlZmF1bHRRdWVyeU9wdGlvbnMob3B0aW9ucyk7XG4gICAgaWYgKGRlZmF1bHRlZE9wdGlvbnMucmV0cnkgPT09IHZvaWQgMCkge1xuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5yZXRyeSA9IGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBxdWVyeSA9IHRoaXMuI3F1ZXJ5Q2FjaGUuYnVpbGQodGhpcywgZGVmYXVsdGVkT3B0aW9ucyk7XG4gICAgcmV0dXJuIHF1ZXJ5LmlzU3RhbGVCeVRpbWUoXG4gICAgICByZXNvbHZlU3RhbGVUaW1lKGRlZmF1bHRlZE9wdGlvbnMuc3RhbGVUaW1lLCBxdWVyeSlcbiAgICApID8gcXVlcnkuZmV0Y2goZGVmYXVsdGVkT3B0aW9ucykgOiBQcm9taXNlLnJlc29sdmUocXVlcnkuc3RhdGUuZGF0YSk7XG4gIH1cbiAgcHJlZmV0Y2hRdWVyeShvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMuZmV0Y2hRdWVyeShvcHRpb25zKS50aGVuKG5vb3ApLmNhdGNoKG5vb3ApO1xuICB9XG4gIGZldGNoSW5maW5pdGVRdWVyeShvcHRpb25zKSB7XG4gICAgb3B0aW9ucy5iZWhhdmlvciA9IGluZmluaXRlUXVlcnlCZWhhdmlvcihvcHRpb25zLnBhZ2VzKTtcbiAgICByZXR1cm4gdGhpcy5mZXRjaFF1ZXJ5KG9wdGlvbnMpO1xuICB9XG4gIHByZWZldGNoSW5maW5pdGVRdWVyeShvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMuZmV0Y2hJbmZpbml0ZVF1ZXJ5KG9wdGlvbnMpLnRoZW4obm9vcCkuY2F0Y2gobm9vcCk7XG4gIH1cbiAgZW5zdXJlSW5maW5pdGVRdWVyeURhdGEob3B0aW9ucykge1xuICAgIG9wdGlvbnMuYmVoYXZpb3IgPSBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3Iob3B0aW9ucy5wYWdlcyk7XG4gICAgcmV0dXJuIHRoaXMuZW5zdXJlUXVlcnlEYXRhKG9wdGlvbnMpO1xuICB9XG4gIHJlc3VtZVBhdXNlZE11dGF0aW9ucygpIHtcbiAgICBpZiAob25saW5lTWFuYWdlci5pc09ubGluZSgpKSB7XG4gICAgICByZXR1cm4gdGhpcy4jbXV0YXRpb25DYWNoZS5yZXN1bWVQYXVzZWRNdXRhdGlvbnMoKTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG4gIGdldFF1ZXJ5Q2FjaGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJ5Q2FjaGU7XG4gIH1cbiAgZ2V0TXV0YXRpb25DYWNoZSgpIHtcbiAgICByZXR1cm4gdGhpcy4jbXV0YXRpb25DYWNoZTtcbiAgfVxuICBnZXREZWZhdWx0T3B0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy4jZGVmYXVsdE9wdGlvbnM7XG4gIH1cbiAgc2V0RGVmYXVsdE9wdGlvbnMob3B0aW9ucykge1xuICAgIHRoaXMuI2RlZmF1bHRPcHRpb25zID0gb3B0aW9ucztcbiAgfVxuICBzZXRRdWVyeURlZmF1bHRzKHF1ZXJ5S2V5LCBvcHRpb25zKSB7XG4gICAgdGhpcy4jcXVlcnlEZWZhdWx0cy5zZXQoaGFzaEtleShxdWVyeUtleSksIHtcbiAgICAgIHF1ZXJ5S2V5LFxuICAgICAgZGVmYXVsdE9wdGlvbnM6IG9wdGlvbnNcbiAgICB9KTtcbiAgfVxuICBnZXRRdWVyeURlZmF1bHRzKHF1ZXJ5S2V5KSB7XG4gICAgY29uc3QgZGVmYXVsdHMgPSBbLi4udGhpcy4jcXVlcnlEZWZhdWx0cy52YWx1ZXMoKV07XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgZGVmYXVsdHMuZm9yRWFjaCgocXVlcnlEZWZhdWx0KSA9PiB7XG4gICAgICBpZiAocGFydGlhbE1hdGNoS2V5KHF1ZXJ5S2V5LCBxdWVyeURlZmF1bHQucXVlcnlLZXkpKSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24ocmVzdWx0LCBxdWVyeURlZmF1bHQuZGVmYXVsdE9wdGlvbnMpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgc2V0TXV0YXRpb25EZWZhdWx0cyhtdXRhdGlvbktleSwgb3B0aW9ucykge1xuICAgIHRoaXMuI211dGF0aW9uRGVmYXVsdHMuc2V0KGhhc2hLZXkobXV0YXRpb25LZXkpLCB7XG4gICAgICBtdXRhdGlvbktleSxcbiAgICAgIGRlZmF1bHRPcHRpb25zOiBvcHRpb25zXG4gICAgfSk7XG4gIH1cbiAgZ2V0TXV0YXRpb25EZWZhdWx0cyhtdXRhdGlvbktleSkge1xuICAgIGNvbnN0IGRlZmF1bHRzID0gWy4uLnRoaXMuI211dGF0aW9uRGVmYXVsdHMudmFsdWVzKCldO1xuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgIGRlZmF1bHRzLmZvckVhY2goKHF1ZXJ5RGVmYXVsdCkgPT4ge1xuICAgICAgaWYgKHBhcnRpYWxNYXRjaEtleShtdXRhdGlvbktleSwgcXVlcnlEZWZhdWx0Lm11dGF0aW9uS2V5KSkge1xuICAgICAgICBPYmplY3QuYXNzaWduKHJlc3VsdCwgcXVlcnlEZWZhdWx0LmRlZmF1bHRPcHRpb25zKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGRlZmF1bHRRdWVyeU9wdGlvbnMob3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zLl9kZWZhdWx0ZWQpIHtcbiAgICAgIHJldHVybiBvcHRpb25zO1xuICAgIH1cbiAgICBjb25zdCBkZWZhdWx0ZWRPcHRpb25zID0ge1xuICAgICAgLi4udGhpcy4jZGVmYXVsdE9wdGlvbnMucXVlcmllcyxcbiAgICAgIC4uLnRoaXMuZ2V0UXVlcnlEZWZhdWx0cyhvcHRpb25zLnF1ZXJ5S2V5KSxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBfZGVmYXVsdGVkOiB0cnVlXG4gICAgfTtcbiAgICBpZiAoIWRlZmF1bHRlZE9wdGlvbnMucXVlcnlIYXNoKSB7XG4gICAgICBkZWZhdWx0ZWRPcHRpb25zLnF1ZXJ5SGFzaCA9IGhhc2hRdWVyeUtleUJ5T3B0aW9ucyhcbiAgICAgICAgZGVmYXVsdGVkT3B0aW9ucy5xdWVyeUtleSxcbiAgICAgICAgZGVmYXVsdGVkT3B0aW9uc1xuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKGRlZmF1bHRlZE9wdGlvbnMucmVmZXRjaE9uUmVjb25uZWN0ID09PSB2b2lkIDApIHtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMucmVmZXRjaE9uUmVjb25uZWN0ID0gZGVmYXVsdGVkT3B0aW9ucy5uZXR3b3JrTW9kZSAhPT0gXCJhbHdheXNcIjtcbiAgICB9XG4gICAgaWYgKGRlZmF1bHRlZE9wdGlvbnMudGhyb3dPbkVycm9yID09PSB2b2lkIDApIHtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMudGhyb3dPbkVycm9yID0gISFkZWZhdWx0ZWRPcHRpb25zLnN1c3BlbnNlO1xuICAgIH1cbiAgICBpZiAoIWRlZmF1bHRlZE9wdGlvbnMubmV0d29ya01vZGUgJiYgZGVmYXVsdGVkT3B0aW9ucy5wZXJzaXN0ZXIpIHtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMubmV0d29ya01vZGUgPSBcIm9mZmxpbmVGaXJzdFwiO1xuICAgIH1cbiAgICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5xdWVyeUZuID09PSBza2lwVG9rZW4pIHtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMuZW5hYmxlZCA9IGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gZGVmYXVsdGVkT3B0aW9ucztcbiAgfVxuICBkZWZhdWx0TXV0YXRpb25PcHRpb25zKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucz8uX2RlZmF1bHRlZCkge1xuICAgICAgcmV0dXJuIG9wdGlvbnM7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAuLi50aGlzLiNkZWZhdWx0T3B0aW9ucy5tdXRhdGlvbnMsXG4gICAgICAuLi5vcHRpb25zPy5tdXRhdGlvbktleSAmJiB0aGlzLmdldE11dGF0aW9uRGVmYXVsdHMob3B0aW9ucy5tdXRhdGlvbktleSksXG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgX2RlZmF1bHRlZDogdHJ1ZVxuICAgIH07XG4gIH1cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy4jcXVlcnlDYWNoZS5jbGVhcigpO1xuICAgIHRoaXMuI211dGF0aW9uQ2FjaGUuY2xlYXIoKTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIFF1ZXJ5Q2xpZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnlDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbImZ1bmN0aW9uYWxVcGRhdGUiLCJoYXNoS2V5IiwiaGFzaFF1ZXJ5S2V5QnlPcHRpb25zIiwibm9vcCIsInBhcnRpYWxNYXRjaEtleSIsInJlc29sdmVTdGFsZVRpbWUiLCJza2lwVG9rZW4iLCJRdWVyeUNhY2hlIiwiTXV0YXRpb25DYWNoZSIsImZvY3VzTWFuYWdlciIsIm9ubGluZU1hbmFnZXIiLCJub3RpZnlNYW5hZ2VyIiwiaW5maW5pdGVRdWVyeUJlaGF2aW9yIiwiUXVlcnlDbGllbnQiLCJxdWVyeUNhY2hlIiwibXV0YXRpb25DYWNoZSIsImRlZmF1bHRPcHRpb25zIiwicXVlcnlEZWZhdWx0cyIsIm11dGF0aW9uRGVmYXVsdHMiLCJtb3VudENvdW50IiwidW5zdWJzY3JpYmVGb2N1cyIsInVuc3Vic2NyaWJlT25saW5lIiwiY29uc3RydWN0b3IiLCJjb25maWciLCJNYXAiLCJtb3VudCIsInN1YnNjcmliZSIsImZvY3VzZWQiLCJyZXN1bWVQYXVzZWRNdXRhdGlvbnMiLCJvbkZvY3VzIiwib25saW5lIiwib25PbmxpbmUiLCJ1bm1vdW50IiwiaXNGZXRjaGluZyIsImZpbHRlcnMiLCJmaW5kQWxsIiwiZmV0Y2hTdGF0dXMiLCJsZW5ndGgiLCJpc011dGF0aW5nIiwic3RhdHVzIiwiZ2V0UXVlcnlEYXRhIiwicXVlcnlLZXkiLCJvcHRpb25zIiwiZGVmYXVsdFF1ZXJ5T3B0aW9ucyIsImdldCIsInF1ZXJ5SGFzaCIsInN0YXRlIiwiZGF0YSIsImVuc3VyZVF1ZXJ5RGF0YSIsImRlZmF1bHRlZE9wdGlvbnMiLCJxdWVyeSIsImJ1aWxkIiwiY2FjaGVkRGF0YSIsImZldGNoUXVlcnkiLCJyZXZhbGlkYXRlSWZTdGFsZSIsImlzU3RhbGVCeVRpbWUiLCJzdGFsZVRpbWUiLCJwcmVmZXRjaFF1ZXJ5IiwiUHJvbWlzZSIsInJlc29sdmUiLCJnZXRRdWVyaWVzRGF0YSIsIm1hcCIsInNldFF1ZXJ5RGF0YSIsInVwZGF0ZXIiLCJwcmV2RGF0YSIsInNldERhdGEiLCJtYW51YWwiLCJzZXRRdWVyaWVzRGF0YSIsImJhdGNoIiwiZ2V0UXVlcnlTdGF0ZSIsInJlbW92ZVF1ZXJpZXMiLCJmb3JFYWNoIiwicmVtb3ZlIiwicmVzZXRRdWVyaWVzIiwicmVzZXQiLCJyZWZldGNoUXVlcmllcyIsInR5cGUiLCJjYW5jZWxRdWVyaWVzIiwiY2FuY2VsT3B0aW9ucyIsImRlZmF1bHRlZENhbmNlbE9wdGlvbnMiLCJyZXZlcnQiLCJwcm9taXNlcyIsImNhbmNlbCIsImFsbCIsInRoZW4iLCJjYXRjaCIsImludmFsaWRhdGVRdWVyaWVzIiwiaW52YWxpZGF0ZSIsInJlZmV0Y2hUeXBlIiwiZmV0Y2hPcHRpb25zIiwiY2FuY2VsUmVmZXRjaCIsImZpbHRlciIsImlzRGlzYWJsZWQiLCJwcm9taXNlIiwiZmV0Y2giLCJ0aHJvd09uRXJyb3IiLCJyZXRyeSIsImZldGNoSW5maW5pdGVRdWVyeSIsImJlaGF2aW9yIiwicGFnZXMiLCJwcmVmZXRjaEluZmluaXRlUXVlcnkiLCJlbnN1cmVJbmZpbml0ZVF1ZXJ5RGF0YSIsImlzT25saW5lIiwiZ2V0UXVlcnlDYWNoZSIsImdldE11dGF0aW9uQ2FjaGUiLCJnZXREZWZhdWx0T3B0aW9ucyIsInNldERlZmF1bHRPcHRpb25zIiwic2V0UXVlcnlEZWZhdWx0cyIsInNldCIsImdldFF1ZXJ5RGVmYXVsdHMiLCJkZWZhdWx0cyIsInZhbHVlcyIsInJlc3VsdCIsInF1ZXJ5RGVmYXVsdCIsIk9iamVjdCIsImFzc2lnbiIsInNldE11dGF0aW9uRGVmYXVsdHMiLCJtdXRhdGlvbktleSIsImdldE11dGF0aW9uRGVmYXVsdHMiLCJfZGVmYXVsdGVkIiwicXVlcmllcyIsInJlZmV0Y2hPblJlY29ubmVjdCIsIm5ldHdvcmtNb2RlIiwic3VzcGVuc2UiLCJwZXJzaXN0ZXIiLCJxdWVyeUZuIiwiZW5hYmxlZCIsImRlZmF1bHRNdXRhdGlvbk9wdGlvbnMiLCJtdXRhdGlvbnMiLCJjbGVhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/queryClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/queryObserver.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryObserver.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryObserver: () => (/* binding */ QueryObserver)\n/* harmony export */ });\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./query.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _thenable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./thenable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/queryObserver.ts\n\n\n\n\n\n\nvar QueryObserver = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    constructor(client, options){\n        super();\n        this.#currentQuery = void 0;\n        this.#currentQueryInitialState = void 0;\n        this.#currentResult = void 0;\n        this.#trackedProps = /* @__PURE__ */ new Set();\n        this.options = options;\n        this.#client = client;\n        this.#selectError = null;\n        this.#currentThenable = (0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.pendingThenable)();\n        if (!this.options.experimental_prefetchInRender) {\n            this.#currentThenable.reject(new Error(\"experimental_prefetchInRender feature flag is not enabled\"));\n        }\n        this.bindMethods();\n        this.setOptions(options);\n    }\n    #client;\n    #currentQuery;\n    #currentQueryInitialState;\n    #currentResult;\n    #currentResultState;\n    #currentResultOptions;\n    #currentThenable;\n    #selectError;\n    #selectFn;\n    #selectResult;\n    // This property keeps track of the last query with defined data.\n    // It will be used to pass the previous data and query to the placeholder function between renders.\n    #lastQueryWithDefinedData;\n    #staleTimeoutId;\n    #refetchIntervalId;\n    #currentRefetchInterval;\n    #trackedProps;\n    bindMethods() {\n        this.refetch = this.refetch.bind(this);\n    }\n    onSubscribe() {\n        if (this.listeners.size === 1) {\n            this.#currentQuery.addObserver(this);\n            if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n                this.#executeFetch();\n            } else {\n                this.updateResult();\n            }\n            this.#updateTimers();\n        }\n    }\n    onUnsubscribe() {\n        if (!this.hasListeners()) {\n            this.destroy();\n        }\n    }\n    shouldFetchOnReconnect() {\n        return shouldFetchOn(this.#currentQuery, this.options, this.options.refetchOnReconnect);\n    }\n    shouldFetchOnWindowFocus() {\n        return shouldFetchOn(this.#currentQuery, this.options, this.options.refetchOnWindowFocus);\n    }\n    destroy() {\n        this.listeners = /* @__PURE__ */ new Set();\n        this.#clearStaleTimeout();\n        this.#clearRefetchInterval();\n        this.#currentQuery.removeObserver(this);\n    }\n    setOptions(options) {\n        const prevOptions = this.options;\n        const prevQuery = this.#currentQuery;\n        this.options = this.#client.defaultQueryOptions(options);\n        if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n            throw new Error(\"Expected enabled to be a boolean or a callback that returns a boolean\");\n        }\n        this.#updateQuery();\n        this.#currentQuery.setOptions(this.options);\n        if (prevOptions._defaulted && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.shallowEqualObjects)(this.options, prevOptions)) {\n            this.#client.getQueryCache().notify({\n                type: \"observerOptionsUpdated\",\n                query: this.#currentQuery,\n                observer: this\n            });\n        }\n        const mounted = this.hasListeners();\n        if (mounted && shouldFetchOptionally(this.#currentQuery, prevQuery, this.options, prevOptions)) {\n            this.#executeFetch();\n        }\n        this.updateResult();\n        if (mounted && (this.#currentQuery !== prevQuery || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(this.options.enabled, this.#currentQuery) !== (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(prevOptions.enabled, this.#currentQuery) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveStaleTime)(this.options.staleTime, this.#currentQuery) !== (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveStaleTime)(prevOptions.staleTime, this.#currentQuery))) {\n            this.#updateStaleTimeout();\n        }\n        const nextRefetchInterval = this.#computeRefetchInterval();\n        if (mounted && (this.#currentQuery !== prevQuery || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(this.options.enabled, this.#currentQuery) !== (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n            this.#updateRefetchInterval(nextRefetchInterval);\n        }\n    }\n    getOptimisticResult(options) {\n        const query = this.#client.getQueryCache().build(this.#client, options);\n        const result = this.createResult(query, options);\n        if (shouldAssignObserverCurrentProperties(this, result)) {\n            this.#currentResult = result;\n            this.#currentResultOptions = this.options;\n            this.#currentResultState = this.#currentQuery.state;\n        }\n        return result;\n    }\n    getCurrentResult() {\n        return this.#currentResult;\n    }\n    trackResult(result, onPropTracked) {\n        const trackedResult = {};\n        Object.keys(result).forEach((key)=>{\n            Object.defineProperty(trackedResult, key, {\n                configurable: false,\n                enumerable: true,\n                get: ()=>{\n                    this.trackProp(key);\n                    onPropTracked?.(key);\n                    return result[key];\n                }\n            });\n        });\n        return trackedResult;\n    }\n    trackProp(key) {\n        this.#trackedProps.add(key);\n    }\n    getCurrentQuery() {\n        return this.#currentQuery;\n    }\n    refetch({ ...options } = {}) {\n        return this.fetch({\n            ...options\n        });\n    }\n    fetchOptimistic(options) {\n        const defaultedOptions = this.#client.defaultQueryOptions(options);\n        const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n        return query.fetch().then(()=>this.createResult(query, defaultedOptions));\n    }\n    fetch(fetchOptions) {\n        return this.#executeFetch({\n            ...fetchOptions,\n            cancelRefetch: fetchOptions.cancelRefetch ?? true\n        }).then(()=>{\n            this.updateResult();\n            return this.#currentResult;\n        });\n    }\n    #executeFetch(fetchOptions) {\n        this.#updateQuery();\n        let promise = this.#currentQuery.fetch(this.options, fetchOptions);\n        if (!fetchOptions?.throwOnError) {\n            promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_2__.noop);\n        }\n        return promise;\n    }\n    #updateStaleTimeout() {\n        this.#clearStaleTimeout();\n        const staleTime = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveStaleTime)(this.options.staleTime, this.#currentQuery);\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_2__.isServer || this.#currentResult.isStale || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isValidTimeout)(staleTime)) {\n            return;\n        }\n        const time = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.timeUntilStale)(this.#currentResult.dataUpdatedAt, staleTime);\n        const timeout = time + 1;\n        this.#staleTimeoutId = setTimeout(()=>{\n            if (!this.#currentResult.isStale) {\n                this.updateResult();\n            }\n        }, timeout);\n    }\n    #computeRefetchInterval() {\n        return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n    }\n    #updateRefetchInterval(nextInterval) {\n        this.#clearRefetchInterval();\n        this.#currentRefetchInterval = nextInterval;\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_2__.isServer || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(this.options.enabled, this.#currentQuery) === false || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isValidTimeout)(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n            return;\n        }\n        this.#refetchIntervalId = setInterval(()=>{\n            if (this.options.refetchIntervalInBackground || _focusManager_js__WEBPACK_IMPORTED_MODULE_3__.focusManager.isFocused()) {\n                this.#executeFetch();\n            }\n        }, this.#currentRefetchInterval);\n    }\n    #updateTimers() {\n        this.#updateStaleTimeout();\n        this.#updateRefetchInterval(this.#computeRefetchInterval());\n    }\n    #clearStaleTimeout() {\n        if (this.#staleTimeoutId) {\n            clearTimeout(this.#staleTimeoutId);\n            this.#staleTimeoutId = void 0;\n        }\n    }\n    #clearRefetchInterval() {\n        if (this.#refetchIntervalId) {\n            clearInterval(this.#refetchIntervalId);\n            this.#refetchIntervalId = void 0;\n        }\n    }\n    createResult(query, options) {\n        const prevQuery = this.#currentQuery;\n        const prevOptions = this.options;\n        const prevResult = this.#currentResult;\n        const prevResultState = this.#currentResultState;\n        const prevResultOptions = this.#currentResultOptions;\n        const queryChange = query !== prevQuery;\n        const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n        const { state } = query;\n        let newState = {\n            ...state\n        };\n        let isPlaceholderData = false;\n        let data;\n        if (options._optimisticResults) {\n            const mounted = this.hasListeners();\n            const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n            const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n            if (fetchOnMount || fetchOptionally) {\n                newState = {\n                    ...newState,\n                    ...(0,_query_js__WEBPACK_IMPORTED_MODULE_4__.fetchState)(state.data, query.options)\n                };\n            }\n            if (options._optimisticResults === \"isRestoring\") {\n                newState.fetchStatus = \"idle\";\n            }\n        }\n        let { error, errorUpdatedAt, status } = newState;\n        data = newState.data;\n        let skipSelect = false;\n        if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n            let placeholderData;\n            if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n                placeholderData = prevResult.data;\n                skipSelect = true;\n            } else {\n                placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(this.#lastQueryWithDefinedData?.state.data, this.#lastQueryWithDefinedData) : options.placeholderData;\n            }\n            if (placeholderData !== void 0) {\n                status = \"success\";\n                data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.replaceData)(prevResult?.data, placeholderData, options);\n                isPlaceholderData = true;\n            }\n        }\n        if (options.select && data !== void 0 && !skipSelect) {\n            if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n                data = this.#selectResult;\n            } else {\n                try {\n                    this.#selectFn = options.select;\n                    data = options.select(data);\n                    data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.replaceData)(prevResult?.data, data, options);\n                    this.#selectResult = data;\n                    this.#selectError = null;\n                } catch (selectError) {\n                    this.#selectError = selectError;\n                }\n            }\n        }\n        if (this.#selectError) {\n            error = this.#selectError;\n            data = this.#selectResult;\n            errorUpdatedAt = Date.now();\n            status = \"error\";\n        }\n        const isFetching = newState.fetchStatus === \"fetching\";\n        const isPending = status === \"pending\";\n        const isError = status === \"error\";\n        const isLoading = isPending && isFetching;\n        const hasData = data !== void 0;\n        const result = {\n            status,\n            fetchStatus: newState.fetchStatus,\n            isPending,\n            isSuccess: status === \"success\",\n            isError,\n            isInitialLoading: isLoading,\n            isLoading,\n            data,\n            dataUpdatedAt: newState.dataUpdatedAt,\n            error,\n            errorUpdatedAt,\n            failureCount: newState.fetchFailureCount,\n            failureReason: newState.fetchFailureReason,\n            errorUpdateCount: newState.errorUpdateCount,\n            isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n            isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n            isFetching,\n            isRefetching: isFetching && !isPending,\n            isLoadingError: isError && !hasData,\n            isPaused: newState.fetchStatus === \"paused\",\n            isPlaceholderData,\n            isRefetchError: isError && hasData,\n            isStale: isStale(query, options),\n            refetch: this.refetch,\n            promise: this.#currentThenable\n        };\n        const nextResult = result;\n        if (this.options.experimental_prefetchInRender) {\n            const finalizeThenableIfPossible = (thenable)=>{\n                if (nextResult.status === \"error\") {\n                    thenable.reject(nextResult.error);\n                } else if (nextResult.data !== void 0) {\n                    thenable.resolve(nextResult.data);\n                }\n            };\n            const recreateThenable = ()=>{\n                const pending = this.#currentThenable = nextResult.promise = (0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.pendingThenable)();\n                finalizeThenableIfPossible(pending);\n            };\n            const prevThenable = this.#currentThenable;\n            switch(prevThenable.status){\n                case \"pending\":\n                    if (query.queryHash === prevQuery.queryHash) {\n                        finalizeThenableIfPossible(prevThenable);\n                    }\n                    break;\n                case \"fulfilled\":\n                    if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n                        recreateThenable();\n                    }\n                    break;\n                case \"rejected\":\n                    if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n                        recreateThenable();\n                    }\n                    break;\n            }\n        }\n        return nextResult;\n    }\n    updateResult() {\n        const prevResult = this.#currentResult;\n        const nextResult = this.createResult(this.#currentQuery, this.options);\n        this.#currentResultState = this.#currentQuery.state;\n        this.#currentResultOptions = this.options;\n        if (this.#currentResultState.data !== void 0) {\n            this.#lastQueryWithDefinedData = this.#currentQuery;\n        }\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.shallowEqualObjects)(nextResult, prevResult)) {\n            return;\n        }\n        this.#currentResult = nextResult;\n        const shouldNotifyListeners = ()=>{\n            if (!prevResult) {\n                return true;\n            }\n            const { notifyOnChangeProps } = this.options;\n            const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n            if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n                return true;\n            }\n            const includedProps = new Set(notifyOnChangePropsValue ?? this.#trackedProps);\n            if (this.options.throwOnError) {\n                includedProps.add(\"error\");\n            }\n            return Object.keys(this.#currentResult).some((key)=>{\n                const typedKey = key;\n                const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n                return changed && includedProps.has(typedKey);\n            });\n        };\n        this.#notify({\n            listeners: shouldNotifyListeners()\n        });\n    }\n    #updateQuery() {\n        const query = this.#client.getQueryCache().build(this.#client, this.options);\n        if (query === this.#currentQuery) {\n            return;\n        }\n        const prevQuery = this.#currentQuery;\n        this.#currentQuery = query;\n        this.#currentQueryInitialState = query.state;\n        if (this.hasListeners()) {\n            prevQuery?.removeObserver(this);\n            query.addObserver(this);\n        }\n    }\n    onQueryUpdate() {\n        this.updateResult();\n        if (this.hasListeners()) {\n            this.#updateTimers();\n        }\n    }\n    #notify(notifyOptions) {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            if (notifyOptions.listeners) {\n                this.listeners.forEach((listener)=>{\n                    listener(this.#currentResult);\n                });\n            }\n            this.#client.getQueryCache().notify({\n                query: this.#currentQuery,\n                type: \"observerResultsUpdated\"\n            });\n        });\n    }\n};\nfunction shouldLoadOnMount(query, options) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n    return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(options.enabled, query) !== false) {\n        const value = typeof field === \"function\" ? field(query) : field;\n        return value === \"always\" || value !== false && isStale(query, options);\n    }\n    return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n    return (query !== prevQuery || (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveEnabled)(options.enabled, query) !== false && query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.resolveStaleTime)(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n    if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.shallowEqualObjects)(observer.getCurrentResult(), optimisticResult)) {\n        return true;\n    }\n    return false;\n}\n //# sourceMappingURL=queryObserver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/queryObserver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/removable.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Removable: () => (/* binding */ Removable)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/removable.ts\n\nvar Removable = class {\n    #gcTimeout;\n    destroy() {\n        this.clearGcTimeout();\n    }\n    scheduleGc() {\n        this.clearGcTimeout();\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isValidTimeout)(this.gcTime)) {\n            this.#gcTimeout = setTimeout(()=>{\n                this.optionalRemove();\n            }, this.gcTime);\n        }\n    }\n    updateGcTime(newGcTime) {\n        this.gcTime = Math.max(this.gcTime || 0, newGcTime ?? (_utils_js__WEBPACK_IMPORTED_MODULE_0__.isServer ? Infinity : 5 * 60 * 1e3));\n    }\n    clearGcTimeout() {\n        if (this.#gcTimeout) {\n            clearTimeout(this.#gcTimeout);\n            this.#gcTimeout = void 0;\n        }\n    }\n};\n //# sourceMappingURL=removable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3JlbW92YWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLG1CQUFtQjtBQUNtQztBQUN0RCxJQUFJRSxZQUFZO0lBQ2QsQ0FBQ0MsU0FBUyxDQUFDO0lBQ1hDLFVBQVU7UUFDUixJQUFJLENBQUNDLGNBQWM7SUFDckI7SUFDQUMsYUFBYTtRQUNYLElBQUksQ0FBQ0QsY0FBYztRQUNuQixJQUFJSix5REFBY0EsQ0FBQyxJQUFJLENBQUNNLE1BQU0sR0FBRztZQUMvQixJQUFJLENBQUMsQ0FBQ0osU0FBUyxHQUFHSyxXQUFXO2dCQUMzQixJQUFJLENBQUNDLGNBQWM7WUFDckIsR0FBRyxJQUFJLENBQUNGLE1BQU07UUFDaEI7SUFDRjtJQUNBRyxhQUFhQyxTQUFTLEVBQUU7UUFDdEIsSUFBSSxDQUFDSixNQUFNLEdBQUdLLEtBQUtDLEdBQUcsQ0FDcEIsSUFBSSxDQUFDTixNQUFNLElBQUksR0FDZkksYUFBY1gsQ0FBQUEsK0NBQVFBLEdBQUdjLFdBQVcsSUFBSSxLQUFLLEdBQUU7SUFFbkQ7SUFDQVQsaUJBQWlCO1FBQ2YsSUFBSSxJQUFJLENBQUMsQ0FBQ0YsU0FBUyxFQUFFO1lBQ25CWSxhQUFhLElBQUksQ0FBQyxDQUFDWixTQUFTO1lBQzVCLElBQUksQ0FBQyxDQUFDQSxTQUFTLEdBQUcsS0FBSztRQUN6QjtJQUNGO0FBQ0Y7QUFHRSxDQUNGLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnRfcmVsYXRpb25zaGlwX25leHRqcy8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcmVtb3ZhYmxlLmpzPzU5NzgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3JlbW92YWJsZS50c1xuaW1wb3J0IHsgaXNTZXJ2ZXIsIGlzVmFsaWRUaW1lb3V0IH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbnZhciBSZW1vdmFibGUgPSBjbGFzcyB7XG4gICNnY1RpbWVvdXQ7XG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5jbGVhckdjVGltZW91dCgpO1xuICB9XG4gIHNjaGVkdWxlR2MoKSB7XG4gICAgdGhpcy5jbGVhckdjVGltZW91dCgpO1xuICAgIGlmIChpc1ZhbGlkVGltZW91dCh0aGlzLmdjVGltZSkpIHtcbiAgICAgIHRoaXMuI2djVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLm9wdGlvbmFsUmVtb3ZlKCk7XG4gICAgICB9LCB0aGlzLmdjVGltZSk7XG4gICAgfVxuICB9XG4gIHVwZGF0ZUdjVGltZShuZXdHY1RpbWUpIHtcbiAgICB0aGlzLmdjVGltZSA9IE1hdGgubWF4KFxuICAgICAgdGhpcy5nY1RpbWUgfHwgMCxcbiAgICAgIG5ld0djVGltZSA/PyAoaXNTZXJ2ZXIgPyBJbmZpbml0eSA6IDUgKiA2MCAqIDFlMylcbiAgICApO1xuICB9XG4gIGNsZWFyR2NUaW1lb3V0KCkge1xuICAgIGlmICh0aGlzLiNnY1RpbWVvdXQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLiNnY1RpbWVvdXQpO1xuICAgICAgdGhpcy4jZ2NUaW1lb3V0ID0gdm9pZCAwO1xuICAgIH1cbiAgfVxufTtcbmV4cG9ydCB7XG4gIFJlbW92YWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbW92YWJsZS5qcy5tYXAiXSwibmFtZXMiOlsiaXNTZXJ2ZXIiLCJpc1ZhbGlkVGltZW91dCIsIlJlbW92YWJsZSIsImdjVGltZW91dCIsImRlc3Ryb3kiLCJjbGVhckdjVGltZW91dCIsInNjaGVkdWxlR2MiLCJnY1RpbWUiLCJzZXRUaW1lb3V0Iiwib3B0aW9uYWxSZW1vdmUiLCJ1cGRhdGVHY1RpbWUiLCJuZXdHY1RpbWUiLCJNYXRoIiwibWF4IiwiSW5maW5pdHkiLCJjbGVhclRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/retryer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelledError: () => (/* binding */ CancelledError),\n/* harmony export */   canFetch: () => (/* binding */ canFetch),\n/* harmony export */   createRetryer: () => (/* binding */ createRetryer),\n/* harmony export */   isCancelledError: () => (/* binding */ isCancelledError)\n/* harmony export */ });\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onlineManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _thenable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./thenable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/retryer.ts\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n    return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n    return (networkMode ?? \"online\") === \"online\" ? _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n    constructor(options){\n        super(\"CancelledError\");\n        this.revert = options?.revert;\n        this.silent = options?.silent;\n    }\n};\nfunction isCancelledError(value) {\n    return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n    let isRetryCancelled = false;\n    let failureCount = 0;\n    let isResolved = false;\n    let continueFn;\n    const thenable = (0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.pendingThenable)();\n    const cancel = (cancelOptions)=>{\n        if (!isResolved) {\n            reject(new CancelledError(cancelOptions));\n            config.abort?.();\n        }\n    };\n    const cancelRetry = ()=>{\n        isRetryCancelled = true;\n    };\n    const continueRetry = ()=>{\n        isRetryCancelled = false;\n    };\n    const canContinue = ()=>_focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused() && (config.networkMode === \"always\" || _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline()) && config.canRun();\n    const canStart = ()=>canFetch(config.networkMode) && config.canRun();\n    const resolve = (value)=>{\n        if (!isResolved) {\n            isResolved = true;\n            config.onSuccess?.(value);\n            continueFn?.();\n            thenable.resolve(value);\n        }\n    };\n    const reject = (value)=>{\n        if (!isResolved) {\n            isResolved = true;\n            config.onError?.(value);\n            continueFn?.();\n            thenable.reject(value);\n        }\n    };\n    const pause = ()=>{\n        return new Promise((continueResolve)=>{\n            continueFn = (value)=>{\n                if (isResolved || canContinue()) {\n                    continueResolve(value);\n                }\n            };\n            config.onPause?.();\n        }).then(()=>{\n            continueFn = void 0;\n            if (!isResolved) {\n                config.onContinue?.();\n            }\n        });\n    };\n    const run = ()=>{\n        if (isResolved) {\n            return;\n        }\n        let promiseOrValue;\n        const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n        try {\n            promiseOrValue = initialPromise ?? config.fn();\n        } catch (error) {\n            promiseOrValue = Promise.reject(error);\n        }\n        Promise.resolve(promiseOrValue).then(resolve).catch((error)=>{\n            if (isResolved) {\n                return;\n            }\n            const retry = config.retry ?? (_utils_js__WEBPACK_IMPORTED_MODULE_3__.isServer ? 0 : 3);\n            const retryDelay = config.retryDelay ?? defaultRetryDelay;\n            const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n            const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n            if (isRetryCancelled || !shouldRetry) {\n                reject(error);\n                return;\n            }\n            failureCount++;\n            config.onFail?.(failureCount, error);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(delay).then(()=>{\n                return canContinue() ? void 0 : pause();\n            }).then(()=>{\n                if (isRetryCancelled) {\n                    reject(error);\n                } else {\n                    run();\n                }\n            });\n        });\n    };\n    return {\n        promise: thenable,\n        cancel,\n        continue: ()=>{\n            continueFn?.();\n            return thenable;\n        },\n        cancelRetry,\n        continueRetry,\n        canStart,\n        start: ()=>{\n            if (canStart()) {\n                run();\n            } else {\n                pause().then(run);\n            }\n            return thenable;\n        }\n    };\n}\n //# sourceMappingURL=retryer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/subscribable.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subscribable: () => (/* binding */ Subscribable)\n/* harmony export */ });\n// src/subscribable.ts\nvar Subscribable = class {\n    constructor(){\n        this.listeners = /* @__PURE__ */ new Set();\n        this.subscribe = this.subscribe.bind(this);\n    }\n    subscribe(listener) {\n        this.listeners.add(listener);\n        this.onSubscribe();\n        return ()=>{\n            this.listeners.delete(listener);\n            this.onUnsubscribe();\n        };\n    }\n    hasListeners() {\n        return this.listeners.size > 0;\n    }\n    onSubscribe() {}\n    onUnsubscribe() {}\n};\n //# sourceMappingURL=subscribable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3N1YnNjcmliYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsc0JBQXNCO0FBQ3RCLElBQUlBLGVBQWU7SUFDakJDLGFBQWM7UUFDWixJQUFJLENBQUNDLFNBQVMsR0FBRyxhQUFhLEdBQUcsSUFBSUM7UUFDckMsSUFBSSxDQUFDQyxTQUFTLEdBQUcsSUFBSSxDQUFDQSxTQUFTLENBQUNDLElBQUksQ0FBQyxJQUFJO0lBQzNDO0lBQ0FELFVBQVVFLFFBQVEsRUFBRTtRQUNsQixJQUFJLENBQUNKLFNBQVMsQ0FBQ0ssR0FBRyxDQUFDRDtRQUNuQixJQUFJLENBQUNFLFdBQVc7UUFDaEIsT0FBTztZQUNMLElBQUksQ0FBQ04sU0FBUyxDQUFDTyxNQUFNLENBQUNIO1lBQ3RCLElBQUksQ0FBQ0ksYUFBYTtRQUNwQjtJQUNGO0lBQ0FDLGVBQWU7UUFDYixPQUFPLElBQUksQ0FBQ1QsU0FBUyxDQUFDVSxJQUFJLEdBQUc7SUFDL0I7SUFDQUosY0FBYyxDQUNkO0lBQ0FFLGdCQUFnQixDQUNoQjtBQUNGO0FBR0UsQ0FDRix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkZW50X3JlbGF0aW9uc2hpcF9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3N1YnNjcmliYWJsZS5qcz9iZWJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zdWJzY3JpYmFibGUudHNcbnZhciBTdWJzY3JpYmFibGUgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgICB0aGlzLnN1YnNjcmliZSA9IHRoaXMuc3Vic2NyaWJlLmJpbmQodGhpcyk7XG4gIH1cbiAgc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICB0aGlzLm9uU3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lcik7XG4gICAgICB0aGlzLm9uVW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9XG4gIGhhc0xpc3RlbmVycygpIHtcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMuc2l6ZSA+IDA7XG4gIH1cbiAgb25TdWJzY3JpYmUoKSB7XG4gIH1cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIFN1YnNjcmliYWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1YnNjcmliYWJsZS5qcy5tYXAiXSwibmFtZXMiOlsiU3Vic2NyaWJhYmxlIiwiY29uc3RydWN0b3IiLCJsaXN0ZW5lcnMiLCJTZXQiLCJzdWJzY3JpYmUiLCJiaW5kIiwibGlzdGVuZXIiLCJhZGQiLCJvblN1YnNjcmliZSIsImRlbGV0ZSIsIm9uVW5zdWJzY3JpYmUiLCJoYXNMaXN0ZW5lcnMiLCJzaXplIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/thenable.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pendingThenable: () => (/* binding */ pendingThenable)\n/* harmony export */ });\n// src/thenable.ts\nfunction pendingThenable() {\n    let resolve;\n    let reject;\n    const thenable = new Promise((_resolve, _reject)=>{\n        resolve = _resolve;\n        reject = _reject;\n    });\n    thenable.status = \"pending\";\n    thenable.catch(()=>{});\n    function finalize(data) {\n        Object.assign(thenable, data);\n        delete thenable.resolve;\n        delete thenable.reject;\n    }\n    thenable.resolve = (value)=>{\n        finalize({\n            status: \"fulfilled\",\n            value\n        });\n        resolve(value);\n    };\n    thenable.reject = (reason)=>{\n        finalize({\n            status: \"rejected\",\n            reason\n        });\n        reject(reason);\n    };\n    return thenable;\n}\n //# sourceMappingURL=thenable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3RoZW5hYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxrQkFBa0I7QUFDbEIsU0FBU0E7SUFDUCxJQUFJQztJQUNKLElBQUlDO0lBQ0osTUFBTUMsV0FBVyxJQUFJQyxRQUFRLENBQUNDLFVBQVVDO1FBQ3RDTCxVQUFVSTtRQUNWSCxTQUFTSTtJQUNYO0lBQ0FILFNBQVNJLE1BQU0sR0FBRztJQUNsQkosU0FBU0ssS0FBSyxDQUFDLEtBQ2Y7SUFDQSxTQUFTQyxTQUFTQyxJQUFJO1FBQ3BCQyxPQUFPQyxNQUFNLENBQUNULFVBQVVPO1FBQ3hCLE9BQU9QLFNBQVNGLE9BQU87UUFDdkIsT0FBT0UsU0FBU0QsTUFBTTtJQUN4QjtJQUNBQyxTQUFTRixPQUFPLEdBQUcsQ0FBQ1k7UUFDbEJKLFNBQVM7WUFDUEYsUUFBUTtZQUNSTTtRQUNGO1FBQ0FaLFFBQVFZO0lBQ1Y7SUFDQVYsU0FBU0QsTUFBTSxHQUFHLENBQUNZO1FBQ2pCTCxTQUFTO1lBQ1BGLFFBQVE7WUFDUk87UUFDRjtRQUNBWixPQUFPWTtJQUNUO0lBQ0EsT0FBT1g7QUFDVDtBQUdFLENBQ0Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudF9yZWxhdGlvbnNoaXBfbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi90aGVuYWJsZS5qcz9iOTFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy90aGVuYWJsZS50c1xuZnVuY3Rpb24gcGVuZGluZ1RoZW5hYmxlKCkge1xuICBsZXQgcmVzb2x2ZTtcbiAgbGV0IHJlamVjdDtcbiAgY29uc3QgdGhlbmFibGUgPSBuZXcgUHJvbWlzZSgoX3Jlc29sdmUsIF9yZWplY3QpID0+IHtcbiAgICByZXNvbHZlID0gX3Jlc29sdmU7XG4gICAgcmVqZWN0ID0gX3JlamVjdDtcbiAgfSk7XG4gIHRoZW5hYmxlLnN0YXR1cyA9IFwicGVuZGluZ1wiO1xuICB0aGVuYWJsZS5jYXRjaCgoKSA9PiB7XG4gIH0pO1xuICBmdW5jdGlvbiBmaW5hbGl6ZShkYXRhKSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGVuYWJsZSwgZGF0YSk7XG4gICAgZGVsZXRlIHRoZW5hYmxlLnJlc29sdmU7XG4gICAgZGVsZXRlIHRoZW5hYmxlLnJlamVjdDtcbiAgfVxuICB0aGVuYWJsZS5yZXNvbHZlID0gKHZhbHVlKSA9PiB7XG4gICAgZmluYWxpemUoe1xuICAgICAgc3RhdHVzOiBcImZ1bGZpbGxlZFwiLFxuICAgICAgdmFsdWVcbiAgICB9KTtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfTtcbiAgdGhlbmFibGUucmVqZWN0ID0gKHJlYXNvbikgPT4ge1xuICAgIGZpbmFsaXplKHtcbiAgICAgIHN0YXR1czogXCJyZWplY3RlZFwiLFxuICAgICAgcmVhc29uXG4gICAgfSk7XG4gICAgcmVqZWN0KHJlYXNvbik7XG4gIH07XG4gIHJldHVybiB0aGVuYWJsZTtcbn1cbmV4cG9ydCB7XG4gIHBlbmRpbmdUaGVuYWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRoZW5hYmxlLmpzLm1hcCJdLCJuYW1lcyI6WyJwZW5kaW5nVGhlbmFibGUiLCJyZXNvbHZlIiwicmVqZWN0IiwidGhlbmFibGUiLCJQcm9taXNlIiwiX3Jlc29sdmUiLCJfcmVqZWN0Iiwic3RhdHVzIiwiY2F0Y2giLCJmaW5hbGl6ZSIsImRhdGEiLCJPYmplY3QiLCJhc3NpZ24iLCJ2YWx1ZSIsInJlYXNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToEnd: () => (/* binding */ addToEnd),\n/* harmony export */   addToStart: () => (/* binding */ addToStart),\n/* harmony export */   ensureQueryFn: () => (/* binding */ ensureQueryFn),\n/* harmony export */   functionalUpdate: () => (/* binding */ functionalUpdate),\n/* harmony export */   hashKey: () => (/* binding */ hashKey),\n/* harmony export */   hashQueryKeyByOptions: () => (/* binding */ hashQueryKeyByOptions),\n/* harmony export */   isPlainArray: () => (/* binding */ isPlainArray),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isServer: () => (/* binding */ isServer),\n/* harmony export */   isValidTimeout: () => (/* binding */ isValidTimeout),\n/* harmony export */   keepPreviousData: () => (/* binding */ keepPreviousData),\n/* harmony export */   matchMutation: () => (/* binding */ matchMutation),\n/* harmony export */   matchQuery: () => (/* binding */ matchQuery),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   partialMatchKey: () => (/* binding */ partialMatchKey),\n/* harmony export */   replaceData: () => (/* binding */ replaceData),\n/* harmony export */   replaceEqualDeep: () => (/* binding */ replaceEqualDeep),\n/* harmony export */   resolveEnabled: () => (/* binding */ resolveEnabled),\n/* harmony export */   resolveStaleTime: () => (/* binding */ resolveStaleTime),\n/* harmony export */   shallowEqualObjects: () => (/* binding */ shallowEqualObjects),\n/* harmony export */   skipToken: () => (/* binding */ skipToken),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   timeUntilStale: () => (/* binding */ timeUntilStale)\n/* harmony export */ });\n// src/utils.ts\nvar isServer =  true || 0;\nfunction noop() {}\nfunction functionalUpdate(updater, input) {\n    return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n    return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n    return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n    return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n    return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n    const { type = \"all\", exact, fetchStatus, predicate, queryKey, stale } = filters;\n    if (queryKey) {\n        if (exact) {\n            if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n                return false;\n            }\n        } else if (!partialMatchKey(query.queryKey, queryKey)) {\n            return false;\n        }\n    }\n    if (type !== \"all\") {\n        const isActive = query.isActive();\n        if (type === \"active\" && !isActive) {\n            return false;\n        }\n        if (type === \"inactive\" && isActive) {\n            return false;\n        }\n    }\n    if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n        return false;\n    }\n    if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n        return false;\n    }\n    if (predicate && !predicate(query)) {\n        return false;\n    }\n    return true;\n}\nfunction matchMutation(filters, mutation) {\n    const { exact, status, predicate, mutationKey } = filters;\n    if (mutationKey) {\n        if (!mutation.options.mutationKey) {\n            return false;\n        }\n        if (exact) {\n            if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n                return false;\n            }\n        } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n            return false;\n        }\n    }\n    if (status && mutation.state.status !== status) {\n        return false;\n    }\n    if (predicate && !predicate(mutation)) {\n        return false;\n    }\n    return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n    const hashFn = options?.queryKeyHashFn || hashKey;\n    return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n    return JSON.stringify(queryKey, (_, val)=>isPlainObject(val) ? Object.keys(val).sort().reduce((result, key)=>{\n            result[key] = val[key];\n            return result;\n        }, {}) : val);\n}\nfunction partialMatchKey(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (typeof a !== typeof b) {\n        return false;\n    }\n    if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n        return Object.keys(b).every((key)=>partialMatchKey(a[key], b[key]));\n    }\n    return false;\n}\nfunction replaceEqualDeep(a, b) {\n    if (a === b) {\n        return a;\n    }\n    const array = isPlainArray(a) && isPlainArray(b);\n    if (array || isPlainObject(a) && isPlainObject(b)) {\n        const aItems = array ? a : Object.keys(a);\n        const aSize = aItems.length;\n        const bItems = array ? b : Object.keys(b);\n        const bSize = bItems.length;\n        const copy = array ? [] : {};\n        let equalItems = 0;\n        for(let i = 0; i < bSize; i++){\n            const key = array ? i : bItems[i];\n            if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n                copy[key] = void 0;\n                equalItems++;\n            } else {\n                copy[key] = replaceEqualDeep(a[key], b[key]);\n                if (copy[key] === a[key] && a[key] !== void 0) {\n                    equalItems++;\n                }\n            }\n        }\n        return aSize === bSize && equalItems === aSize ? a : copy;\n    }\n    return b;\n}\nfunction shallowEqualObjects(a, b) {\n    if (!b || Object.keys(a).length !== Object.keys(b).length) {\n        return false;\n    }\n    for(const key in a){\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isPlainArray(value) {\n    return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n    if (!hasObjectPrototype(o)) {\n        return false;\n    }\n    const ctor = o.constructor;\n    if (ctor === void 0) {\n        return true;\n    }\n    const prot = ctor.prototype;\n    if (!hasObjectPrototype(prot)) {\n        return false;\n    }\n    if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n        return false;\n    }\n    if (Object.getPrototypeOf(o) !== Object.prototype) {\n        return false;\n    }\n    return true;\n}\nfunction hasObjectPrototype(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n    return new Promise((resolve)=>{\n        setTimeout(resolve, timeout);\n    });\n}\nfunction replaceData(prevData, data, options) {\n    if (typeof options.structuralSharing === \"function\") {\n        return options.structuralSharing(prevData, data);\n    } else if (options.structuralSharing !== false) {\n        if (true) {\n            try {\n                return replaceEqualDeep(prevData, data);\n            } catch (error) {\n                console.error(`Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`);\n                throw error;\n            }\n        }\n        return replaceEqualDeep(prevData, data);\n    }\n    return data;\n}\nfunction keepPreviousData(previousData) {\n    return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n    const newItems = [\n        ...items,\n        item\n    ];\n    return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n    const newItems = [\n        item,\n        ...items\n    ];\n    return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n    if (true) {\n        if (options.queryFn === skipToken) {\n            console.error(`Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`);\n        }\n    }\n    if (!options.queryFn && fetchOptions?.initialPromise) {\n        return ()=>fetchOptions.initialPromise;\n    }\n    if (!options.queryFn || options.queryFn === skipToken) {\n        return ()=>Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n    }\n    return options.queryFn;\n}\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClientContext: () => (/* binding */ QueryClientContext),\n/* harmony export */   QueryClientProvider: () => (/* binding */ QueryClientProvider),\n/* harmony export */   useQueryClient: () => (/* binding */ useQueryClient)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ QueryClientContext,QueryClientProvider,useQueryClient auto */ // src/QueryClientProvider.tsx\n\n\nvar QueryClientContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nvar useQueryClient = (queryClient)=>{\n    const client = react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);\n    if (queryClient) {\n        return queryClient;\n    }\n    if (!client) {\n        throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n    }\n    return client;\n};\nvar QueryClientProvider = ({ client, children })=>{\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        client.mount();\n        return ()=>{\n            client.unmount();\n        };\n    }, [\n        client\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryClientContext.Provider, {\n        value: client,\n        children\n    });\n};\n //# sourceMappingURL=QueryClientProvider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUNsaWVudFByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OzJHQUVBLDhCQUE4QjtBQUNDO0FBQ1M7QUFDeEMsSUFBSUUsbUNBQXFCRixnREFBbUIsQ0FDMUMsS0FBSztBQUVQLElBQUlJLGlCQUFpQixDQUFDQztJQUNwQixNQUFNQyxTQUFTTiw2Q0FBZ0IsQ0FBQ0U7SUFDaEMsSUFBSUcsYUFBYTtRQUNmLE9BQU9BO0lBQ1Q7SUFDQSxJQUFJLENBQUNDLFFBQVE7UUFDWCxNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFDQSxPQUFPRjtBQUNUO0FBQ0EsSUFBSUcsc0JBQXNCLENBQUMsRUFDekJILE1BQU0sRUFDTkksUUFBUSxFQUNUO0lBQ0NWLDRDQUFlLENBQUM7UUFDZE0sT0FBT00sS0FBSztRQUNaLE9BQU87WUFDTE4sT0FBT08sT0FBTztRQUNoQjtJQUNGLEdBQUc7UUFBQ1A7S0FBTztJQUNYLE9BQU8sYUFBYSxHQUFHTCxzREFBR0EsQ0FBQ0MsbUJBQW1CWSxRQUFRLEVBQUU7UUFBRUMsT0FBT1Q7UUFBUUk7SUFBUztBQUNwRjtBQUtFLENBQ0YsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudF9yZWxhdGlvbnNoaXBfbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vUXVlcnlDbGllbnRQcm92aWRlci5qcz8xOGQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vLyBzcmMvUXVlcnlDbGllbnRQcm92aWRlci50c3hcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsganN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG52YXIgUXVlcnlDbGllbnRDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChcbiAgdm9pZCAwXG4pO1xudmFyIHVzZVF1ZXJ5Q2xpZW50ID0gKHF1ZXJ5Q2xpZW50KSA9PiB7XG4gIGNvbnN0IGNsaWVudCA9IFJlYWN0LnVzZUNvbnRleHQoUXVlcnlDbGllbnRDb250ZXh0KTtcbiAgaWYgKHF1ZXJ5Q2xpZW50KSB7XG4gICAgcmV0dXJuIHF1ZXJ5Q2xpZW50O1xuICB9XG4gIGlmICghY2xpZW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gUXVlcnlDbGllbnQgc2V0LCB1c2UgUXVlcnlDbGllbnRQcm92aWRlciB0byBzZXQgb25lXCIpO1xuICB9XG4gIHJldHVybiBjbGllbnQ7XG59O1xudmFyIFF1ZXJ5Q2xpZW50UHJvdmlkZXIgPSAoe1xuICBjbGllbnQsXG4gIGNoaWxkcmVuXG59KSA9PiB7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY2xpZW50Lm1vdW50KCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsaWVudC51bm1vdW50KCk7XG4gICAgfTtcbiAgfSwgW2NsaWVudF0pO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChRdWVyeUNsaWVudENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNsaWVudCwgY2hpbGRyZW4gfSk7XG59O1xuZXhwb3J0IHtcbiAgUXVlcnlDbGllbnRDb250ZXh0LFxuICBRdWVyeUNsaWVudFByb3ZpZGVyLFxuICB1c2VRdWVyeUNsaWVudFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVF1ZXJ5Q2xpZW50UHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwianN4IiwiUXVlcnlDbGllbnRDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInVzZVF1ZXJ5Q2xpZW50IiwicXVlcnlDbGllbnQiLCJjbGllbnQiLCJ1c2VDb250ZXh0IiwiRXJyb3IiLCJRdWVyeUNsaWVudFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJ1c2VFZmZlY3QiLCJtb3VudCIsInVubW91bnQiLCJQcm92aWRlciIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryErrorResetBoundary: () => (/* binding */ QueryErrorResetBoundary),\n/* harmony export */   useQueryErrorResetBoundary: () => (/* binding */ useQueryErrorResetBoundary)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ QueryErrorResetBoundary,useQueryErrorResetBoundary auto */ // src/QueryErrorResetBoundary.tsx\n\n\nfunction createValue() {\n    let isReset = false;\n    return {\n        clearReset: ()=>{\n            isReset = false;\n        },\n        reset: ()=>{\n            isReset = true;\n        },\n        isReset: ()=>{\n            return isReset;\n        }\n    };\n}\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(createValue());\nvar useQueryErrorResetBoundary = ()=>react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({ children })=>{\n    const [value] = react__WEBPACK_IMPORTED_MODULE_0__.useState(()=>createValue());\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryErrorResetBoundaryContext.Provider, {\n        value,\n        children: typeof children === \"function\" ? children(value) : children\n    });\n};\n //# sourceMappingURL=QueryErrorResetBoundary.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUVycm9yUmVzZXRCb3VuZGFyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O3dHQUVBLGtDQUFrQztBQUNIO0FBQ1M7QUFDeEMsU0FBU0U7SUFDUCxJQUFJQyxVQUFVO0lBQ2QsT0FBTztRQUNMQyxZQUFZO1lBQ1ZELFVBQVU7UUFDWjtRQUNBRSxPQUFPO1lBQ0xGLFVBQVU7UUFDWjtRQUNBQSxTQUFTO1lBQ1AsT0FBT0E7UUFDVDtJQUNGO0FBQ0Y7QUFDQSxJQUFJRywrQ0FBaUNOLGdEQUFtQixDQUFDRTtBQUN6RCxJQUFJTSw2QkFBNkIsSUFBTVIsNkNBQWdCLENBQUNNO0FBQ3hELElBQUlJLDBCQUEwQixDQUFDLEVBQzdCQyxRQUFRLEVBQ1Q7SUFDQyxNQUFNLENBQUNDLE1BQU0sR0FBR1osMkNBQWMsQ0FBQyxJQUFNRTtJQUNyQyxPQUFPLGFBQWEsR0FBR0Qsc0RBQUdBLENBQUNLLCtCQUErQlEsUUFBUSxFQUFFO1FBQUVGO1FBQU9ELFVBQVUsT0FBT0EsYUFBYSxhQUFhQSxTQUFTQyxTQUFTRDtJQUFTO0FBQ3JKO0FBSUUsQ0FDRixtREFBbUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkZW50X3JlbGF0aW9uc2hpcF9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUVycm9yUmVzZXRCb3VuZGFyeS5qcz80ZDdjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vLyBzcmMvUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuZnVuY3Rpb24gY3JlYXRlVmFsdWUoKSB7XG4gIGxldCBpc1Jlc2V0ID0gZmFsc2U7XG4gIHJldHVybiB7XG4gICAgY2xlYXJSZXNldDogKCkgPT4ge1xuICAgICAgaXNSZXNldCA9IGZhbHNlO1xuICAgIH0sXG4gICAgcmVzZXQ6ICgpID0+IHtcbiAgICAgIGlzUmVzZXQgPSB0cnVlO1xuICAgIH0sXG4gICAgaXNSZXNldDogKCkgPT4ge1xuICAgICAgcmV0dXJuIGlzUmVzZXQ7XG4gICAgfVxuICB9O1xufVxudmFyIFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5Q29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoY3JlYXRlVmFsdWUoKSk7XG52YXIgdXNlUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkgPSAoKSA9PiBSZWFjdC51c2VDb250ZXh0KFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5Q29udGV4dCk7XG52YXIgUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkgPSAoe1xuICBjaGlsZHJlblxufSkgPT4ge1xuICBjb25zdCBbdmFsdWVdID0gUmVhY3QudXNlU3RhdGUoKCkgPT4gY3JlYXRlVmFsdWUoKSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5Q29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZSwgY2hpbGRyZW46IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gY2hpbGRyZW4odmFsdWUpIDogY2hpbGRyZW4gfSk7XG59O1xuZXhwb3J0IHtcbiAgUXVlcnlFcnJvclJlc2V0Qm91bmRhcnksXG4gIHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UXVlcnlFcnJvclJlc2V0Qm91bmRhcnkuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwianN4IiwiY3JlYXRlVmFsdWUiLCJpc1Jlc2V0IiwiY2xlYXJSZXNldCIsInJlc2V0IiwiUXVlcnlFcnJvclJlc2V0Qm91bmRhcnlDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5IiwidXNlQ29udGV4dCIsIlF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5IiwiY2hpbGRyZW4iLCJ2YWx1ZSIsInVzZVN0YXRlIiwiUHJvdmlkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensurePreventErrorBoundaryRetry: () => (/* binding */ ensurePreventErrorBoundaryRetry),\n/* harmony export */   getHasError: () => (/* binding */ getHasError),\n/* harmony export */   useClearResetErrorBoundary: () => (/* binding */ useClearResetErrorBoundary)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/utils.js\");\n/* __next_internal_client_entry_do_not_use__ ensurePreventErrorBoundaryRetry,getHasError,useClearResetErrorBoundary auto */ // src/errorBoundaryUtils.ts\n\n\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary)=>{\n    if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n        if (!errorResetBoundary.isReset()) {\n            options.retryOnMount = false;\n        }\n    }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary)=>{\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        errorResetBoundary.clearReset();\n    }, [\n        errorResetBoundary\n    ]);\n};\nvar getHasError = ({ result, errorResetBoundary, throwOnError, query, suspense })=>{\n    return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldThrowError)(throwOnError, [\n        result.error,\n        query\n    ]));\n};\n //# sourceMappingURL=errorBoundaryUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9lcnJvckJvdW5kYXJ5VXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7NEhBRUEsNEJBQTRCO0FBQ0c7QUFDZTtBQUM5QyxJQUFJRSxrQ0FBa0MsQ0FBQ0MsU0FBU0M7SUFDOUMsSUFBSUQsUUFBUUUsUUFBUSxJQUFJRixRQUFRRyxZQUFZLElBQUlILFFBQVFJLDZCQUE2QixFQUFFO1FBQ3JGLElBQUksQ0FBQ0gsbUJBQW1CSSxPQUFPLElBQUk7WUFDakNMLFFBQVFNLFlBQVksR0FBRztRQUN6QjtJQUNGO0FBQ0Y7QUFDQSxJQUFJQyw2QkFBNkIsQ0FBQ047SUFDaENKLDRDQUFlLENBQUM7UUFDZEksbUJBQW1CUSxVQUFVO0lBQy9CLEdBQUc7UUFBQ1I7S0FBbUI7QUFDekI7QUFDQSxJQUFJUyxjQUFjLENBQUMsRUFDakJDLE1BQU0sRUFDTlYsa0JBQWtCLEVBQ2xCRSxZQUFZLEVBQ1pTLEtBQUssRUFDTFYsUUFBUSxFQUNUO0lBQ0MsT0FBT1MsT0FBT0UsT0FBTyxJQUFJLENBQUNaLG1CQUFtQkksT0FBTyxNQUFNLENBQUNNLE9BQU9HLFVBQVUsSUFBSUYsU0FBVVYsQ0FBQUEsWUFBWVMsT0FBT0ksSUFBSSxLQUFLLEtBQUssS0FBS2pCLDJEQUFnQkEsQ0FBQ0ssY0FBYztRQUFDUSxPQUFPSyxLQUFLO1FBQUVKO0tBQU07QUFDdEw7QUFLRSxDQUNGLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnRfcmVsYXRpb25zaGlwX25leHRqcy8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL2Vycm9yQm91bmRhcnlVdGlscy5qcz9mZjAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vLyBzcmMvZXJyb3JCb3VuZGFyeVV0aWxzLnRzXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHNob3VsZFRocm93RXJyb3IgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xudmFyIGVuc3VyZVByZXZlbnRFcnJvckJvdW5kYXJ5UmV0cnkgPSAob3B0aW9ucywgZXJyb3JSZXNldEJvdW5kYXJ5KSA9PiB7XG4gIGlmIChvcHRpb25zLnN1c3BlbnNlIHx8IG9wdGlvbnMudGhyb3dPbkVycm9yIHx8IG9wdGlvbnMuZXhwZXJpbWVudGFsX3ByZWZldGNoSW5SZW5kZXIpIHtcbiAgICBpZiAoIWVycm9yUmVzZXRCb3VuZGFyeS5pc1Jlc2V0KCkpIHtcbiAgICAgIG9wdGlvbnMucmV0cnlPbk1vdW50ID0gZmFsc2U7XG4gICAgfVxuICB9XG59O1xudmFyIHVzZUNsZWFyUmVzZXRFcnJvckJvdW5kYXJ5ID0gKGVycm9yUmVzZXRCb3VuZGFyeSkgPT4ge1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGVycm9yUmVzZXRCb3VuZGFyeS5jbGVhclJlc2V0KCk7XG4gIH0sIFtlcnJvclJlc2V0Qm91bmRhcnldKTtcbn07XG52YXIgZ2V0SGFzRXJyb3IgPSAoe1xuICByZXN1bHQsXG4gIGVycm9yUmVzZXRCb3VuZGFyeSxcbiAgdGhyb3dPbkVycm9yLFxuICBxdWVyeSxcbiAgc3VzcGVuc2Vcbn0pID0+IHtcbiAgcmV0dXJuIHJlc3VsdC5pc0Vycm9yICYmICFlcnJvclJlc2V0Qm91bmRhcnkuaXNSZXNldCgpICYmICFyZXN1bHQuaXNGZXRjaGluZyAmJiBxdWVyeSAmJiAoc3VzcGVuc2UgJiYgcmVzdWx0LmRhdGEgPT09IHZvaWQgMCB8fCBzaG91bGRUaHJvd0Vycm9yKHRocm93T25FcnJvciwgW3Jlc3VsdC5lcnJvciwgcXVlcnldKSk7XG59O1xuZXhwb3J0IHtcbiAgZW5zdXJlUHJldmVudEVycm9yQm91bmRhcnlSZXRyeSxcbiAgZ2V0SGFzRXJyb3IsXG4gIHVzZUNsZWFyUmVzZXRFcnJvckJvdW5kYXJ5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JCb3VuZGFyeVV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsInNob3VsZFRocm93RXJyb3IiLCJlbnN1cmVQcmV2ZW50RXJyb3JCb3VuZGFyeVJldHJ5Iiwib3B0aW9ucyIsImVycm9yUmVzZXRCb3VuZGFyeSIsInN1c3BlbnNlIiwidGhyb3dPbkVycm9yIiwiZXhwZXJpbWVudGFsX3ByZWZldGNoSW5SZW5kZXIiLCJpc1Jlc2V0IiwicmV0cnlPbk1vdW50IiwidXNlQ2xlYXJSZXNldEVycm9yQm91bmRhcnkiLCJ1c2VFZmZlY3QiLCJjbGVhclJlc2V0IiwiZ2V0SGFzRXJyb3IiLCJyZXN1bHQiLCJxdWVyeSIsImlzRXJyb3IiLCJpc0ZldGNoaW5nIiwiZGF0YSIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/isRestoring.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/isRestoring.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IsRestoringProvider: () => (/* binding */ IsRestoringProvider),\n/* harmony export */   useIsRestoring: () => (/* binding */ useIsRestoring)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* __next_internal_client_entry_do_not_use__ IsRestoringProvider,useIsRestoring auto */ // src/isRestoring.ts\n\nvar IsRestoringContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(false);\nvar useIsRestoring = ()=>react__WEBPACK_IMPORTED_MODULE_0__.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\n //# sourceMappingURL=isRestoring.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9pc1Jlc3RvcmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7d0ZBRUEscUJBQXFCO0FBQ1U7QUFDL0IsSUFBSUMsbUNBQXFCRCxnREFBbUIsQ0FBQztBQUM3QyxJQUFJRyxpQkFBaUIsSUFBTUgsNkNBQWdCLENBQUNDO0FBQzVDLElBQUlJLHNCQUFzQkosbUJBQW1CSyxRQUFRO0FBSW5ELENBQ0YsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudF9yZWxhdGlvbnNoaXBfbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vaXNSZXN0b3JpbmcuanM/Mzc4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuLy8gc3JjL2lzUmVzdG9yaW5nLnRzXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbnZhciBJc1Jlc3RvcmluZ0NvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGZhbHNlKTtcbnZhciB1c2VJc1Jlc3RvcmluZyA9ICgpID0+IFJlYWN0LnVzZUNvbnRleHQoSXNSZXN0b3JpbmdDb250ZXh0KTtcbnZhciBJc1Jlc3RvcmluZ1Byb3ZpZGVyID0gSXNSZXN0b3JpbmdDb250ZXh0LlByb3ZpZGVyO1xuZXhwb3J0IHtcbiAgSXNSZXN0b3JpbmdQcm92aWRlcixcbiAgdXNlSXNSZXN0b3Jpbmdcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc1Jlc3RvcmluZy5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJJc1Jlc3RvcmluZ0NvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidXNlSXNSZXN0b3JpbmciLCJ1c2VDb250ZXh0IiwiSXNSZXN0b3JpbmdQcm92aWRlciIsIlByb3ZpZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/isRestoring.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/suspense.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/suspense.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultThrowOnError: () => (/* binding */ defaultThrowOnError),\n/* harmony export */   ensureSuspenseTimers: () => (/* binding */ ensureSuspenseTimers),\n/* harmony export */   fetchOptimistic: () => (/* binding */ fetchOptimistic),\n/* harmony export */   shouldSuspend: () => (/* binding */ shouldSuspend),\n/* harmony export */   willFetch: () => (/* binding */ willFetch)\n/* harmony export */ });\n// src/suspense.ts\nvar defaultThrowOnError = (_error, query)=>query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions)=>{\n    const originalStaleTime = defaultedOptions.staleTime;\n    if (defaultedOptions.suspense) {\n        defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args)=>Math.max(originalStaleTime(...args), 1e3) : Math.max(originalStaleTime ?? 1e3, 1e3);\n        if (typeof defaultedOptions.gcTime === \"number\") {\n            defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n        }\n    }\n};\nvar willFetch = (result, isRestoring)=>result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result)=>defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary)=>observer.fetchOptimistic(defaultedOptions).catch(()=>{\n        errorResetBoundary.clearReset();\n    });\n //# sourceMappingURL=suspense.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9zdXNwZW5zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGtCQUFrQjtBQUNsQixJQUFJQSxzQkFBc0IsQ0FBQ0MsUUFBUUMsUUFBVUEsTUFBTUMsS0FBSyxDQUFDQyxJQUFJLEtBQUssS0FBSztBQUN2RSxJQUFJQyx1QkFBdUIsQ0FBQ0M7SUFDMUIsTUFBTUMsb0JBQW9CRCxpQkFBaUJFLFNBQVM7SUFDcEQsSUFBSUYsaUJBQWlCRyxRQUFRLEVBQUU7UUFDN0JILGlCQUFpQkUsU0FBUyxHQUFHLE9BQU9ELHNCQUFzQixhQUFhLENBQUMsR0FBR0csT0FBU0MsS0FBS0MsR0FBRyxDQUFDTCxxQkFBcUJHLE9BQU8sT0FBT0MsS0FBS0MsR0FBRyxDQUFDTCxxQkFBcUIsS0FBSztRQUNuSyxJQUFJLE9BQU9ELGlCQUFpQk8sTUFBTSxLQUFLLFVBQVU7WUFDL0NQLGlCQUFpQk8sTUFBTSxHQUFHRixLQUFLQyxHQUFHLENBQUNOLGlCQUFpQk8sTUFBTSxFQUFFO1FBQzlEO0lBQ0Y7QUFDRjtBQUNBLElBQUlDLFlBQVksQ0FBQ0MsUUFBUUMsY0FBZ0JELE9BQU9FLFNBQVMsSUFBSUYsT0FBT0csVUFBVSxJQUFJLENBQUNGO0FBQ25GLElBQUlHLGdCQUFnQixDQUFDYixrQkFBa0JTLFNBQVdULGtCQUFrQkcsWUFBWU0sT0FBT0ssU0FBUztBQUNoRyxJQUFJQyxrQkFBa0IsQ0FBQ2Ysa0JBQWtCZ0IsVUFBVUMscUJBQXVCRCxTQUFTRCxlQUFlLENBQUNmLGtCQUFrQmtCLEtBQUssQ0FBQztRQUN6SEQsbUJBQW1CRSxVQUFVO0lBQy9CO0FBT0UsQ0FDRixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkZW50X3JlbGF0aW9uc2hpcF9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9zdXNwZW5zZS5qcz8xYzEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zdXNwZW5zZS50c1xudmFyIGRlZmF1bHRUaHJvd09uRXJyb3IgPSAoX2Vycm9yLCBxdWVyeSkgPT4gcXVlcnkuc3RhdGUuZGF0YSA9PT0gdm9pZCAwO1xudmFyIGVuc3VyZVN1c3BlbnNlVGltZXJzID0gKGRlZmF1bHRlZE9wdGlvbnMpID0+IHtcbiAgY29uc3Qgb3JpZ2luYWxTdGFsZVRpbWUgPSBkZWZhdWx0ZWRPcHRpb25zLnN0YWxlVGltZTtcbiAgaWYgKGRlZmF1bHRlZE9wdGlvbnMuc3VzcGVuc2UpIHtcbiAgICBkZWZhdWx0ZWRPcHRpb25zLnN0YWxlVGltZSA9IHR5cGVvZiBvcmlnaW5hbFN0YWxlVGltZSA9PT0gXCJmdW5jdGlvblwiID8gKC4uLmFyZ3MpID0+IE1hdGgubWF4KG9yaWdpbmFsU3RhbGVUaW1lKC4uLmFyZ3MpLCAxZTMpIDogTWF0aC5tYXgob3JpZ2luYWxTdGFsZVRpbWUgPz8gMWUzLCAxZTMpO1xuICAgIGlmICh0eXBlb2YgZGVmYXVsdGVkT3B0aW9ucy5nY1RpbWUgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMuZ2NUaW1lID0gTWF0aC5tYXgoZGVmYXVsdGVkT3B0aW9ucy5nY1RpbWUsIDFlMyk7XG4gICAgfVxuICB9XG59O1xudmFyIHdpbGxGZXRjaCA9IChyZXN1bHQsIGlzUmVzdG9yaW5nKSA9PiByZXN1bHQuaXNMb2FkaW5nICYmIHJlc3VsdC5pc0ZldGNoaW5nICYmICFpc1Jlc3RvcmluZztcbnZhciBzaG91bGRTdXNwZW5kID0gKGRlZmF1bHRlZE9wdGlvbnMsIHJlc3VsdCkgPT4gZGVmYXVsdGVkT3B0aW9ucz8uc3VzcGVuc2UgJiYgcmVzdWx0LmlzUGVuZGluZztcbnZhciBmZXRjaE9wdGltaXN0aWMgPSAoZGVmYXVsdGVkT3B0aW9ucywgb2JzZXJ2ZXIsIGVycm9yUmVzZXRCb3VuZGFyeSkgPT4gb2JzZXJ2ZXIuZmV0Y2hPcHRpbWlzdGljKGRlZmF1bHRlZE9wdGlvbnMpLmNhdGNoKCgpID0+IHtcbiAgZXJyb3JSZXNldEJvdW5kYXJ5LmNsZWFyUmVzZXQoKTtcbn0pO1xuZXhwb3J0IHtcbiAgZGVmYXVsdFRocm93T25FcnJvcixcbiAgZW5zdXJlU3VzcGVuc2VUaW1lcnMsXG4gIGZldGNoT3B0aW1pc3RpYyxcbiAgc2hvdWxkU3VzcGVuZCxcbiAgd2lsbEZldGNoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3VzcGVuc2UuanMubWFwIl0sIm5hbWVzIjpbImRlZmF1bHRUaHJvd09uRXJyb3IiLCJfZXJyb3IiLCJxdWVyeSIsInN0YXRlIiwiZGF0YSIsImVuc3VyZVN1c3BlbnNlVGltZXJzIiwiZGVmYXVsdGVkT3B0aW9ucyIsIm9yaWdpbmFsU3RhbGVUaW1lIiwic3RhbGVUaW1lIiwic3VzcGVuc2UiLCJhcmdzIiwiTWF0aCIsIm1heCIsImdjVGltZSIsIndpbGxGZXRjaCIsInJlc3VsdCIsImlzUmVzdG9yaW5nIiwiaXNMb2FkaW5nIiwiaXNGZXRjaGluZyIsInNob3VsZFN1c3BlbmQiLCJpc1BlbmRpbmciLCJmZXRjaE9wdGltaXN0aWMiLCJvYnNlcnZlciIsImVycm9yUmVzZXRCb3VuZGFyeSIsImNhdGNoIiwiY2xlYXJSZXNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/suspense.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/useBaseQuery.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/useBaseQuery.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBaseQuery: () => (/* binding */ useBaseQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _QueryClientProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueryClientProvider.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _QueryErrorResetBoundary_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./QueryErrorResetBoundary.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js\");\n/* harmony import */ var _errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errorBoundaryUtils.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js\");\n/* harmony import */ var _isRestoring_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isRestoring.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/isRestoring.js\");\n/* harmony import */ var _suspense_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./suspense.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/suspense.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/utils.js\");\n/* __next_internal_client_entry_do_not_use__ useBaseQuery auto */ // src/useBaseQuery.ts\n\n\n\n\n\n\n\n\nfunction useBaseQuery(options, Observer, queryClient) {\n    if (true) {\n        if (typeof options !== \"object\" || Array.isArray(options)) {\n            throw new Error('Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object');\n        }\n    }\n    const client = (0,_QueryClientProvider_js__WEBPACK_IMPORTED_MODULE_1__.useQueryClient)(queryClient);\n    const isRestoring = (0,_isRestoring_js__WEBPACK_IMPORTED_MODULE_2__.useIsRestoring)();\n    const errorResetBoundary = (0,_QueryErrorResetBoundary_js__WEBPACK_IMPORTED_MODULE_3__.useQueryErrorResetBoundary)();\n    const defaultedOptions = client.defaultQueryOptions(options);\n    client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions);\n    if (true) {\n        if (!defaultedOptions.queryFn) {\n            console.error(`[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`);\n        }\n    }\n    defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n    (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.ensureSuspenseTimers)(defaultedOptions);\n    (0,_errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n    (0,_errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__.useClearResetErrorBoundary)(errorResetBoundary);\n    const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n    const [observer] = react__WEBPACK_IMPORTED_MODULE_0__.useState(()=>new Observer(client, defaultedOptions));\n    const result = observer.getOptimisticResult(defaultedOptions);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore(react__WEBPACK_IMPORTED_MODULE_0__.useCallback((onStoreChange)=>{\n        const unsubscribe = shouldSubscribe ? observer.subscribe(_tanstack_query_core__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batchCalls(onStoreChange)) : _utils_js__WEBPACK_IMPORTED_MODULE_7__.noop;\n        observer.updateResult();\n        return unsubscribe;\n    }, [\n        observer,\n        shouldSubscribe\n    ]), ()=>observer.getCurrentResult(), ()=>observer.getCurrentResult());\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        observer.setOptions(defaultedOptions);\n    }, [\n        defaultedOptions,\n        observer\n    ]);\n    if ((0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.shouldSuspend)(defaultedOptions, result)) {\n        throw (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n    }\n    if ((0,_errorBoundaryUtils_js__WEBPACK_IMPORTED_MODULE_5__.getHasError)({\n        result,\n        errorResetBoundary,\n        throwOnError: defaultedOptions.throwOnError,\n        query: client.getQueryCache().get(defaultedOptions.queryHash),\n        suspense: defaultedOptions.suspense\n    })) {\n        throw result.error;\n    }\n    ;\n    client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions, result);\n    if (defaultedOptions.experimental_prefetchInRender && !_tanstack_query_core__WEBPACK_IMPORTED_MODULE_8__.isServer && (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.willFetch)(result, isRestoring)) {\n        const promise = isNewCacheEntry ? // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n        (0,_suspense_js__WEBPACK_IMPORTED_MODULE_4__.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary) : // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n        client.getQueryCache().get(defaultedOptions.queryHash)?.promise;\n        promise?.catch(_utils_js__WEBPACK_IMPORTED_MODULE_7__.noop).finally(()=>{\n            observer.updateResult();\n        });\n    }\n    return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n //# sourceMappingURL=useBaseQuery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/useBaseQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/useMutation.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/useMutation.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMutation: () => (/* binding */ useMutation)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationObserver.js\");\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _QueryClientProvider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueryClientProvider.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/utils.js\");\n/* __next_internal_client_entry_do_not_use__ useMutation auto */ // src/useMutation.ts\n\n\n\n\nfunction useMutation(options, queryClient) {\n    const client = (0,_QueryClientProvider_js__WEBPACK_IMPORTED_MODULE_1__.useQueryClient)(queryClient);\n    const [observer] = react__WEBPACK_IMPORTED_MODULE_0__.useState(()=>new _tanstack_query_core__WEBPACK_IMPORTED_MODULE_2__.MutationObserver(client, options));\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        observer.setOptions(options);\n    }, [\n        observer,\n        options\n    ]);\n    const result = react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore(react__WEBPACK_IMPORTED_MODULE_0__.useCallback((onStoreChange)=>observer.subscribe(_tanstack_query_core__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batchCalls(onStoreChange)), [\n        observer\n    ]), ()=>observer.getCurrentResult(), ()=>observer.getCurrentResult());\n    const mutate = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((variables, mutateOptions)=>{\n        observer.mutate(variables, mutateOptions).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }, [\n        observer\n    ]);\n    if (result.error && (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.shouldThrowError)(observer.options.throwOnError, [\n        result.error\n    ])) {\n        throw result.error;\n    }\n    return {\n        ...result,\n        mutate,\n        mutateAsync: result.mutate\n    };\n}\n //# sourceMappingURL=useMutation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi91c2VNdXRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7aUVBRUEscUJBQXFCO0FBQ1U7QUFDd0M7QUFDYjtBQUNOO0FBQ3BELFNBQVNNLFlBQVlDLE9BQU8sRUFBRUMsV0FBVztJQUN2QyxNQUFNQyxTQUFTTix1RUFBY0EsQ0FBQ0s7SUFDOUIsTUFBTSxDQUFDRSxTQUFTLEdBQUdWLDJDQUFjLENBQy9CLElBQU0sSUFBSUMsa0VBQWdCQSxDQUN4QlEsUUFDQUY7SUFHSlAsNENBQWUsQ0FBQztRQUNkVSxTQUFTRyxVQUFVLENBQUNOO0lBQ3RCLEdBQUc7UUFBQ0c7UUFBVUg7S0FBUTtJQUN0QixNQUFNTyxTQUFTZCx1REFBMEIsQ0FDdkNBLDhDQUFpQixDQUNmLENBQUNpQixnQkFBa0JQLFNBQVNRLFNBQVMsQ0FBQ2hCLCtEQUFhQSxDQUFDaUIsVUFBVSxDQUFDRixpQkFDL0Q7UUFBQ1A7S0FBUyxHQUVaLElBQU1BLFNBQVNVLGdCQUFnQixJQUMvQixJQUFNVixTQUFTVSxnQkFBZ0I7SUFFakMsTUFBTUMsU0FBU3JCLDhDQUFpQixDQUM5QixDQUFDc0IsV0FBV0M7UUFDVmIsU0FBU1csTUFBTSxDQUFDQyxXQUFXQyxlQUFlQyxLQUFLLENBQUNwQiwyQ0FBSUE7SUFDdEQsR0FDQTtRQUFDTTtLQUFTO0lBRVosSUFBSUksT0FBT1csS0FBSyxJQUFJcEIsMkRBQWdCQSxDQUFDSyxTQUFTSCxPQUFPLENBQUNtQixZQUFZLEVBQUU7UUFBQ1osT0FBT1csS0FBSztLQUFDLEdBQUc7UUFDbkYsTUFBTVgsT0FBT1csS0FBSztJQUNwQjtJQUNBLE9BQU87UUFBRSxHQUFHWCxNQUFNO1FBQUVPO1FBQVFNLGFBQWFiLE9BQU9PLE1BQU07SUFBQztBQUN6RDtBQUdFLENBQ0YsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudF9yZWxhdGlvbnNoaXBfbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vdXNlTXV0YXRpb24uanM/YjQxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuLy8gc3JjL3VzZU11dGF0aW9uLnRzXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IE11dGF0aW9uT2JzZXJ2ZXIsIG5vdGlmeU1hbmFnZXIgfSBmcm9tIFwiQHRhbnN0YWNrL3F1ZXJ5LWNvcmVcIjtcbmltcG9ydCB7IHVzZVF1ZXJ5Q2xpZW50IH0gZnJvbSBcIi4vUXVlcnlDbGllbnRQcm92aWRlci5qc1wiO1xuaW1wb3J0IHsgbm9vcCwgc2hvdWxkVGhyb3dFcnJvciB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5mdW5jdGlvbiB1c2VNdXRhdGlvbihvcHRpb25zLCBxdWVyeUNsaWVudCkge1xuICBjb25zdCBjbGllbnQgPSB1c2VRdWVyeUNsaWVudChxdWVyeUNsaWVudCk7XG4gIGNvbnN0IFtvYnNlcnZlcl0gPSBSZWFjdC51c2VTdGF0ZShcbiAgICAoKSA9PiBuZXcgTXV0YXRpb25PYnNlcnZlcihcbiAgICAgIGNsaWVudCxcbiAgICAgIG9wdGlvbnNcbiAgICApXG4gICk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgb2JzZXJ2ZXIuc2V0T3B0aW9ucyhvcHRpb25zKTtcbiAgfSwgW29ic2VydmVyLCBvcHRpb25zXSk7XG4gIGNvbnN0IHJlc3VsdCA9IFJlYWN0LnVzZVN5bmNFeHRlcm5hbFN0b3JlKFxuICAgIFJlYWN0LnVzZUNhbGxiYWNrKFxuICAgICAgKG9uU3RvcmVDaGFuZ2UpID0+IG9ic2VydmVyLnN1YnNjcmliZShub3RpZnlNYW5hZ2VyLmJhdGNoQ2FsbHMob25TdG9yZUNoYW5nZSkpLFxuICAgICAgW29ic2VydmVyXVxuICAgICksXG4gICAgKCkgPT4gb2JzZXJ2ZXIuZ2V0Q3VycmVudFJlc3VsdCgpLFxuICAgICgpID0+IG9ic2VydmVyLmdldEN1cnJlbnRSZXN1bHQoKVxuICApO1xuICBjb25zdCBtdXRhdGUgPSBSZWFjdC51c2VDYWxsYmFjayhcbiAgICAodmFyaWFibGVzLCBtdXRhdGVPcHRpb25zKSA9PiB7XG4gICAgICBvYnNlcnZlci5tdXRhdGUodmFyaWFibGVzLCBtdXRhdGVPcHRpb25zKS5jYXRjaChub29wKTtcbiAgICB9LFxuICAgIFtvYnNlcnZlcl1cbiAgKTtcbiAgaWYgKHJlc3VsdC5lcnJvciAmJiBzaG91bGRUaHJvd0Vycm9yKG9ic2VydmVyLm9wdGlvbnMudGhyb3dPbkVycm9yLCBbcmVzdWx0LmVycm9yXSkpIHtcbiAgICB0aHJvdyByZXN1bHQuZXJyb3I7XG4gIH1cbiAgcmV0dXJuIHsgLi4ucmVzdWx0LCBtdXRhdGUsIG11dGF0ZUFzeW5jOiByZXN1bHQubXV0YXRlIH07XG59XG5leHBvcnQge1xuICB1c2VNdXRhdGlvblxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZU11dGF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJub3RpZnlNYW5hZ2VyIiwidXNlUXVlcnlDbGllbnQiLCJub29wIiwic2hvdWxkVGhyb3dFcnJvciIsInVzZU11dGF0aW9uIiwib3B0aW9ucyIsInF1ZXJ5Q2xpZW50IiwiY2xpZW50Iiwib2JzZXJ2ZXIiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInNldE9wdGlvbnMiLCJyZXN1bHQiLCJ1c2VTeW5jRXh0ZXJuYWxTdG9yZSIsInVzZUNhbGxiYWNrIiwib25TdG9yZUNoYW5nZSIsInN1YnNjcmliZSIsImJhdGNoQ2FsbHMiLCJnZXRDdXJyZW50UmVzdWx0IiwibXV0YXRlIiwidmFyaWFibGVzIiwibXV0YXRlT3B0aW9ucyIsImNhdGNoIiwiZXJyb3IiLCJ0aHJvd09uRXJyb3IiLCJtdXRhdGVBc3luYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/useMutation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/useQuery.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/useQuery.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useQuery: () => (/* binding */ useQuery)\n/* harmony export */ });\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/queryObserver.js\");\n/* harmony import */ var _useBaseQuery_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useBaseQuery.js */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/useBaseQuery.js\");\n/* __next_internal_client_entry_do_not_use__ useQuery auto */ // src/useQuery.ts\n\n\nfunction useQuery(options, queryClient) {\n    return (0,_useBaseQuery_js__WEBPACK_IMPORTED_MODULE_0__.useBaseQuery)(options, _tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__.QueryObserver, queryClient);\n}\n //# sourceMappingURL=useQuery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi91c2VRdWVyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OERBRUEsa0JBQWtCO0FBQ21DO0FBQ0o7QUFDakQsU0FBU0UsU0FBU0MsT0FBTyxFQUFFQyxXQUFXO0lBQ3BDLE9BQU9ILDhEQUFZQSxDQUFDRSxTQUFTSCwrREFBYUEsRUFBRUk7QUFDOUM7QUFHRSxDQUNGLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWRlbnRfcmVsYXRpb25zaGlwX25leHRqcy8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL3VzZVF1ZXJ5LmpzP2NkNDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbi8vIHNyYy91c2VRdWVyeS50c1xuaW1wb3J0IHsgUXVlcnlPYnNlcnZlciB9IGZyb20gXCJAdGFuc3RhY2svcXVlcnktY29yZVwiO1xuaW1wb3J0IHsgdXNlQmFzZVF1ZXJ5IH0gZnJvbSBcIi4vdXNlQmFzZVF1ZXJ5LmpzXCI7XG5mdW5jdGlvbiB1c2VRdWVyeShvcHRpb25zLCBxdWVyeUNsaWVudCkge1xuICByZXR1cm4gdXNlQmFzZVF1ZXJ5KG9wdGlvbnMsIFF1ZXJ5T2JzZXJ2ZXIsIHF1ZXJ5Q2xpZW50KTtcbn1cbmV4cG9ydCB7XG4gIHVzZVF1ZXJ5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlUXVlcnkuanMubWFwIl0sIm5hbWVzIjpbIlF1ZXJ5T2JzZXJ2ZXIiLCJ1c2VCYXNlUXVlcnkiLCJ1c2VRdWVyeSIsIm9wdGlvbnMiLCJxdWVyeUNsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   shouldThrowError: () => (/* binding */ shouldThrowError)\n/* harmony export */ });\n// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n    if (typeof throwError === \"function\") {\n        return throwError(...params);\n    }\n    return !!throwError;\n}\nfunction noop() {}\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGVBQWU7QUFDZixTQUFTQSxpQkFBaUJDLFVBQVUsRUFBRUMsTUFBTTtJQUMxQyxJQUFJLE9BQU9ELGVBQWUsWUFBWTtRQUNwQyxPQUFPQSxjQUFjQztJQUN2QjtJQUNBLE9BQU8sQ0FBQyxDQUFDRDtBQUNYO0FBQ0EsU0FBU0UsUUFDVDtBQUlFLENBQ0YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudF9yZWxhdGlvbnNoaXBfbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vdXRpbHMuanM/MGM1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMudHNcbmZ1bmN0aW9uIHNob3VsZFRocm93RXJyb3IodGhyb3dFcnJvciwgcGFyYW1zKSB7XG4gIGlmICh0eXBlb2YgdGhyb3dFcnJvciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIHRocm93RXJyb3IoLi4ucGFyYW1zKTtcbiAgfVxuICByZXR1cm4gISF0aHJvd0Vycm9yO1xufVxuZnVuY3Rpb24gbm9vcCgpIHtcbn1cbmV4cG9ydCB7XG4gIG5vb3AsXG4gIHNob3VsZFRocm93RXJyb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsic2hvdWxkVGhyb3dFcnJvciIsInRocm93RXJyb3IiLCJwYXJhbXMiLCJub29wIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/utils.js\n");

/***/ })

};
;